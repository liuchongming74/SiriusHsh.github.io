<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>nEver Enough</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-09-07T07:57:54.138Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>SiriusHsh</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Windows通过cmd查看端口占用杀死进程的命令</title>
    <link href="http://yoursite.com/2016/09/07/Windows%E9%80%9A%E8%BF%87cmd%E6%9F%A5%E7%9C%8B%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8%E6%9D%80%E6%AD%BB%E8%BF%9B%E7%A8%8B%E7%9A%84%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2016/09/07/Windows通过cmd查看端口占用杀死进程的命令/</id>
    <published>2016-09-07T07:53:17.000Z</published>
    <updated>2016-09-07T07:57:54.138Z</updated>
    
    <content type="html"><![CDATA[<p>最近运行<code>hexo s</code>的时候有时候会遇到4000端口被占用的情况，记录一下杀死占用4000端口进程的过程。</p>
<ol>
<li><code>netstat -ano</code>查看所有进程，<code>netstat -ano|findstr &quot;4000&quot;</code>查看4000端口的情况。</li>
<li>这时候能获取到进程的PID，打开任务管理器找到该进程杀死即可。(没有显示PID的情况：查看 -&gt; 选择列 -&gt; 勾选PID)</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近运行&lt;code&gt;hexo s&lt;/code&gt;的时候有时候会遇到4000端口被占用的情况，记录一下杀死占用4000端口进程的过程。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;netstat -ano&lt;/code&gt;查看所有进程，&lt;code&gt;netstat -ano|findstr
    
    </summary>
    
      <category term="问题解决" scheme="http://yoursite.com/categories/%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
    
      <category term="Windows" scheme="http://yoursite.com/tags/Windows/"/>
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>1024. 科学计数法</title>
    <link href="http://yoursite.com/2016/09/07/1024-%E7%A7%91%E5%AD%A6%E8%AE%A1%E6%95%B0%E6%B3%95/"/>
    <id>http://yoursite.com/2016/09/07/1024-科学计数法/</id>
    <published>2016-09-07T03:07:20.000Z</published>
    <updated>2016-09-08T02:51:53.136Z</updated>
    
    <content type="html"><![CDATA[<p>原题：<br>科学计数法是科学家用来表示很大或很小的数字的一种方便的方法，其满足正则表达式[+-][1-9]”.”[0-9]+E[+-][0-9]+，即数字的整数部分只有1位，小数部分至少有1位，该数字及其指数部分的正负号即使对正数也必定明确给出。</p>
<p>现以科学计数法的格式给出实数A，请编写程序按普通数字表示法输出A，并保证所有有效位都被保留。</p>
<p><strong>输入格式：</strong></p>
<p>每个输入包含1个测试用例，即一个以科学计数法表示的实数A。该数字的存储长度不超过9999字节，且其指数的绝对值不超过9999。</p>
<p><strong>输出格式：</strong></p>
<p>对每个测试用例，在一行中按普通数字表示法输出A，并保证所有有效位都被保留，包括末尾的0。</p>
<p><strong>输入样例1：</strong><br>+1.23400E-03<br><strong>输出样例1：</strong><br>0.00123400<br><strong>输入样例2：</strong><br>-1.2E+10<br><strong>输出样例2：</strong><br>-12000000000</p>
<a id="more"></a>
<p>解答：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;	</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	<span class="comment">//freopen("input.txt","r",stdin);</span></div><div class="line">	<span class="built_in">string</span> str,str1,str2;</div><div class="line">	<span class="keyword">bool</span> flag = <span class="literal">true</span>;</div><div class="line">	<span class="built_in">cin</span>&gt;&gt;str;</div><div class="line">	<span class="built_in">string</span>::size_type p = str.find_first_of(<span class="string">'E'</span>);</div><div class="line">	str1.assign(str,<span class="number">1</span>,p<span class="number">-1</span>);</div><div class="line">	str2.assign(str,p+<span class="number">2</span>,str.size() - p - <span class="number">2</span>);</div><div class="line">	<span class="keyword">int</span> b = atoi(str2.c_str());</div><div class="line">	<span class="keyword">if</span>(str[<span class="number">0</span>] == <span class="string">'-'</span>)</div><div class="line">		<span class="built_in">cout</span>&lt;&lt;<span class="string">"-"</span>;</div><div class="line">	<span class="keyword">if</span>(str[p+<span class="number">1</span>] == <span class="string">'-'</span>)&#123;</div><div class="line">		<span class="keyword">while</span>(b--)&#123;</div><div class="line">			<span class="built_in">cout</span>&lt;&lt;<span class="number">0</span>;</div><div class="line">			<span class="keyword">if</span>(flag == <span class="literal">true</span>)&#123;</div><div class="line">				<span class="built_in">cout</span>&lt;&lt;<span class="string">"."</span>;</div><div class="line">				flag = <span class="literal">false</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ;i &lt; str1.size() ; i++)&#123;</div><div class="line">			<span class="keyword">if</span>(i != <span class="number">1</span>)&#123;</div><div class="line">				<span class="built_in">cout</span>&lt;&lt;str1[i];</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;<span class="keyword">else</span>&#123;</div><div class="line">		 <span class="keyword">if</span>(b &lt; str1.size() - <span class="number">2</span>)&#123;</div><div class="line">		 	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; b + <span class="number">2</span>;i++)&#123;</div><div class="line">		 		<span class="keyword">if</span>(i != <span class="number">1</span>)</div><div class="line">		 		<span class="built_in">cout</span>&lt;&lt;str1[i];</div><div class="line">			 &#125;</div><div class="line">			 <span class="built_in">cout</span>&lt;&lt;<span class="string">"."</span>;</div><div class="line">			 <span class="keyword">for</span>(<span class="keyword">int</span> i = b + <span class="number">2</span>;i &lt; str1.size();i++)&#123;</div><div class="line">			 	<span class="built_in">cout</span>&lt;&lt;str1[i];</div><div class="line">			 &#125;</div><div class="line">		 &#125;<span class="keyword">else</span>&#123;</div><div class="line">		 	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; b + <span class="number">2</span>;i++)&#123;</div><div class="line">		 		<span class="keyword">if</span>(i != <span class="number">1</span> &amp;&amp; i &lt; str1.size())</div><div class="line">		 		<span class="built_in">cout</span>&lt;&lt;str1[i];</div><div class="line">		 		<span class="keyword">if</span>(i &gt;= str1.size() &amp;&amp; i &lt;= b+<span class="number">1</span>)</div><div class="line">		 		<span class="built_in">cout</span>&lt;&lt;<span class="string">"0"</span>;</div><div class="line">			 &#125;</div><div class="line">		&#125; </div><div class="line">	&#125;</div><div class="line">	<span class="comment">//fclose(stdin);</span></div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;	</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1024" target="_blank" rel="external">原题链接</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原题：&lt;br&gt;科学计数法是科学家用来表示很大或很小的数字的一种方便的方法，其满足正则表达式[+-][1-9]”.”[0-9]+E[+-][0-9]+，即数字的整数部分只有1位，小数部分至少有1位，该数字及其指数部分的正负号即使对正数也必定明确给出。&lt;/p&gt;
&lt;p&gt;现以科学计数法的格式给出实数A，请编写程序按普通数字表示法输出A，并保证所有有效位都被保留。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入格式：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;每个输入包含1个测试用例，即一个以科学计数法表示的实数A。该数字的存储长度不超过9999字节，且其指数的绝对值不超过9999。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输出格式：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对每个测试用例，在一行中按普通数字表示法输出A，并保证所有有效位都被保留，包括末尾的0。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入样例1：&lt;/strong&gt;&lt;br&gt;+1.23400E-03&lt;br&gt;&lt;strong&gt;输出样例1：&lt;/strong&gt;&lt;br&gt;0.00123400&lt;br&gt;&lt;strong&gt;输入样例2：&lt;/strong&gt;&lt;br&gt;-1.2E+10&lt;br&gt;&lt;strong&gt;输出样例2：&lt;/strong&gt;&lt;br&gt;-12000000000&lt;/p&gt;
    
    </summary>
    
      <category term="PAT (Basic Level) Practise" scheme="http://yoursite.com/categories/PAT-Basic-Level-Practise/"/>
    
    
      <category term="PAT" scheme="http://yoursite.com/tags/PAT/"/>
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>1023. 组个最小数</title>
    <link href="http://yoursite.com/2016/09/07/1023-%E7%BB%84%E4%B8%AA%E6%9C%80%E5%B0%8F%E6%95%B0/"/>
    <id>http://yoursite.com/2016/09/07/1023-组个最小数/</id>
    <published>2016-09-07T03:07:10.000Z</published>
    <updated>2016-09-08T02:56:14.029Z</updated>
    
    <content type="html"><![CDATA[<p>原题：<br>给定数字0-9各若干个。你可以以任意顺序排列这些数字，但必须全部使用。目标是使得最后得到的数尽可能小（注意0不能做首位）。例如：给定两个0，两个1，三个5，一个8，我们得到的最小的数就是10015558。</p>
<p>现给定数字，请编写程序输出能够组成的最小的数。</p>
<p><strong>输入格式：</strong></p>
<p>每个输入包含1个测试用例。每个测试用例在一行中给出10个非负整数，顺序表示我们拥有数字0、数字1、……数字9的个数。整数间用一个空格分隔。10个数字的总个数不超过50，且至少拥有1个非0的数字。</p>
<p><strong>输出格式：</strong></p>
<p>在一行中输出能够组成的最小的数。</p>
<p><strong>输入样例：</strong><br>2 2 0 0 0 3 0 0 1 0<br><strong>输出样例：</strong><br>10015558<br><a id="more"></a></p>
<p>解答：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="comment">//freopen("input.txt","r",stdin);</span></div><div class="line">	<span class="keyword">int</span> num;</div><div class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;vec;</div><div class="line">	<span class="keyword">int</span> flag = <span class="number">1</span>;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;num)&#123;</div><div class="line">		vec.push_back(num);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;::iterator iter = vec.begin()+<span class="number">1</span>;</div><div class="line">	<span class="keyword">while</span>(*iter == <span class="number">0</span>)&#123;</div><div class="line">		iter++;	</div><div class="line">		flag++;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;flag;	</div><div class="line">	vec[flag]--;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; vec.size();i++)&#123;</div><div class="line">		<span class="keyword">if</span>(vec[i] != <span class="number">0</span>)&#123;</div><div class="line">			<span class="keyword">while</span>(vec[i] != <span class="number">0</span>)&#123;</div><div class="line">				<span class="built_in">cout</span>&lt;&lt;i;</div><div class="line">				vec[i] = vec[i] - <span class="number">1</span>; </div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"><span class="comment">//	fclose(stdin);</span></div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1023" target="_blank" rel="external">原题链接</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原题：&lt;br&gt;给定数字0-9各若干个。你可以以任意顺序排列这些数字，但必须全部使用。目标是使得最后得到的数尽可能小（注意0不能做首位）。例如：给定两个0，两个1，三个5，一个8，我们得到的最小的数就是10015558。&lt;/p&gt;
&lt;p&gt;现给定数字，请编写程序输出能够组成的最小的数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入格式：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;每个输入包含1个测试用例。每个测试用例在一行中给出10个非负整数，顺序表示我们拥有数字0、数字1、……数字9的个数。整数间用一个空格分隔。10个数字的总个数不超过50，且至少拥有1个非0的数字。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输出格式：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在一行中输出能够组成的最小的数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入样例：&lt;/strong&gt;&lt;br&gt;2 2 0 0 0 3 0 0 1 0&lt;br&gt;&lt;strong&gt;输出样例：&lt;/strong&gt;&lt;br&gt;10015558&lt;br&gt;
    
    </summary>
    
      <category term="PAT (Basic Level) Practise" scheme="http://yoursite.com/categories/PAT-Basic-Level-Practise/"/>
    
    
      <category term="PAT" scheme="http://yoursite.com/tags/PAT/"/>
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>1022. D进制的A+B</title>
    <link href="http://yoursite.com/2016/09/07/1022-D%E8%BF%9B%E5%88%B6%E7%9A%84A-B/"/>
    <id>http://yoursite.com/2016/09/07/1022-D进制的A-B/</id>
    <published>2016-09-07T03:07:00.000Z</published>
    <updated>2016-09-08T02:56:08.807Z</updated>
    
    <content type="html"><![CDATA[<p>原题：</p>
<p>输入两个非负10进制整数A和B(&lt;=230-1)，输出A+B的D (1 &lt; D &lt;= 10)进制数。</p>
<p><strong>输入格式：</strong></p>
<p>输入在一行中依次给出3个整数A、B和D。</p>
<p><strong>输出格式：</strong></p>
<p>输出A+B的D进制数。</p>
<p><strong>输入样例：</strong><br>123 456 8<br><strong>输出样例：</strong><br>1103</p>
<a id="more"></a>
<p>解答：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> num1,num2,num3;</div><div class="line">	<span class="keyword">int</span> a;</div><div class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;vec;</div><div class="line">	<span class="built_in">cin</span>&gt;&gt;num1&gt;&gt;num2&gt;&gt;a;</div><div class="line">	num3 = num1 + num2;</div><div class="line">	<span class="keyword">while</span>(num3 != <span class="number">0</span>)&#123;</div><div class="line">		vec.push_back(num3 % a);</div><div class="line">		num3 = num3 / a;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;::iterator iter = vec.end()<span class="number">-1</span>;</div><div class="line">	<span class="keyword">if</span>(vec.size() == <span class="number">0</span>)</div><div class="line">	 <span class="built_in">cout</span>&lt;&lt;<span class="number">0</span>;</div><div class="line">	<span class="keyword">else</span>&#123;</div><div class="line">		<span class="keyword">do</span>&#123;</div><div class="line">		<span class="built_in">cout</span>&lt;&lt;*iter;</div><div class="line">		iter--;</div><div class="line">	&#125;<span class="keyword">while</span>(iter != vec.begin() - <span class="number">1</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1022" target="_blank" rel="external">原题链接</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原题：&lt;/p&gt;
&lt;p&gt;输入两个非负10进制整数A和B(&amp;lt;=230-1)，输出A+B的D (1 &amp;lt; D &amp;lt;= 10)进制数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入格式：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;输入在一行中依次给出3个整数A、B和D。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输出格式：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;输出A+B的D进制数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入样例：&lt;/strong&gt;&lt;br&gt;123 456 8&lt;br&gt;&lt;strong&gt;输出样例：&lt;/strong&gt;&lt;br&gt;1103&lt;/p&gt;
    
    </summary>
    
      <category term="PAT (Basic Level) Practise" scheme="http://yoursite.com/categories/PAT-Basic-Level-Practise/"/>
    
    
      <category term="PAT" scheme="http://yoursite.com/tags/PAT/"/>
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>1021. 个位数统计</title>
    <link href="http://yoursite.com/2016/09/07/1021-%E4%B8%AA%E4%BD%8D%E6%95%B0%E7%BB%9F%E8%AE%A1/"/>
    <id>http://yoursite.com/2016/09/07/1021-个位数统计/</id>
    <published>2016-09-07T03:06:49.000Z</published>
    <updated>2016-09-08T02:56:02.783Z</updated>
    
    <content type="html"><![CDATA[<p>原题：<br>给定一个k位整数N = dk-1<em>10k-1 + … + d1</em>101 + d0 (0&lt;=di&lt;=9, i=0,…,k-1, dk-1&gt;0)，请编写程序统计每种不同的个位数字出现的次数。例如：给定N = 100311，则有2个0，3个1，和1个3。</p>
<p><strong>输入格式：</strong></p>
<p>每个输入包含1个测试用例，即一个不超过1000位的正整数N。</p>
<p><strong>输出格式：</strong></p>
<p>对N中每一种不同的个位数字，以D:M的格式在一行中输出该位数字D及其在N中出现的次数M。要求按D的升序输出。</p>
<p><strong>输入样例：</strong><br>100311<br><strong>输出样例：</strong><br>0:2<br>1:3<br>3:1</p>
<a id="more"></a>
<p>解答：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">string</span> str;</div><div class="line">    <span class="keyword">int</span> flag0 = <span class="number">0</span>,flag1 = <span class="number">0</span>,flag2 = <span class="number">0</span>,flag3 = <span class="number">0</span>,flag4 = <span class="number">0</span>,flag5 = <span class="number">0</span>,flag6 = <span class="number">0</span>,flag7 = <span class="number">0</span>,flag8 = <span class="number">0</span>,flag9 = <span class="number">0</span>;</div><div class="line">    <span class="built_in">cin</span>&gt;&gt;str;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; str.size();i++)&#123;</div><div class="line">    	<span class="keyword">if</span>(str[i] == <span class="string">'0'</span>)</div><div class="line">    	 flag0++;</div><div class="line">    	 <span class="keyword">if</span>(str[i] == <span class="string">'1'</span>)</div><div class="line">    	 flag1++;</div><div class="line">    	 <span class="keyword">if</span>(str[i] == <span class="string">'2'</span>)</div><div class="line">    	 flag2++;</div><div class="line">    	 <span class="keyword">if</span>(str[i] == <span class="string">'3'</span>)</div><div class="line">    	 flag3++;</div><div class="line">    	 <span class="keyword">if</span>(str[i] == <span class="string">'4'</span>)</div><div class="line">    	 flag4++;</div><div class="line">    	 <span class="keyword">if</span>(str[i] == <span class="string">'5'</span>)</div><div class="line">    	 flag5++;</div><div class="line">    	 <span class="keyword">if</span>(str[i] == <span class="string">'6'</span>)</div><div class="line">    	 flag6++;</div><div class="line">    	 <span class="keyword">if</span>(str[i] == <span class="string">'7'</span>)</div><div class="line">    	 flag7++;</div><div class="line">    	 <span class="keyword">if</span>(str[i] == <span class="string">'8'</span>)</div><div class="line">    	 flag8++;</div><div class="line">    	 <span class="keyword">if</span>(str[i] == <span class="string">'9'</span>)</div><div class="line">    	 flag9++;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(flag0 != <span class="number">0</span>)</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"0:"</span>&lt;&lt;flag0&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">	<span class="keyword">if</span>(flag1 != <span class="number">0</span>)</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"1:"</span>&lt;&lt;flag1&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">	<span class="keyword">if</span>(flag2 != <span class="number">0</span>)</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"2:"</span>&lt;&lt;flag2&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">	<span class="keyword">if</span>(flag3 != <span class="number">0</span>)</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"3:"</span>&lt;&lt;flag3&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">	<span class="keyword">if</span>(flag4 != <span class="number">0</span>)</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"4:"</span>&lt;&lt;flag4&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">	<span class="keyword">if</span>(flag5 != <span class="number">0</span>)</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"5:"</span>&lt;&lt;flag5&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">	<span class="keyword">if</span>(flag6 != <span class="number">0</span>)</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"6:"</span>&lt;&lt;flag6&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">	<span class="keyword">if</span>(flag7 != <span class="number">0</span>)</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"7:"</span>&lt;&lt;flag7&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">	<span class="keyword">if</span>(flag8 != <span class="number">0</span>)</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"8:"</span>&lt;&lt;flag8&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    <span class="keyword">if</span>(flag9 != <span class="number">0</span>)</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"9:"</span>&lt;&lt;flag9&lt;&lt;<span class="built_in">endl</span>;	</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1021" target="_blank" rel="external">原题链接</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原题：&lt;br&gt;给定一个k位整数N = dk-1&lt;em&gt;10k-1 + … + d1&lt;/em&gt;101 + d0 (0&amp;lt;=di&amp;lt;=9, i=0,…,k-1, dk-1&amp;gt;0)，请编写程序统计每种不同的个位数字出现的次数。例如：给定N = 100311，则有2个0，3个1，和1个3。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入格式：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;每个输入包含1个测试用例，即一个不超过1000位的正整数N。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输出格式：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对N中每一种不同的个位数字，以D:M的格式在一行中输出该位数字D及其在N中出现的次数M。要求按D的升序输出。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入样例：&lt;/strong&gt;&lt;br&gt;100311&lt;br&gt;&lt;strong&gt;输出样例：&lt;/strong&gt;&lt;br&gt;0:2&lt;br&gt;1:3&lt;br&gt;3:1&lt;/p&gt;
    
    </summary>
    
      <category term="PAT (Basic Level) Practise" scheme="http://yoursite.com/categories/PAT-Basic-Level-Practise/"/>
    
    
      <category term="PAT" scheme="http://yoursite.com/tags/PAT/"/>
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>1019. 数字黑洞</title>
    <link href="http://yoursite.com/2016/09/07/1020-%E6%9C%88%E9%A5%BC/"/>
    <id>http://yoursite.com/2016/09/07/1020-月饼/</id>
    <published>2016-09-07T03:06:27.000Z</published>
    <updated>2016-09-08T02:55:53.964Z</updated>
    
    <content type="html"><![CDATA[<p>原题：</p>
<p>给定任一个各位数字不完全相同的4位正整数，如果我们先把4个数字按非递增排序，再按非递减排序，然后用第1个数字减第2个数字，将得到一个新的数字。一直重复这样做，我们很快会停在有“数字黑洞”之称的6174，这个神奇的数字也叫Kaprekar常数。</p>
<p>例如，我们从6767开始，将得到</p>
<p>7766 - 6677 = 1089<br>9810 - 0189 = 9621<br>9621 - 1269 = 8352<br>8532 - 2358 = 6174<br>7641 - 1467 = 6174<br>… …</p>
<p>现给定任意4位正整数，请编写程序演示到达黑洞的过程。</p>
<p><strong>输入格式：</strong></p>
<p>输入给出一个(0, 10000)区间内的正整数N。</p>
<p><strong>输出格式：</strong></p>
<p>如果N的4位数字全相等，则在一行内输出“N - N = 0000”；否则将计算的每一步在一行内输出，直到6174作为差出现，输出格式见样例。注意每个数字按4位数格式输出。</p>
<p><strong>输入样例1：</strong><br>6767<br><strong>输出样例1：</strong><br>7766 - 6677 = 1089<br>9810 - 0189 = 9621<br>9621 - 1269 = 8352<br>8532 - 2358 = 6174<br><strong>输入样例2：</strong><br>2222<br><strong>输出样例2：</strong><br>2222 - 2222 = 0000</p>
<a id="more"></a>
<p>解答：</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">#<span class="keyword">include</span>&lt;iostream&gt;</div><div class="line">#<span class="keyword">include</span>&lt;cstdlib&gt;</div><div class="line">#<span class="keyword">include</span>&lt;cstdio&gt;</div><div class="line">#<span class="keyword">include</span>&lt;vector&gt;</div><div class="line">#<span class="keyword">include</span>&lt;algorithm&gt;</div><div class="line">#<span class="keyword">include</span>&lt;iomanip&gt;</div><div class="line">using namespace std;</div><div class="line">int main(void)</div><div class="line">&#123;</div><div class="line">	int nn,<span class="keyword">n</span>,a,b,c,<span class="keyword">d</span>,temp;</div><div class="line">	vector&lt;int&gt;<span class="keyword">vec</span>;</div><div class="line">	cin&gt;&gt;<span class="keyword">n</span>;</div><div class="line">	nn = <span class="keyword">n</span>;</div><div class="line">	<span class="keyword">do</span>&#123;</div><div class="line">		a= <span class="keyword">n</span> % 10;</div><div class="line">		<span class="keyword">n</span> /= 10;</div><div class="line">		b = <span class="keyword">n</span> % 10;</div><div class="line">		<span class="keyword">n</span> /= 10;</div><div class="line">		c = <span class="keyword">n</span> % 10;</div><div class="line">		<span class="keyword">n</span> /= 10;</div><div class="line">		<span class="keyword">d</span> = <span class="keyword">n</span> % 10;</div><div class="line">		<span class="keyword">if</span>(a == b &amp;&amp; b == c &amp;&amp; c == <span class="keyword">d</span> )&#123;</div><div class="line">			cout&lt;&lt;nn&lt;&lt;<span class="string">" - "</span>&lt;&lt;nn&lt;&lt;<span class="string">" = 0000"</span>;</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">vec</span>.push_back(a);</div><div class="line">		<span class="keyword">vec</span>.push_back(b);</div><div class="line">		<span class="keyword">vec</span>.push_back(c);</div><div class="line">		<span class="keyword">vec</span>.push_back(<span class="keyword">d</span>);</div><div class="line">		<span class="keyword">sort</span>(<span class="keyword">vec</span>.begin(),<span class="keyword">vec</span>.end(),greater&lt;int&gt;());<span class="comment">//7766</span></div><div class="line">		temp = <span class="keyword">vec</span>[3] + 10 * <span class="keyword">vec</span>[2] + 100 * <span class="keyword">vec</span>[1] + 1000 * <span class="keyword">vec</span>[0];<span class="comment">//temp = 7766</span></div><div class="line">		<span class="keyword">sort</span>(<span class="keyword">vec</span>.begin(),<span class="keyword">vec</span>.end());<span class="comment">//vec : 6677</span></div><div class="line">		<span class="keyword">n</span> = <span class="keyword">vec</span>[3] + 10 * <span class="keyword">vec</span>[2] + 100 * <span class="keyword">vec</span>[1] + 1000 * <span class="keyword">vec</span>[0]; <span class="comment">//n = 6677</span></div><div class="line">		cout&lt;&lt;temp&lt;&lt;<span class="string">" - "</span>&lt;&lt;setw(4)&lt;&lt;setfill('0')&lt;&lt;<span class="keyword">n</span>&lt;&lt;<span class="string">" = "</span>&lt;&lt;setw(4)&lt;&lt;setfill('0')&lt;&lt;temp-<span class="keyword">n</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">n</span> = temp - <span class="keyword">n</span>;</div><div class="line">		<span class="keyword">vec</span>.<span class="keyword">clear</span>();</div><div class="line">	&#125;<span class="keyword">while</span>(<span class="keyword">n</span> != 6174);	</div><div class="line">	<span class="keyword">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1019" target="_blank" rel="external">原题链接</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原题：&lt;/p&gt;
&lt;p&gt;给定任一个各位数字不完全相同的4位正整数，如果我们先把4个数字按非递增排序，再按非递减排序，然后用第1个数字减第2个数字，将得到一个新的数字。一直重复这样做，我们很快会停在有“数字黑洞”之称的6174，这个神奇的数字也叫Kaprekar常数。&lt;/p&gt;
&lt;p&gt;例如，我们从6767开始，将得到&lt;/p&gt;
&lt;p&gt;7766 - 6677 = 1089&lt;br&gt;9810 - 0189 = 9621&lt;br&gt;9621 - 1269 = 8352&lt;br&gt;8532 - 2358 = 6174&lt;br&gt;7641 - 1467 = 6174&lt;br&gt;… …&lt;/p&gt;
&lt;p&gt;现给定任意4位正整数，请编写程序演示到达黑洞的过程。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入格式：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;输入给出一个(0, 10000)区间内的正整数N。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输出格式：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果N的4位数字全相等，则在一行内输出“N - N = 0000”；否则将计算的每一步在一行内输出，直到6174作为差出现，输出格式见样例。注意每个数字按4位数格式输出。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入样例1：&lt;/strong&gt;&lt;br&gt;6767&lt;br&gt;&lt;strong&gt;输出样例1：&lt;/strong&gt;&lt;br&gt;7766 - 6677 = 1089&lt;br&gt;9810 - 0189 = 9621&lt;br&gt;9621 - 1269 = 8352&lt;br&gt;8532 - 2358 = 6174&lt;br&gt;&lt;strong&gt;输入样例2：&lt;/strong&gt;&lt;br&gt;2222&lt;br&gt;&lt;strong&gt;输出样例2：&lt;/strong&gt;&lt;br&gt;2222 - 2222 = 0000&lt;/p&gt;
    
    </summary>
    
      <category term="PAT (Basic Level) Practise" scheme="http://yoursite.com/categories/PAT-Basic-Level-Practise/"/>
    
    
      <category term="PAT" scheme="http://yoursite.com/tags/PAT/"/>
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>1019. 数字黑洞</title>
    <link href="http://yoursite.com/2016/09/07/1019-%E6%95%B0%E5%AD%97%E9%BB%91%E6%B4%9E/"/>
    <id>http://yoursite.com/2016/09/07/1019-数字黑洞/</id>
    <published>2016-09-07T03:06:27.000Z</published>
    <updated>2016-09-08T02:55:48.244Z</updated>
    
    <content type="html"><![CDATA[<p>原题：</p>
<p>给定任一个各位数字不完全相同的4位正整数，如果我们先把4个数字按非递增排序，再按非递减排序，然后用第1个数字减第2个数字，将得到一个新的数字。一直重复这样做，我们很快会停在有“数字黑洞”之称的6174，这个神奇的数字也叫Kaprekar常数。</p>
<p>例如，我们从6767开始，将得到</p>
<p>7766 - 6677 = 1089<br>9810 - 0189 = 9621<br>9621 - 1269 = 8352<br>8532 - 2358 = 6174<br>7641 - 1467 = 6174<br>… …</p>
<p>现给定任意4位正整数，请编写程序演示到达黑洞的过程。</p>
<p><strong>输入格式：</strong></p>
<p>输入给出一个(0, 10000)区间内的正整数N。</p>
<p><strong>输出格式：</strong></p>
<p>如果N的4位数字全相等，则在一行内输出“N - N = 0000”；否则将计算的每一步在一行内输出，直到6174作为差出现，输出格式见样例。注意每个数字按4位数格式输出。</p>
<p><strong>输入样例1：</strong><br>6767<br><strong>输出样例1：</strong><br>7766 - 6677 = 1089<br>9810 - 0189 = 9621<br>9621 - 1269 = 8352<br>8532 - 2358 = 6174<br><strong>输入样例2：</strong><br>2222<br><strong>输出样例2：</strong><br>2222 - 2222 = 0000</p>
<a id="more"></a>
<p>解答：</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">#<span class="keyword">include</span>&lt;iostream&gt;</div><div class="line">#<span class="keyword">include</span>&lt;cstdlib&gt;</div><div class="line">#<span class="keyword">include</span>&lt;cstdio&gt;</div><div class="line">#<span class="keyword">include</span>&lt;vector&gt;</div><div class="line">#<span class="keyword">include</span>&lt;algorithm&gt;</div><div class="line">#<span class="keyword">include</span>&lt;iomanip&gt;</div><div class="line">using namespace std;</div><div class="line">int main(void)</div><div class="line">&#123;</div><div class="line">	int nn,<span class="keyword">n</span>,a,b,c,<span class="keyword">d</span>,temp;</div><div class="line">	vector&lt;int&gt;<span class="keyword">vec</span>;</div><div class="line">	cin&gt;&gt;<span class="keyword">n</span>;</div><div class="line">	nn = <span class="keyword">n</span>;</div><div class="line">	<span class="keyword">do</span>&#123;</div><div class="line">		a= <span class="keyword">n</span> % 10;</div><div class="line">		<span class="keyword">n</span> /= 10;</div><div class="line">		b = <span class="keyword">n</span> % 10;</div><div class="line">		<span class="keyword">n</span> /= 10;</div><div class="line">		c = <span class="keyword">n</span> % 10;</div><div class="line">		<span class="keyword">n</span> /= 10;</div><div class="line">		<span class="keyword">d</span> = <span class="keyword">n</span> % 10;</div><div class="line">		<span class="keyword">if</span>(a == b &amp;&amp; b == c &amp;&amp; c == <span class="keyword">d</span> )&#123;</div><div class="line">			cout&lt;&lt;nn&lt;&lt;<span class="string">" - "</span>&lt;&lt;nn&lt;&lt;<span class="string">" = 0000"</span>;</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">vec</span>.push_back(a);</div><div class="line">		<span class="keyword">vec</span>.push_back(b);</div><div class="line">		<span class="keyword">vec</span>.push_back(c);</div><div class="line">		<span class="keyword">vec</span>.push_back(<span class="keyword">d</span>);</div><div class="line">		<span class="keyword">sort</span>(<span class="keyword">vec</span>.begin(),<span class="keyword">vec</span>.end(),greater&lt;int&gt;());<span class="comment">//7766</span></div><div class="line">		temp = <span class="keyword">vec</span>[3] + 10 * <span class="keyword">vec</span>[2] + 100 * <span class="keyword">vec</span>[1] + 1000 * <span class="keyword">vec</span>[0];<span class="comment">//temp = 7766</span></div><div class="line">		<span class="keyword">sort</span>(<span class="keyword">vec</span>.begin(),<span class="keyword">vec</span>.end());<span class="comment">//vec : 6677</span></div><div class="line">		<span class="keyword">n</span> = <span class="keyword">vec</span>[3] + 10 * <span class="keyword">vec</span>[2] + 100 * <span class="keyword">vec</span>[1] + 1000 * <span class="keyword">vec</span>[0]; <span class="comment">//n = 6677</span></div><div class="line">		cout&lt;&lt;temp&lt;&lt;<span class="string">" - "</span>&lt;&lt;setw(4)&lt;&lt;setfill('0')&lt;&lt;<span class="keyword">n</span>&lt;&lt;<span class="string">" = "</span>&lt;&lt;setw(4)&lt;&lt;setfill('0')&lt;&lt;temp-<span class="keyword">n</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">n</span> = temp - <span class="keyword">n</span>;</div><div class="line">		<span class="keyword">vec</span>.<span class="keyword">clear</span>();</div><div class="line">	&#125;<span class="keyword">while</span>(<span class="keyword">n</span> != 6174);	</div><div class="line">	<span class="keyword">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1019" target="_blank" rel="external">原题链接</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原题：&lt;/p&gt;
&lt;p&gt;给定任一个各位数字不完全相同的4位正整数，如果我们先把4个数字按非递增排序，再按非递减排序，然后用第1个数字减第2个数字，将得到一个新的数字。一直重复这样做，我们很快会停在有“数字黑洞”之称的6174，这个神奇的数字也叫Kaprekar常数。&lt;/p&gt;
&lt;p&gt;例如，我们从6767开始，将得到&lt;/p&gt;
&lt;p&gt;7766 - 6677 = 1089&lt;br&gt;9810 - 0189 = 9621&lt;br&gt;9621 - 1269 = 8352&lt;br&gt;8532 - 2358 = 6174&lt;br&gt;7641 - 1467 = 6174&lt;br&gt;… …&lt;/p&gt;
&lt;p&gt;现给定任意4位正整数，请编写程序演示到达黑洞的过程。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入格式：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;输入给出一个(0, 10000)区间内的正整数N。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输出格式：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果N的4位数字全相等，则在一行内输出“N - N = 0000”；否则将计算的每一步在一行内输出，直到6174作为差出现，输出格式见样例。注意每个数字按4位数格式输出。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入样例1：&lt;/strong&gt;&lt;br&gt;6767&lt;br&gt;&lt;strong&gt;输出样例1：&lt;/strong&gt;&lt;br&gt;7766 - 6677 = 1089&lt;br&gt;9810 - 0189 = 9621&lt;br&gt;9621 - 1269 = 8352&lt;br&gt;8532 - 2358 = 6174&lt;br&gt;&lt;strong&gt;输入样例2：&lt;/strong&gt;&lt;br&gt;2222&lt;br&gt;&lt;strong&gt;输出样例2：&lt;/strong&gt;&lt;br&gt;2222 - 2222 = 0000&lt;/p&gt;
    
    </summary>
    
      <category term="PAT (Basic Level) Practise" scheme="http://yoursite.com/categories/PAT-Basic-Level-Practise/"/>
    
    
      <category term="PAT" scheme="http://yoursite.com/tags/PAT/"/>
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>1018. 锤子剪刀布</title>
    <link href="http://yoursite.com/2016/09/07/1018-%E9%94%A4%E5%AD%90%E5%89%AA%E5%88%80%E5%B8%83/"/>
    <id>http://yoursite.com/2016/09/07/1018-锤子剪刀布/</id>
    <published>2016-09-07T03:06:16.000Z</published>
    <updated>2016-09-08T02:55:39.679Z</updated>
    
    <content type="html"><![CDATA[<p>原题：<br>现给出两人的交锋记录，请统计双方的胜、平、负次数，并且给出双方分别出什么手势的胜算最大。</p>
<p><strong>输入格式</strong>：</p>
<p>输入第1行给出正整数N（&lt;=105），即双方交锋的次数。随后N行，每行给出一次交锋的信息，即甲、乙双方同时给出的的手势。C代表“锤子”、J代表“剪刀”、B代表“布”，第1个字母代表甲方，第2个代表乙方，中间有1个空格。</p>
<p><strong>输出格式</strong>：</p>
<p>输出第1、2行分别给出甲、乙的胜、平、负次数，数字间以1个空格分隔。第3行给出两个字母，分别代表甲、乙获胜次数最多的手势，中间有1个空格。如果解不唯一，则输出按字母序最小的解。</p>
<p><strong>输入样例：</strong><br>10<br>C J<br>J B<br>C B<br>B B<br>B C<br>C C<br>C B<br>J B<br>B C<br>J J<br><strong>输出样例：</strong><br>5 3 2<br>2 3 5<br>B B</p>
<a id="more"></a>
<p>解答：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">compare</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(a &gt; b)</div><div class="line">	<span class="keyword">return</span> </div><div class="line">&#125;</div><div class="line"><span class="keyword">int</span> main(<span class="keyword">void</span>)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> num;</div><div class="line">	<span class="keyword">char</span> ch1,ch2;</div><div class="line">	<span class="keyword">int</span> win_jia = <span class="number">0</span>,win_yi = <span class="number">0</span>,pin = <span class="number">0</span>;</div><div class="line">	<span class="keyword">int</span> win_jia_c = <span class="number">0</span>,win_jia_j = <span class="number">0</span>,win_jia_b = <span class="number">0</span>,win_yi_c = <span class="number">0</span>,win_yi_j = <span class="number">0</span>,win_yi_b = <span class="number">0</span>;</div><div class="line">	<span class="built_in">cin</span>&gt;&gt;num;</div><div class="line">	<span class="keyword">while</span>(num--)&#123;</div><div class="line">		<span class="built_in">cin</span>&gt;&gt;ch1&gt;&gt;ch2;</div><div class="line">		<span class="keyword">if</span>(ch1 == <span class="string">'C'</span>)&#123;</div><div class="line">			<span class="keyword">if</span>(ch2 == <span class="string">'C'</span>)&#123;</div><div class="line">				pin++;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(ch2 == <span class="string">'J'</span>)&#123;</div><div class="line">				win_jia++;</div><div class="line">				win_jia_c++;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(ch2 == <span class="string">'B'</span>)&#123;</div><div class="line">				win_yi++;</div><div class="line">				win_yi_b++;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>( ch1 == <span class="string">'J'</span>)&#123;</div><div class="line">			<span class="keyword">if</span>(ch2 == <span class="string">'C'</span>)&#123;</div><div class="line">				win_yi++;</div><div class="line">				win_yi_c++;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(ch2 == <span class="string">'J'</span>)&#123;</div><div class="line">				pin++;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(ch2 == <span class="string">'B'</span>)&#123;</div><div class="line">				win_jia++;</div><div class="line">				win_jia_j++;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(ch1 == <span class="string">'B'</span>)&#123;</div><div class="line">			<span class="keyword">if</span>(ch2 == <span class="string">'C'</span>)&#123;</div><div class="line">				win_jia++;</div><div class="line">				win_jia_b++;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(ch2 == <span class="string">'J'</span>)&#123;</div><div class="line">				win_yi++;</div><div class="line">				win_yi_j++;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(ch2 == <span class="string">'B'</span>)&#123;</div><div class="line">				pin++;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;win_jia&lt;&lt;<span class="string">" "</span>&lt;&lt;pin&lt;&lt;<span class="string">" "</span>&lt;&lt;win_yi&lt;&lt;<span class="built_in">endl</span>&lt;&lt;win_yi&lt;&lt;<span class="string">" "</span>&lt;&lt;pin&lt;&lt;<span class="string">" "</span>&lt;&lt;win_jia&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;((win_jia_b &gt;= win_jia_c ? win_jia_b : win_jia_c) &gt;= win_jia_j ? (win_jia_b &gt;= win_jia_c ? <span class="string">'B'</span>:<span class="string">'C'</span>) : <span class="string">'J'</span>)&lt;&lt;<span class="string">" "</span>;</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;((win_yi_b &gt;= win_yi_c ? win_yi_b : win_yi_c) &gt;= win_yi_j ? (win_yi_b &gt;= win_yi_c ? <span class="string">'B'</span>:<span class="string">'C'</span>) : <span class="string">'J'</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1018" target="_blank" rel="external">原题链接</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原题：&lt;br&gt;现给出两人的交锋记录，请统计双方的胜、平、负次数，并且给出双方分别出什么手势的胜算最大。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入格式&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;输入第1行给出正整数N（&amp;lt;=105），即双方交锋的次数。随后N行，每行给出一次交锋的信息，即甲、乙双方同时给出的的手势。C代表“锤子”、J代表“剪刀”、B代表“布”，第1个字母代表甲方，第2个代表乙方，中间有1个空格。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输出格式&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;输出第1、2行分别给出甲、乙的胜、平、负次数，数字间以1个空格分隔。第3行给出两个字母，分别代表甲、乙获胜次数最多的手势，中间有1个空格。如果解不唯一，则输出按字母序最小的解。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入样例：&lt;/strong&gt;&lt;br&gt;10&lt;br&gt;C J&lt;br&gt;J B&lt;br&gt;C B&lt;br&gt;B B&lt;br&gt;B C&lt;br&gt;C C&lt;br&gt;C B&lt;br&gt;J B&lt;br&gt;B C&lt;br&gt;J J&lt;br&gt;&lt;strong&gt;输出样例：&lt;/strong&gt;&lt;br&gt;5 3 2&lt;br&gt;2 3 5&lt;br&gt;B B&lt;/p&gt;
    
    </summary>
    
      <category term="PAT (Basic Level) Practise" scheme="http://yoursite.com/categories/PAT-Basic-Level-Practise/"/>
    
    
      <category term="PAT" scheme="http://yoursite.com/tags/PAT/"/>
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>1017. A除以B</title>
    <link href="http://yoursite.com/2016/09/07/1017-A%E9%99%A4%E4%BB%A5B/"/>
    <id>http://yoursite.com/2016/09/07/1017-A除以B/</id>
    <published>2016-09-07T03:06:04.000Z</published>
    <updated>2016-09-08T02:55:32.566Z</updated>
    
    <content type="html"><![CDATA[<p>原题：<br>本题要求计算A/B，其中A是不超过1000位的正整数，B是1位正整数。你需要输出商数Q和余数R，使得A = B * Q + R成立。</p>
<p><strong>输入格式：</strong></p>
<p>输入在1行中依次给出A和B，中间以1空格分隔。</p>
<p><strong>输出格式：</strong></p>
<p>在1行中依次输出Q和R，中间以1空格分隔。</p>
<p><strong>输入样例：</strong><br>123456789050987654321 7<br><strong>输出样例：</strong><br>17636684150141093474 3</p>
<a id="more"></a>
<p>解答：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="built_in">string</span> str,ans;</div><div class="line">	<span class="keyword">int</span> a,b = <span class="number">0</span>,temp;</div><div class="line">	<span class="keyword">bool</span> flag = <span class="literal">false</span>;</div><div class="line">	<span class="built_in">cin</span>&gt;&gt;str&gt;&gt;a;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; str.size();i++)&#123;</div><div class="line">		<span class="keyword">if</span>(str[i] -<span class="string">'0'</span> + b * <span class="number">10</span> &lt; a)&#123;</div><div class="line">			b = str[i] - <span class="string">'0'</span> + <span class="number">10</span> * b;</div><div class="line">			<span class="keyword">if</span>(flag == <span class="literal">true</span>)</div><div class="line">			<span class="built_in">cout</span>&lt;&lt;<span class="number">0</span>;</div><div class="line">			<span class="keyword">continue</span>;</div><div class="line">		&#125;</div><div class="line">			</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			b = str[i] -<span class="string">'0'</span> + b * <span class="number">10</span>;</div><div class="line">			temp = b / a;</div><div class="line">			<span class="built_in">cout</span>&lt;&lt;temp;</div><div class="line">			flag = <span class="literal">true</span>;</div><div class="line">			b = b % a;</div><div class="line">		&#125;</div><div class="line">			  </div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(flag == <span class="literal">false</span>)</div><div class="line">		<span class="built_in">cout</span>&lt;&lt;<span class="number">0</span>&lt;&lt;<span class="string">" "</span>&lt;&lt;b;</div><div class="line">	<span class="keyword">else</span> </div><div class="line">		<span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>&lt;&lt;b;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1017" target="_blank" rel="external">原题链接</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原题：&lt;br&gt;本题要求计算A/B，其中A是不超过1000位的正整数，B是1位正整数。你需要输出商数Q和余数R，使得A = B * Q + R成立。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入格式：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;输入在1行中依次给出A和B，中间以1空格分隔。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输出格式：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在1行中依次输出Q和R，中间以1空格分隔。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入样例：&lt;/strong&gt;&lt;br&gt;123456789050987654321 7&lt;br&gt;&lt;strong&gt;输出样例：&lt;/strong&gt;&lt;br&gt;17636684150141093474 3&lt;/p&gt;
    
    </summary>
    
      <category term="PAT (Basic Level) Practise" scheme="http://yoursite.com/categories/PAT-Basic-Level-Practise/"/>
    
    
      <category term="PAT" scheme="http://yoursite.com/tags/PAT/"/>
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>1016. 部分A+B</title>
    <link href="http://yoursite.com/2016/09/07/1015-%E5%BE%B7%E6%89%8D%E8%AE%BA/"/>
    <id>http://yoursite.com/2016/09/07/1015-德才论/</id>
    <published>2016-09-07T03:05:54.000Z</published>
    <updated>2016-09-08T02:55:18.770Z</updated>
    
    <content type="html"><![CDATA[<p>原题：</p>
<p>正整数A的“DA（为1位整数）部分”定义为由A中所有DA组成的新整数PA。例如：给定A = 3862767，DA = 6，则A的“6部分”PA是66，因为A中有2个6。</p>
<p>现给定A、DA、B、DB，请编写程序计算PA + PB。</p>
<p><strong>输入格式</strong>：</p>
<p>输入在一行中依次给出A、DA、B、DB，中间以空格分隔，其中0 &lt; A, B &lt; 1010。</p>
<p><strong>输出格式</strong>：</p>
<p>在一行中输出PA + PB的值。</p>
<p><strong>输入样例1：</strong><br>3862767 6 13530293 3<br><strong>输出样例1：</strong><br>399<br><strong>输入样例2：</strong><br>3862767 1 13530293 8<br><strong>输出样例2：</strong><br>0</p>
<a id="more"></a>
<p>解答：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="built_in">string</span> str1,str2,str3,str4;</div><div class="line">	<span class="keyword">char</span> num1,num2;</div><div class="line">	</div><div class="line">	<span class="built_in">cin</span>&gt;&gt;str1&gt;&gt;num1&gt;&gt;str2&gt;&gt;num2;</div><div class="line">	<span class="built_in">string</span>::size_type p = str1.find_first_of(num1);</div><div class="line">	<span class="keyword">while</span>(p != <span class="built_in">string</span>::npos)&#123;</div><div class="line">		str3 = str3 + num1;</div><div class="line">		p = str1.find_first_of(num1,p+<span class="number">1</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">string</span>::size_type q = str2.find_first_of(num2);</div><div class="line">	<span class="keyword">while</span>(q != <span class="built_in">string</span>::npos)&#123;</div><div class="line">		str4 = str4 + num2;</div><div class="line">		q = str2.find_first_of(num2,q+<span class="number">1</span>); </div><div class="line">	&#125;</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;atoi(str3.c_str())+atoi(str4.c_str()); </div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1016" target="_blank" rel="external">原题链接</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原题：&lt;/p&gt;
&lt;p&gt;正整数A的“DA（为1位整数）部分”定义为由A中所有DA组成的新整数PA。例如：给定A = 3862767，DA = 6，则A的“6部分”PA是66，因为A中有2个6。&lt;/p&gt;
&lt;p&gt;现给定A、DA、B、DB，请编写程序计算PA + PB。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入格式&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;输入在一行中依次给出A、DA、B、DB，中间以空格分隔，其中0 &amp;lt; A, B &amp;lt; 1010。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输出格式&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;在一行中输出PA + PB的值。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入样例1：&lt;/strong&gt;&lt;br&gt;3862767 6 13530293 3&lt;br&gt;&lt;strong&gt;输出样例1：&lt;/strong&gt;&lt;br&gt;399&lt;br&gt;&lt;strong&gt;输入样例2：&lt;/strong&gt;&lt;br&gt;3862767 1 13530293 8&lt;br&gt;&lt;strong&gt;输出样例2：&lt;/strong&gt;&lt;br&gt;0&lt;/p&gt;
    
    </summary>
    
      <category term="PAT (Basic Level) Practise" scheme="http://yoursite.com/categories/PAT-Basic-Level-Practise/"/>
    
    
      <category term="PAT" scheme="http://yoursite.com/tags/PAT/"/>
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>1016. 部分A+B</title>
    <link href="http://yoursite.com/2016/09/07/1016-%E9%83%A8%E5%88%86A-B/"/>
    <id>http://yoursite.com/2016/09/07/1016-部分A-B/</id>
    <published>2016-09-07T03:05:54.000Z</published>
    <updated>2016-09-08T02:55:25.254Z</updated>
    
    <content type="html"><![CDATA[<p>原题：</p>
<p>正整数A的“DA（为1位整数）部分”定义为由A中所有DA组成的新整数PA。例如：给定A = 3862767，DA = 6，则A的“6部分”PA是66，因为A中有2个6。</p>
<p>现给定A、DA、B、DB，请编写程序计算PA + PB。</p>
<p><strong>输入格式</strong>：</p>
<p>输入在一行中依次给出A、DA、B、DB，中间以空格分隔，其中0 &lt; A, B &lt; 1010。</p>
<p><strong>输出格式</strong>：</p>
<p>在一行中输出PA + PB的值。</p>
<p><strong>输入样例1：</strong><br>3862767 6 13530293 3<br><strong>输出样例1：</strong><br>399<br><strong>输入样例2：</strong><br>3862767 1 13530293 8<br><strong>输出样例2：</strong><br>0</p>
<a id="more"></a>
<p>解答：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="built_in">string</span> str1,str2,str3,str4;</div><div class="line">	<span class="keyword">char</span> num1,num2;</div><div class="line">	</div><div class="line">	<span class="built_in">cin</span>&gt;&gt;str1&gt;&gt;num1&gt;&gt;str2&gt;&gt;num2;</div><div class="line">	<span class="built_in">string</span>::size_type p = str1.find_first_of(num1);</div><div class="line">	<span class="keyword">while</span>(p != <span class="built_in">string</span>::npos)&#123;</div><div class="line">		str3 = str3 + num1;</div><div class="line">		p = str1.find_first_of(num1,p+<span class="number">1</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">string</span>::size_type q = str2.find_first_of(num2);</div><div class="line">	<span class="keyword">while</span>(q != <span class="built_in">string</span>::npos)&#123;</div><div class="line">		str4 = str4 + num2;</div><div class="line">		q = str2.find_first_of(num2,q+<span class="number">1</span>); </div><div class="line">	&#125;</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;atoi(str3.c_str())+atoi(str4.c_str()); </div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1016" target="_blank" rel="external">原题链接</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原题：&lt;/p&gt;
&lt;p&gt;正整数A的“DA（为1位整数）部分”定义为由A中所有DA组成的新整数PA。例如：给定A = 3862767，DA = 6，则A的“6部分”PA是66，因为A中有2个6。&lt;/p&gt;
&lt;p&gt;现给定A、DA、B、DB，请编写程序计算PA + PB。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入格式&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;输入在一行中依次给出A、DA、B、DB，中间以空格分隔，其中0 &amp;lt; A, B &amp;lt; 1010。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输出格式&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;在一行中输出PA + PB的值。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入样例1：&lt;/strong&gt;&lt;br&gt;3862767 6 13530293 3&lt;br&gt;&lt;strong&gt;输出样例1：&lt;/strong&gt;&lt;br&gt;399&lt;br&gt;&lt;strong&gt;输入样例2：&lt;/strong&gt;&lt;br&gt;3862767 1 13530293 8&lt;br&gt;&lt;strong&gt;输出样例2：&lt;/strong&gt;&lt;br&gt;0&lt;/p&gt;
    
    </summary>
    
      <category term="PAT (Basic Level) Practise" scheme="http://yoursite.com/categories/PAT-Basic-Level-Practise/"/>
    
    
      <category term="PAT" scheme="http://yoursite.com/tags/PAT/"/>
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>1014. 福尔摩斯的约会</title>
    <link href="http://yoursite.com/2016/09/07/1014-%E7%A6%8F%E5%B0%94%E6%91%A9%E6%96%AF%E7%9A%84%E7%BA%A6%E4%BC%9A/"/>
    <id>http://yoursite.com/2016/09/07/1014-福尔摩斯的约会/</id>
    <published>2016-09-07T03:05:30.000Z</published>
    <updated>2016-09-08T02:55:08.226Z</updated>
    
    <content type="html"><![CDATA[<p>原题：<br>大侦探福尔摩斯接到一张奇怪的字条：“我们约会吧！ 3485djDkxh4hhGE 2984akDfkkkkggEdsb s&amp;hgsfdk d&amp;Hyscvnm”。大侦探很快就明白了，字条上奇怪的乱码实际上就是约会的时间“星期四 14:04”，因为前面两字符串中第1对相同的大写英文字母（大小写有区分）是第4个字母’D’，代表星期四；第2对相同的字符是’E’，那是第5个英文字母，代表一天里的第14个钟头（于是一天的0点到23点由数字0到9、以及大写字母A到N表示）；后面两字符串第1对相同的英文字母’s’出现在第4个位置（从0开始计数）上，代表第4分钟。现给定两对字符串，请帮助福尔摩斯解码得到约会的时间。</p>
<p><strong>输入格式</strong>：</p>
<p>输入在4行中分别给出4个非空、不包含空格、且长度不超过60的字符串。</p>
<p><strong>输出格式</strong>：</p>
<p>在一行中输出约会的时间，格式为“DAY HH:MM”，其中“DAY”是某星期的3字符缩写，即MON表示星期一，TUE表示星期二，WED表示星期三，THU表示星期四，FRI表示星期五，SAT表示星期六，SUN表示星期日。题目输入保证每个测试存在唯一解。</p>
<p><strong>输入样例</strong>：<br>3485djDkxh4hhGE<br>2984akDfkkkkggEdsb<br>s&amp;hgsfdk<br>d&amp;Hyscvnm<br><strong>输出样例</strong>：<br>THU 14:04</p>
<a id="more"></a>
<p>解答：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iomanip&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="built_in">string</span> str1,str2,str3,str4;</div><div class="line">	<span class="keyword">int</span> flag1 = <span class="number">0</span>,flag2 = <span class="number">0</span>,flag3 = <span class="number">0</span>;</div><div class="line">	<span class="keyword">bool</span> turn1 = <span class="literal">true</span>;</div><div class="line">	<span class="built_in">cin</span>&gt;&gt;str1&gt;&gt;str2&gt;&gt;str3&gt;&gt;str4;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; str1.size() &amp;&amp; i &lt; str2.size();i++)&#123;</div><div class="line">		<span class="keyword">if</span>(str1[i] == str2[i] &amp;&amp; str1[i]  &gt;= <span class="string">'A'</span> &amp;&amp; str1[i] &lt;= <span class="string">'G'</span> &amp;&amp; turn1 == <span class="literal">true</span>)&#123;</div><div class="line">			flag1 = str1[i] - <span class="string">'A'</span> + <span class="number">1</span>;</div><div class="line">			turn1 = <span class="literal">false</span>;</div><div class="line">			<span class="keyword">continue</span>;</div><div class="line">		&#125;	</div><div class="line">		<span class="keyword">if</span>(str1[i] == str2[i] &amp;&amp; ((str1[i]  &gt;= <span class="string">'A'</span> &amp;&amp; str1[i]  &lt;= <span class="string">'N'</span> )||(str1[i]  &gt;= <span class="string">'0'</span> &amp;&amp; str1[i] &lt;= <span class="string">'9'</span> ))  &amp;&amp; turn1 == <span class="literal">false</span>)&#123;</div><div class="line">			<span class="keyword">if</span>(str1[i] &gt;= <span class="string">'A'</span> &amp;&amp; str1[i]  &lt;= <span class="string">'N'</span>)</div><div class="line">			flag2 = str1[i] - <span class="string">'A'</span> + <span class="number">10</span>;</div><div class="line">			<span class="keyword">else</span> </div><div class="line">			flag2 = str1[i] - <span class="string">'0'</span>;</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; str3.size() &amp;&amp; i &lt; str4.size();i++)&#123;</div><div class="line">		<span class="keyword">if</span>(str3[i] == str4[i] &amp;&amp; ((str3[i]  &gt;= <span class="string">'A'</span> &amp;&amp; str3[i]  &lt;= <span class="string">'Z'</span>)||(str3[i] &gt;= <span class="string">'a'</span> &amp;&amp; str3[i]  &lt;= <span class="string">'z'</span> )))&#123;</div><div class="line">			flag3 = i;</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">switch</span>(flag1)&#123;</div><div class="line">		<span class="keyword">case</span> <span class="number">1</span> : <span class="built_in">cout</span>&lt;&lt;<span class="string">"MON "</span>;<span class="keyword">break</span>;</div><div class="line">		<span class="keyword">case</span> <span class="number">2</span> : <span class="built_in">cout</span>&lt;&lt;<span class="string">"TUE "</span>;<span class="keyword">break</span>;</div><div class="line">		<span class="keyword">case</span> <span class="number">3</span> : <span class="built_in">cout</span>&lt;&lt;<span class="string">"WED "</span>;<span class="keyword">break</span>;</div><div class="line">		<span class="keyword">case</span> <span class="number">4</span> : <span class="built_in">cout</span>&lt;&lt;<span class="string">"THU "</span>;<span class="keyword">break</span>;</div><div class="line">		<span class="keyword">case</span> <span class="number">5</span> : <span class="built_in">cout</span>&lt;&lt;<span class="string">"FRI "</span>;<span class="keyword">break</span>;</div><div class="line">		<span class="keyword">case</span> <span class="number">6</span> : <span class="built_in">cout</span>&lt;&lt;<span class="string">"SAT "</span>;<span class="keyword">break</span>;</div><div class="line">		<span class="keyword">case</span> <span class="number">7</span> : <span class="built_in">cout</span>&lt;&lt;<span class="string">"SUN "</span>;<span class="keyword">break</span>;</div><div class="line">		<span class="keyword">default</span> : <span class="built_in">exit</span>(<span class="number">-1</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;setw(<span class="number">2</span>)&lt;&lt;setfill(<span class="string">'0'</span>)&lt;&lt;flag2&lt;&lt;<span class="string">":"</span>&lt;&lt;setw(<span class="number">2</span>)&lt;&lt;setfill(<span class="string">'0'</span>)&lt;&lt;flag3;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1014" target="_blank" rel="external">原题链接</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原题：&lt;br&gt;大侦探福尔摩斯接到一张奇怪的字条：“我们约会吧！ 3485djDkxh4hhGE 2984akDfkkkkggEdsb s&amp;amp;hgsfdk d&amp;amp;Hyscvnm”。大侦探很快就明白了，字条上奇怪的乱码实际上就是约会的时间“星期四 14:04”，因为前面两字符串中第1对相同的大写英文字母（大小写有区分）是第4个字母’D’，代表星期四；第2对相同的字符是’E’，那是第5个英文字母，代表一天里的第14个钟头（于是一天的0点到23点由数字0到9、以及大写字母A到N表示）；后面两字符串第1对相同的英文字母’s’出现在第4个位置（从0开始计数）上，代表第4分钟。现给定两对字符串，请帮助福尔摩斯解码得到约会的时间。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入格式&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;输入在4行中分别给出4个非空、不包含空格、且长度不超过60的字符串。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输出格式&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;在一行中输出约会的时间，格式为“DAY HH:MM”，其中“DAY”是某星期的3字符缩写，即MON表示星期一，TUE表示星期二，WED表示星期三，THU表示星期四，FRI表示星期五，SAT表示星期六，SUN表示星期日。题目输入保证每个测试存在唯一解。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入样例&lt;/strong&gt;：&lt;br&gt;3485djDkxh4hhGE&lt;br&gt;2984akDfkkkkggEdsb&lt;br&gt;s&amp;amp;hgsfdk&lt;br&gt;d&amp;amp;Hyscvnm&lt;br&gt;&lt;strong&gt;输出样例&lt;/strong&gt;：&lt;br&gt;THU 14:04&lt;/p&gt;
    
    </summary>
    
      <category term="PAT (Basic Level) Practise" scheme="http://yoursite.com/categories/PAT-Basic-Level-Practise/"/>
    
    
      <category term="PAT" scheme="http://yoursite.com/tags/PAT/"/>
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>1013. 数素数</title>
    <link href="http://yoursite.com/2016/09/07/1013-%E6%95%B0%E7%B4%A0%E6%95%B0/"/>
    <id>http://yoursite.com/2016/09/07/1013-数素数/</id>
    <published>2016-09-07T03:05:11.000Z</published>
    <updated>2016-09-08T02:54:50.277Z</updated>
    
    <content type="html"><![CDATA[<p>原题：<br>令Pi表示第i个素数。现任给两个正整数M &lt;= N &lt;= 104，请输出PM到PN的所有素数。</p>
<p><strong>输入格式</strong>：</p>
<p>输入在一行中给出M和N，其间以空格分隔。</p>
<p><strong>输出格式</strong>：</p>
<p>输出从PM到PN的所有素数，每10个数字占1行，其间以空格分隔，但行末不得有多余空格。</p>
<p><strong>输入样例</strong>：<br>5 27<br><strong>输出样例</strong>：<br>11 13 17 19 23 29 31 37 41 43<br>47 53 59 61 67 71 73 79 83 89<br>97 101 103</p>
<a id="more"></a>
<p>解答：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isPrime</span><span class="params">(<span class="keyword">int</span> num)</span></span>&#123;</div><div class="line">	<span class="keyword">bool</span> flag = <span class="literal">true</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt;= <span class="built_in">sqrt</span>(num);i++)</div><div class="line">	<span class="keyword">if</span>(num % i == <span class="number">0</span>)&#123;</div><div class="line">		flag = <span class="literal">false</span>;</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(flag) <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> M,N,count=<span class="number">0</span>,count1=<span class="number">0</span>;</div><div class="line">	<span class="built_in">cin</span>&gt;&gt;M&gt;&gt;N;</div><div class="line">	</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &gt; <span class="number">0</span>;i++)&#123;</div><div class="line">		<span class="keyword">if</span>(isPrime(i))&#123;</div><div class="line">		count++;</div><div class="line">		<span class="keyword">if</span>(count &gt;= M &amp;&amp; count &lt; N)&#123;</div><div class="line">			<span class="keyword">if</span>(count1 % <span class="number">10</span> == <span class="number">9</span>)</div><div class="line">			<span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			<span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="string">" "</span>;</div><div class="line">			count1++;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(count == N)&#123;</div><div class="line">			<span class="built_in">cout</span>&lt;&lt;i;</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1013" target="_blank" rel="external">原题链接</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原题：&lt;br&gt;令Pi表示第i个素数。现任给两个正整数M &amp;lt;= N &amp;lt;= 104，请输出PM到PN的所有素数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入格式&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;输入在一行中给出M和N，其间以空格分隔。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输出格式&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;输出从PM到PN的所有素数，每10个数字占1行，其间以空格分隔，但行末不得有多余空格。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入样例&lt;/strong&gt;：&lt;br&gt;5 27&lt;br&gt;&lt;strong&gt;输出样例&lt;/strong&gt;：&lt;br&gt;11 13 17 19 23 29 31 37 41 43&lt;br&gt;47 53 59 61 67 71 73 79 83 89&lt;br&gt;97 101 103&lt;/p&gt;
    
    </summary>
    
      <category term="PAT (Basic Level) Practise" scheme="http://yoursite.com/categories/PAT-Basic-Level-Practise/"/>
    
    
      <category term="PAT" scheme="http://yoursite.com/tags/PAT/"/>
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>1012. 数字分类</title>
    <link href="http://yoursite.com/2016/09/07/1012-%E6%95%B0%E5%AD%97%E5%88%86%E7%B1%BB/"/>
    <id>http://yoursite.com/2016/09/07/1012-数字分类/</id>
    <published>2016-09-07T03:04:59.000Z</published>
    <updated>2016-09-08T02:54:37.888Z</updated>
    
    <content type="html"><![CDATA[<p>原题：</p>
<p>给定一系列正整数，请按要求对数字进行分类，并输出以下5个数字：</p>
<p>A1 = 能被5整除的数字中所有偶数的和；<br>A2 = 将被5除后余1的数字按给出顺序进行交错求和，即计算n1-n2+n3-n4…；<br>A3 = 被5除后余2的数字的个数；<br>A4 = 被5除后余3的数字的平均数，精确到小数点后1位；<br>A5 = 被5除后余4的数字中最大数字。<br><strong>输入格式</strong>：</p>
<p>每个输入包含1个测试用例。每个测试用例先给出一个不超过1000的正整数N，随后给出N个不超过1000的待分类的正整数。数字间以空格分隔。</p>
<p><strong>输出格式</strong>：</p>
<p>对给定的N个正整数，按题目要求计算A1~A5并在一行中顺序输出。数字间以空格分隔，但行末不得有多余空格。</p>
<p>若其中某一类数字不存在，则在相应位置输出“N”。</p>
<p><strong>输入样例1</strong>：<br>13 1 2 3 4 5 6 7 8 9 10 20 16 18<br><strong>输出样例1</strong>：<br>30 11 2 9.7 9<br><strong>输入样例2</strong>：<br>8 1 2 4 5 6 7 9 16<br><strong>输出样例2</strong>：<br>N 11 2 N 9</p>
<a id="more"></a>
<p>解答：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iomanip&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> N,A1=<span class="number">0</span>,A2=<span class="number">0</span>,A3=<span class="number">0</span>,A4=<span class="number">0</span>,A5=<span class="number">0</span>,flag=<span class="number">1</span>,count=<span class="number">0</span>;</div><div class="line">	<span class="keyword">bool</span> flag2 = <span class="literal">false</span>,flag3 = <span class="literal">false</span>;</div><div class="line">	<span class="keyword">int</span> <span class="built_in">array</span>[<span class="number">1005</span>];</div><div class="line">	<span class="built_in">cin</span>&gt;&gt;N;	</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; N;i++)&#123;</div><div class="line">		<span class="built_in">cin</span>&gt;&gt;<span class="built_in">array</span>[i];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; N;i++)&#123;</div><div class="line">		<span class="keyword">if</span>(<span class="built_in">array</span>[i] % <span class="number">5</span> == <span class="number">0</span> &amp;&amp; <span class="built_in">array</span>[i] % <span class="number">2</span> == <span class="number">0</span>)&#123;</div><div class="line">			A1 += <span class="built_in">array</span>[i];</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(<span class="built_in">array</span>[i] % <span class="number">5</span> == <span class="number">1</span>)&#123;</div><div class="line">			<span class="keyword">if</span>(flag ==<span class="number">1</span>)&#123;</div><div class="line">				A2 += <span class="built_in">array</span>[i];</div><div class="line">				flag = <span class="number">0</span>;</div><div class="line">				flag3 = <span class="literal">true</span>;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span>&#123;</div><div class="line">				A2 -= <span class="built_in">array</span>[i];</div><div class="line">				flag = <span class="number">1</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(<span class="built_in">array</span>[i] % <span class="number">5</span> == <span class="number">2</span>)</div><div class="line">		A3++;</div><div class="line">		<span class="keyword">if</span>(<span class="built_in">array</span>[i] % <span class="number">5</span> == <span class="number">3</span>)</div><div class="line">		&#123;</div><div class="line">			A4 += <span class="built_in">array</span>[i];</div><div class="line">			count++;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(<span class="built_in">array</span>[i] % <span class="number">5</span> ==<span class="number">4</span>)&#123;</div><div class="line">			<span class="keyword">if</span>(<span class="built_in">array</span>[i] &gt; A5)</div><div class="line">			A5 = <span class="built_in">array</span>[i];</div><div class="line">			flag2 = <span class="literal">true</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(A1 != <span class="number">0</span>)</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;A1&lt;&lt;<span class="string">" "</span>;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"N "</span>;</div><div class="line">	<span class="keyword">if</span>(flag3 == <span class="literal">true</span>)</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;A2&lt;&lt;<span class="string">" "</span>;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"N "</span>;</div><div class="line">	<span class="keyword">if</span>(A3 != <span class="number">0</span>)</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;A3&lt;&lt;<span class="string">" "</span>;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"N "</span>;</div><div class="line">	<span class="keyword">if</span>(A4 != <span class="number">0</span>)</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;setiosflags(ios::fixed)&lt;&lt;setprecision(<span class="number">1</span>)&lt;&lt;(<span class="keyword">float</span>)A4/count&lt;&lt;<span class="string">" "</span>;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"N "</span>;</div><div class="line">	<span class="keyword">if</span>(flag2 == <span class="literal">true</span>)</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;A5;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"N"</span>;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1012" target="_blank" rel="external">原题链接</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原题：&lt;/p&gt;
&lt;p&gt;给定一系列正整数，请按要求对数字进行分类，并输出以下5个数字：&lt;/p&gt;
&lt;p&gt;A1 = 能被5整除的数字中所有偶数的和；&lt;br&gt;A2 = 将被5除后余1的数字按给出顺序进行交错求和，即计算n1-n2+n3-n4…；&lt;br&gt;A3 = 被5除后余2的数字的个数；&lt;br&gt;A4 = 被5除后余3的数字的平均数，精确到小数点后1位；&lt;br&gt;A5 = 被5除后余4的数字中最大数字。&lt;br&gt;&lt;strong&gt;输入格式&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;每个输入包含1个测试用例。每个测试用例先给出一个不超过1000的正整数N，随后给出N个不超过1000的待分类的正整数。数字间以空格分隔。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输出格式&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;对给定的N个正整数，按题目要求计算A1~A5并在一行中顺序输出。数字间以空格分隔，但行末不得有多余空格。&lt;/p&gt;
&lt;p&gt;若其中某一类数字不存在，则在相应位置输出“N”。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入样例1&lt;/strong&gt;：&lt;br&gt;13 1 2 3 4 5 6 7 8 9 10 20 16 18&lt;br&gt;&lt;strong&gt;输出样例1&lt;/strong&gt;：&lt;br&gt;30 11 2 9.7 9&lt;br&gt;&lt;strong&gt;输入样例2&lt;/strong&gt;：&lt;br&gt;8 1 2 4 5 6 7 9 16&lt;br&gt;&lt;strong&gt;输出样例2&lt;/strong&gt;：&lt;br&gt;N 11 2 N 9&lt;/p&gt;
    
    </summary>
    
      <category term="PAT (Basic Level) Practise" scheme="http://yoursite.com/categories/PAT-Basic-Level-Practise/"/>
    
    
      <category term="PAT" scheme="http://yoursite.com/tags/PAT/"/>
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>1011. A+B和C</title>
    <link href="http://yoursite.com/2016/09/07/1011-A-B%E5%92%8CC/"/>
    <id>http://yoursite.com/2016/09/07/1011-A-B和C/</id>
    <published>2016-09-07T03:04:43.000Z</published>
    <updated>2016-09-08T02:54:26.128Z</updated>
    
    <content type="html"><![CDATA[<p>原题：<br>给定区间[-231, 231]内的3个整数A、B和C，请判断A+B是否大于C。</p>
<p><strong>输入格式</strong>：</p>
<p>输入第1行给出正整数T(&lt;=10)，是测试用例的个数。随后给出T组测试用例，每组占一行，顺序给出A、B和C。整数间以空格分隔。</p>
<p><strong>输出格式</strong>：</p>
<p>对每组测试用例，在一行中输出“Case #X: true”如果A+B&gt;C，否则输出“Case #X: false”，其中X是测试用例的编号（从1开始）。</p>
<p><strong>输入样例</strong>：<br>4<br>1 2 3<br>2 3 4<br>2147483647 0 2147483646<br>0 -2147483648 -2147483647<br><strong>输出样例</strong>：<br>Case #1: false<br>Case #2: true<br>Case #3: true<br>Case #4: false</p>
<a id="more"></a>
<p>解答：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;	</div><div class="line">	<span class="keyword">long</span> num1,num2,num3,sum;</div><div class="line">	<span class="built_in">cin</span>&gt;&gt;sum;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;sum;i++)&#123;</div><div class="line">		<span class="built_in">cin</span>&gt;&gt;num1&gt;&gt;num2&gt;&gt;num3;</div><div class="line">		<span class="keyword">if</span>(num1 + num2 &gt; num3)</div><div class="line">			<span class="built_in">cout</span>&lt;&lt;<span class="string">"Case #"</span>&lt;&lt;i+<span class="number">1</span>&lt;&lt;<span class="string">": true"</span>;	</div><div class="line">		<span class="keyword">else</span></div><div class="line">			<span class="built_in">cout</span>&lt;&lt;<span class="string">"Case #"</span>&lt;&lt;i+<span class="number">1</span>&lt;&lt;<span class="string">": false"</span>;</div><div class="line">		<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1011" target="_blank" rel="external">原题链接</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原题：&lt;br&gt;给定区间[-231, 231]内的3个整数A、B和C，请判断A+B是否大于C。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入格式&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;输入第1行给出正整数T(&amp;lt;=10)，是测试用例的个数。随后给出T组测试用例，每组占一行，顺序给出A、B和C。整数间以空格分隔。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输出格式&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;对每组测试用例，在一行中输出“Case #X: true”如果A+B&amp;gt;C，否则输出“Case #X: false”，其中X是测试用例的编号（从1开始）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入样例&lt;/strong&gt;：&lt;br&gt;4&lt;br&gt;1 2 3&lt;br&gt;2 3 4&lt;br&gt;2147483647 0 2147483646&lt;br&gt;0 -2147483648 -2147483647&lt;br&gt;&lt;strong&gt;输出样例&lt;/strong&gt;：&lt;br&gt;Case #1: false&lt;br&gt;Case #2: true&lt;br&gt;Case #3: true&lt;br&gt;Case #4: false&lt;/p&gt;
    
    </summary>
    
      <category term="PAT (Basic Level) Practise" scheme="http://yoursite.com/categories/PAT-Basic-Level-Practise/"/>
    
    
      <category term="PAT" scheme="http://yoursite.com/tags/PAT/"/>
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>1010. 一元多项式求导</title>
    <link href="http://yoursite.com/2016/09/07/1010-%E4%B8%80%E5%85%83%E5%A4%9A%E9%A1%B9%E5%BC%8F%E6%B1%82%E5%AF%BC/"/>
    <id>http://yoursite.com/2016/09/07/1010-一元多项式求导/</id>
    <published>2016-09-07T03:04:31.000Z</published>
    <updated>2016-09-08T02:54:20.157Z</updated>
    
    <content type="html"><![CDATA[<p>原题：<br>设计函数求一元多项式的导数。（注：xn（n为整数）的一阶导数为n*xn-1。）</p>
<p><strong>输入格式</strong>：以指数递降方式输入多项式非零项系数和指数（绝对值均为不超过1000的整数）。数字间以空格分隔。</p>
<p><strong>输出格式</strong>：以与输入相同的格式输出导数多项式非零项的系数和指数。数字间以空格分隔，但结尾不能有多余空格。注意“零多项式”的指数和系数都是0，但是表示为“0 0”。</p>
<p><strong>输入样例</strong>：<br>3 4 -5 2 6 1 -2 0<br><strong>输出样例</strong>：<br>12 3 -10 1 6 0</p>
<a id="more"></a>
<p>解答：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;x_vec;</div><div class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;z_vec;</div><div class="line">	<span class="keyword">int</span> temp;</div><div class="line">	<span class="keyword">int</span> first = <span class="number">1</span>;</div><div class="line">	<span class="keyword">char</span> ch;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;temp)&#123;</div><div class="line">		x_vec.push_back(temp);</div><div class="line">		<span class="built_in">cin</span>&gt;&gt;temp;</div><div class="line">		z_vec.push_back(temp);</div><div class="line">		ch = getchar();</div><div class="line">		<span class="keyword">if</span>(ch == <span class="string">'\n'</span>)</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;::iterator x_iter = x_vec.begin();</div><div class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;::iterator z_iter = z_vec.begin();</div><div class="line">	<span class="keyword">while</span>(x_iter != x_vec.end())&#123;</div><div class="line">		<span class="keyword">if</span>(*x_iter * *z_iter != <span class="number">0</span>)&#123;</div><div class="line">			<span class="keyword">if</span>(first == <span class="number">1</span>)&#123;</div><div class="line">				<span class="built_in">cout</span>&lt;&lt;*x_iter * *z_iter&lt;&lt;<span class="string">" "</span>&lt;&lt;*z_iter<span class="number">-1</span>;</div><div class="line">				first--;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span></div><div class="line">				<span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>&lt;&lt;*x_iter * *z_iter&lt;&lt;<span class="string">" "</span>&lt;&lt;*z_iter<span class="number">-1</span>;</div><div class="line">		&#125;</div><div class="line">		x_iter++;</div><div class="line">		z_iter++;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(first)</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"0 0"</span>;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1010" target="_blank" rel="external">原题链接</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原题：&lt;br&gt;设计函数求一元多项式的导数。（注：xn（n为整数）的一阶导数为n*xn-1。）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入格式&lt;/strong&gt;：以指数递降方式输入多项式非零项系数和指数（绝对值均为不超过1000的整数）。数字间以空格分隔。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输出格式&lt;/strong&gt;：以与输入相同的格式输出导数多项式非零项的系数和指数。数字间以空格分隔，但结尾不能有多余空格。注意“零多项式”的指数和系数都是0，但是表示为“0 0”。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入样例&lt;/strong&gt;：&lt;br&gt;3 4 -5 2 6 1 -2 0&lt;br&gt;&lt;strong&gt;输出样例&lt;/strong&gt;：&lt;br&gt;12 3 -10 1 6 0&lt;/p&gt;
    
    </summary>
    
      <category term="PAT (Basic Level) Practise" scheme="http://yoursite.com/categories/PAT-Basic-Level-Practise/"/>
    
    
      <category term="PAT" scheme="http://yoursite.com/tags/PAT/"/>
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>1009. 说反话</title>
    <link href="http://yoursite.com/2016/09/07/1009-%E8%AF%B4%E5%8F%8D%E8%AF%9D/"/>
    <id>http://yoursite.com/2016/09/07/1009-说反话/</id>
    <published>2016-09-07T03:04:18.000Z</published>
    <updated>2016-09-08T02:54:11.963Z</updated>
    
    <content type="html"><![CDATA[<p>原题：<br>给定一句英语，要求你编写程序，将句中所有单词的顺序颠倒输出。</p>
<p><strong>输入格式</strong>：测试输入包含一个测试用例，在一行内给出总长度不超过80的字符串。字符串由若干单词和若干空格组成，其中单词是由英文字母（大小写有区分）组成的字符串，单词之间用1个空格分开，输入保证句子末尾没有多余的空格。</p>
<p><strong>输出格式</strong>：每个测试用例的输出占一行，输出倒序后的句子。</p>
<p><strong>输入样例</strong>：<br>Hello World Here I Come<br><strong>输出样例</strong>：<br>Come I Here World Hello</p>
<a id="more"></a>
<p>解答：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="built_in">string</span> str;</div><div class="line">	<span class="built_in">string</span> str2;</div><div class="line">	getline(<span class="built_in">cin</span>,str);</div><div class="line">	<span class="built_in">string</span>::size_type p = str.find_last_of(<span class="string">' '</span>);</div><div class="line">	<span class="built_in">string</span>::size_type q = str.size();</div><div class="line">	<span class="keyword">while</span>(p != <span class="number">-1</span>)&#123;</div><div class="line">		str2.assign(str,p+<span class="number">1</span>,q-p<span class="number">-1</span>);</div><div class="line">		<span class="built_in">cout</span>&lt;&lt;str2&lt;&lt;<span class="string">" "</span>;</div><div class="line">		q = p;</div><div class="line">		p = str.find_last_of(<span class="string">' '</span>,p<span class="number">-1</span>);</div><div class="line">	&#125;</div><div class="line">	str2.assign(str,p+<span class="number">1</span>,q-p<span class="number">-1</span>);</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;str2;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1009" target="_blank" rel="external">原题链接</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原题：&lt;br&gt;给定一句英语，要求你编写程序，将句中所有单词的顺序颠倒输出。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入格式&lt;/strong&gt;：测试输入包含一个测试用例，在一行内给出总长度不超过80的字符串。字符串由若干单词和若干空格组成，其中单词是由英文字母（大小写有区分）组成的字符串，单词之间用1个空格分开，输入保证句子末尾没有多余的空格。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输出格式&lt;/strong&gt;：每个测试用例的输出占一行，输出倒序后的句子。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入样例&lt;/strong&gt;：&lt;br&gt;Hello World Here I Come&lt;br&gt;&lt;strong&gt;输出样例&lt;/strong&gt;：&lt;br&gt;Come I Here World Hello&lt;/p&gt;
    
    </summary>
    
      <category term="PAT (Basic Level) Practise" scheme="http://yoursite.com/categories/PAT-Basic-Level-Practise/"/>
    
    
      <category term="PAT" scheme="http://yoursite.com/tags/PAT/"/>
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>1008. 数组元素循环右移问题</title>
    <link href="http://yoursite.com/2016/09/07/1008-%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E5%BE%AA%E7%8E%AF%E5%8F%B3%E7%A7%BB%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2016/09/07/1008-数组元素循环右移问题/</id>
    <published>2016-09-07T03:04:02.000Z</published>
    <updated>2016-09-07T13:24:57.614Z</updated>
    
    <content type="html"><![CDATA[<p>原题：</p>
<blockquote>
<p>一个数组A中存有N（N&gt;0）个整数，在不允许使用另外数组的前提下，将每个整数循环向右移M（M&gt;=0）个位置，即将A中的数据由（A0<br>A1……AN-1）变换为（AN-M …… AN-1 A0<br>A1……AN-M-1）（最后M个数循环移至最前面的M个位置）。如果需要考虑程序移动数据的次数尽量少，要如何设计移动的方法？</p>
<p><strong>输入格式</strong>：每个输入包含一个测试用例，第1行输入N ( 1&lt;=N&lt;=100)、M（M&gt;=0）；第2行输入N个整数，之间用空格分隔。</p>
<p><strong>输出格式</strong>：在一行中输出循环右移M位以后的整数序列，之间用空格分隔，序列结尾不能有多余空格。</p>
<p><strong>输入样例</strong>：<br> 6 2<br> 1 2 3 4 5 6<br><strong>输出样例</strong>：<br> 5 6 1 2 3 4</p>
</blockquote>
<a id="more"></a>
<p>解答:</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> N,M;</div><div class="line">	<span class="built_in">cin</span>&gt;&gt;N&gt;&gt;M;</div><div class="line">	<span class="keyword">int</span> *p = <span class="keyword">new</span> <span class="keyword">int</span>[N];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; N;i++)</div><div class="line">	<span class="built_in">cin</span>&gt;&gt;p[i];</div><div class="line">	M = <span class="built_in">fmod</span>(M,N);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = N-M;i &lt; N;i++)</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;p[i]&lt;&lt;<span class="string">" "</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; N-M;i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(i &lt; N-M<span class="number">-1</span>)</div><div class="line">		<span class="built_in">cout</span>&lt;&lt;p[i]&lt;&lt;<span class="string">" "</span>;</div><div class="line">		<span class="keyword">else</span></div><div class="line">		<span class="built_in">cout</span>&lt;&lt;p[i];</div><div class="line">	&#125;	</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1008" target="_blank" rel="external">原题链接</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原题：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一个数组A中存有N（N&amp;gt;0）个整数，在不允许使用另外数组的前提下，将每个整数循环向右移M（M&amp;gt;=0）个位置，即将A中的数据由（A0&lt;br&gt;A1……AN-1）变换为（AN-M …… AN-1 A0&lt;br&gt;A1……AN-M-1）（最后M个数循环移至最前面的M个位置）。如果需要考虑程序移动数据的次数尽量少，要如何设计移动的方法？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入格式&lt;/strong&gt;：每个输入包含一个测试用例，第1行输入N ( 1&amp;lt;=N&amp;lt;=100)、M（M&amp;gt;=0）；第2行输入N个整数，之间用空格分隔。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输出格式&lt;/strong&gt;：在一行中输出循环右移M位以后的整数序列，之间用空格分隔，序列结尾不能有多余空格。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入样例&lt;/strong&gt;：&lt;br&gt; 6 2&lt;br&gt; 1 2 3 4 5 6&lt;br&gt;&lt;strong&gt;输出样例&lt;/strong&gt;：&lt;br&gt; 5 6 1 2 3 4&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="PAT (Basic Level) Practise" scheme="http://yoursite.com/categories/PAT-Basic-Level-Practise/"/>
    
    
      <category term="PAT" scheme="http://yoursite.com/tags/PAT/"/>
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>1007. 素数对猜想</title>
    <link href="http://yoursite.com/2016/09/07/1007-%E7%B4%A0%E6%95%B0%E5%AF%B9%E7%8C%9C%E6%83%B3/"/>
    <id>http://yoursite.com/2016/09/07/1007-素数对猜想/</id>
    <published>2016-09-07T03:03:45.000Z</published>
    <updated>2016-09-07T07:50:36.273Z</updated>
    
    <content type="html"><![CDATA[<p>原题：</p>
<blockquote>
<p>让我们定义 dn 为：dn = pn+1 - pn，其中 pi 是第i个素数。显然有 d1=1 且对于n&gt;1有 dn<br>是偶数。“素数对猜想”认为“存在无穷多对相邻且差为2的素数”。</p>
<p>现给定任意正整数N (&lt; 105)，请计算不超过N的满足猜想的素数对的个数。</p>
<p><strong>输入格式</strong>：每个测试输入包含1个测试用例，给出正整数N。</p>
<p><strong>输出格式</strong>：每个测试用例的输出占一行，不超过N的满足猜想的素数对的个数。</p>
<p><strong>输入样例</strong>： 20<br><strong>输出样例</strong>： 4</p>
</blockquote>
<a id="more"></a>
<p>解答：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span> </span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isPrime</span><span class="params">(<span class="keyword">int</span> num)</span></span></div><div class="line">&#123;	</div><div class="line">	<span class="keyword">int</span> flag = <span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt;= <span class="built_in">sqrt</span>(num);i++)</div><div class="line">		<span class="keyword">if</span>(num % i == <span class="number">0</span>)&#123;</div><div class="line">		flag = <span class="number">1</span>;</div><div class="line">		<span class="keyword">break</span>;	</div><div class="line">		&#125;</div><div class="line">	<span class="keyword">if</span>(flag == <span class="number">0</span>)</div><div class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> num;</div><div class="line">	<span class="keyword">int</span> count = <span class="number">0</span>;</div><div class="line">	<span class="built_in">cin</span>&gt;&gt;num;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt;= num;i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(isPrime(i) == <span class="literal">true</span> &amp;&amp; i+<span class="number">2</span> &lt;= num &amp;&amp; isPrime(i+<span class="number">1</span>) == <span class="literal">false</span> &amp;&amp; isPrime(i+<span class="number">2</span>) == <span class="literal">true</span>)</div><div class="line">			count++;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;count;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line"> &#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1007" target="_blank" rel="external">原题链接</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原题：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;让我们定义 dn 为：dn = pn+1 - pn，其中 pi 是第i个素数。显然有 d1=1 且对于n&amp;gt;1有 dn&lt;br&gt;是偶数。“素数对猜想”认为“存在无穷多对相邻且差为2的素数”。&lt;/p&gt;
&lt;p&gt;现给定任意正整数N (&amp;lt; 105)，请计算不超过N的满足猜想的素数对的个数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入格式&lt;/strong&gt;：每个测试输入包含1个测试用例，给出正整数N。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输出格式&lt;/strong&gt;：每个测试用例的输出占一行，不超过N的满足猜想的素数对的个数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入样例&lt;/strong&gt;： 20&lt;br&gt;&lt;strong&gt;输出样例&lt;/strong&gt;： 4&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="PAT (Basic Level) Practise" scheme="http://yoursite.com/categories/PAT-Basic-Level-Practise/"/>
    
    
      <category term="PAT" scheme="http://yoursite.com/tags/PAT/"/>
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>1006. 换个格式输出整数</title>
    <link href="http://yoursite.com/2016/09/07/1006-%E6%8D%A2%E4%B8%AA%E6%A0%BC%E5%BC%8F%E8%BE%93%E5%87%BA%E6%95%B4%E6%95%B0/"/>
    <id>http://yoursite.com/2016/09/07/1006-换个格式输出整数/</id>
    <published>2016-09-07T03:03:25.000Z</published>
    <updated>2016-09-07T05:45:25.651Z</updated>
    
    <content type="html"><![CDATA[<p>原题:</p>
<blockquote>
<p>让我们用字母B来表示“百”、字母S表示“十”，用“12…n”来表示个位数字n（&lt;10），换个格式来输出任一个不超过3位的正整数。例如234应该被输出为BBSSS1234，因为它有2个“百”、3个“十”、以及个位的4。</p>
<p><strong>输入格式</strong>：每个测试输入包含1个测试用例，给出正整数n（&lt;1000）。</p>
<p><strong>输出格式</strong>：每个测试用例的输出占一行，用规定的格式输出n。</p>
<p><strong>输入样例1</strong>：<br>234<br><strong>输出样例1</strong>：<br>BBSSS1234<br><strong>输入样例2</strong>：<br>23<br><strong>输出样例2</strong>：<br>SS123</p>
</blockquote>
<a id="more"></a>
<p>解答：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span> </span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> num,a,b,c;</div><div class="line">	<span class="built_in">cin</span>&gt;&gt;num;</div><div class="line">	a = num % <span class="number">10</span>;</div><div class="line">	num /= <span class="number">10</span>;</div><div class="line">	b = num % <span class="number">10</span>;</div><div class="line">	num /= <span class="number">10</span>;</div><div class="line">	c = num % <span class="number">10</span>;</div><div class="line">	<span class="keyword">while</span>(c--)&#123;</div><div class="line">		<span class="built_in">cout</span>&lt;&lt;<span class="string">"B"</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">while</span>(b--)&#123;</div><div class="line">		<span class="built_in">cout</span>&lt;&lt;<span class="string">"S"</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= a;i++)&#123;</div><div class="line">		<span class="built_in">cout</span>&lt;&lt;i;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1006" target="_blank" rel="external">原题链接</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原题:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;让我们用字母B来表示“百”、字母S表示“十”，用“12…n”来表示个位数字n（&amp;lt;10），换个格式来输出任一个不超过3位的正整数。例如234应该被输出为BBSSS1234，因为它有2个“百”、3个“十”、以及个位的4。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入格式&lt;/strong&gt;：每个测试输入包含1个测试用例，给出正整数n（&amp;lt;1000）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输出格式&lt;/strong&gt;：每个测试用例的输出占一行，用规定的格式输出n。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入样例1&lt;/strong&gt;：&lt;br&gt;234&lt;br&gt;&lt;strong&gt;输出样例1&lt;/strong&gt;：&lt;br&gt;BBSSS1234&lt;br&gt;&lt;strong&gt;输入样例2&lt;/strong&gt;：&lt;br&gt;23&lt;br&gt;&lt;strong&gt;输出样例2&lt;/strong&gt;：&lt;br&gt;SS123&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="PAT (Basic Level) Practise" scheme="http://yoursite.com/categories/PAT-Basic-Level-Practise/"/>
    
    
      <category term="PAT" scheme="http://yoursite.com/tags/PAT/"/>
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
  </entry>
  
</feed>

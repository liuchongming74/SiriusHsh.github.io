<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Windows通过cmd查看端口占用杀死进程的命令]]></title>
      <url>http://yoursite.com/2016/09/07/Windows%E9%80%9A%E8%BF%87cmd%E6%9F%A5%E7%9C%8B%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8%E6%9D%80%E6%AD%BB%E8%BF%9B%E7%A8%8B%E7%9A%84%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<p>最近运行<code>hexo s</code>的时候有时候会遇到4000端口被占用的情况，记录一下杀死占用4000端口进程的过程。</p>
<ol>
<li><code>netstat -ano</code>查看所有进程，<code>netstat -ano|findstr &quot;4000&quot;</code>查看4000端口的情况。</li>
<li>这时候能获取到进程的PID，打开任务管理器找到该进程杀死即可。(没有显示PID的情况：查看 -&gt; 选择列 -&gt; 勾选PID)</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[1024. 科学计数法]]></title>
      <url>http://yoursite.com/2016/09/07/1024-%E7%A7%91%E5%AD%A6%E8%AE%A1%E6%95%B0%E6%B3%95/</url>
      <content type="html"><![CDATA[<p>原题：<br>科学计数法是科学家用来表示很大或很小的数字的一种方便的方法，其满足正则表达式[+-][1-9]”.”[0-9]+E[+-][0-9]+，即数字的整数部分只有1位，小数部分至少有1位，该数字及其指数部分的正负号即使对正数也必定明确给出。</p>
<p>现以科学计数法的格式给出实数A，请编写程序按普通数字表示法输出A，并保证所有有效位都被保留。</p>
<p><strong>输入格式：</strong></p>
<p>每个输入包含1个测试用例，即一个以科学计数法表示的实数A。该数字的存储长度不超过9999字节，且其指数的绝对值不超过9999。</p>
<p><strong>输出格式：</strong></p>
<p>对每个测试用例，在一行中按普通数字表示法输出A，并保证所有有效位都被保留，包括末尾的0。</p>
<p><strong>输入样例1：</strong><br>+1.23400E-03<br><strong>输出样例1：</strong><br>0.00123400<br><strong>输入样例2：</strong><br>-1.2E+10<br><strong>输出样例2：</strong><br>-12000000000</p>
<a id="more"></a>
<p>解答：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;	</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	<span class="comment">//freopen("input.txt","r",stdin);</span></div><div class="line">	<span class="built_in">string</span> str,str1,str2;</div><div class="line">	<span class="keyword">bool</span> flag = <span class="literal">true</span>;</div><div class="line">	<span class="built_in">cin</span>&gt;&gt;str;</div><div class="line">	<span class="built_in">string</span>::size_type p = str.find_first_of(<span class="string">'E'</span>);</div><div class="line">	str1.assign(str,<span class="number">1</span>,p<span class="number">-1</span>);</div><div class="line">	str2.assign(str,p+<span class="number">2</span>,str.size() - p - <span class="number">2</span>);</div><div class="line">	<span class="keyword">int</span> b = atoi(str2.c_str());</div><div class="line">	<span class="keyword">if</span>(str[<span class="number">0</span>] == <span class="string">'-'</span>)</div><div class="line">		<span class="built_in">cout</span>&lt;&lt;<span class="string">"-"</span>;</div><div class="line">	<span class="keyword">if</span>(str[p+<span class="number">1</span>] == <span class="string">'-'</span>)&#123;</div><div class="line">		<span class="keyword">while</span>(b--)&#123;</div><div class="line">			<span class="built_in">cout</span>&lt;&lt;<span class="number">0</span>;</div><div class="line">			<span class="keyword">if</span>(flag == <span class="literal">true</span>)&#123;</div><div class="line">				<span class="built_in">cout</span>&lt;&lt;<span class="string">"."</span>;</div><div class="line">				flag = <span class="literal">false</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ;i &lt; str1.size() ; i++)&#123;</div><div class="line">			<span class="keyword">if</span>(i != <span class="number">1</span>)&#123;</div><div class="line">				<span class="built_in">cout</span>&lt;&lt;str1[i];</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;<span class="keyword">else</span>&#123;</div><div class="line">		 <span class="keyword">if</span>(b &lt; str1.size() - <span class="number">2</span>)&#123;</div><div class="line">		 	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; b + <span class="number">2</span>;i++)&#123;</div><div class="line">		 		<span class="keyword">if</span>(i != <span class="number">1</span>)</div><div class="line">		 		<span class="built_in">cout</span>&lt;&lt;str1[i];</div><div class="line">			 &#125;</div><div class="line">			 <span class="built_in">cout</span>&lt;&lt;<span class="string">"."</span>;</div><div class="line">			 <span class="keyword">for</span>(<span class="keyword">int</span> i = b + <span class="number">2</span>;i &lt; str1.size();i++)&#123;</div><div class="line">			 	<span class="built_in">cout</span>&lt;&lt;str1[i];</div><div class="line">			 &#125;</div><div class="line">		 &#125;<span class="keyword">else</span>&#123;</div><div class="line">		 	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; b + <span class="number">2</span>;i++)&#123;</div><div class="line">		 		<span class="keyword">if</span>(i != <span class="number">1</span> &amp;&amp; i &lt; str1.size())</div><div class="line">		 		<span class="built_in">cout</span>&lt;&lt;str1[i];</div><div class="line">		 		<span class="keyword">if</span>(i &gt;= str1.size() &amp;&amp; i &lt;= b+<span class="number">1</span>)</div><div class="line">		 		<span class="built_in">cout</span>&lt;&lt;<span class="string">"0"</span>;</div><div class="line">			 &#125;</div><div class="line">		&#125; </div><div class="line">	&#125;</div><div class="line">	<span class="comment">//fclose(stdin);</span></div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;	</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1024" target="_blank" rel="external">原题链接</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[1023. 组个最小数]]></title>
      <url>http://yoursite.com/2016/09/07/1023-%E7%BB%84%E4%B8%AA%E6%9C%80%E5%B0%8F%E6%95%B0/</url>
      <content type="html"><![CDATA[<p>原题：<br>给定数字0-9各若干个。你可以以任意顺序排列这些数字，但必须全部使用。目标是使得最后得到的数尽可能小（注意0不能做首位）。例如：给定两个0，两个1，三个5，一个8，我们得到的最小的数就是10015558。</p>
<p>现给定数字，请编写程序输出能够组成的最小的数。</p>
<p><strong>输入格式：</strong></p>
<p>每个输入包含1个测试用例。每个测试用例在一行中给出10个非负整数，顺序表示我们拥有数字0、数字1、……数字9的个数。整数间用一个空格分隔。10个数字的总个数不超过50，且至少拥有1个非0的数字。</p>
<p><strong>输出格式：</strong></p>
<p>在一行中输出能够组成的最小的数。</p>
<p><strong>输入样例：</strong><br>2 2 0 0 0 3 0 0 1 0<br><strong>输出样例：</strong><br>10015558<br><a id="more"></a></p>
<p>解答：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="comment">//freopen("input.txt","r",stdin);</span></div><div class="line">	<span class="keyword">int</span> num;</div><div class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;vec;</div><div class="line">	<span class="keyword">int</span> flag = <span class="number">1</span>;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;num)&#123;</div><div class="line">		vec.push_back(num);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;::iterator iter = vec.begin()+<span class="number">1</span>;</div><div class="line">	<span class="keyword">while</span>(*iter == <span class="number">0</span>)&#123;</div><div class="line">		iter++;	</div><div class="line">		flag++;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;flag;	</div><div class="line">	vec[flag]--;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; vec.size();i++)&#123;</div><div class="line">		<span class="keyword">if</span>(vec[i] != <span class="number">0</span>)&#123;</div><div class="line">			<span class="keyword">while</span>(vec[i] != <span class="number">0</span>)&#123;</div><div class="line">				<span class="built_in">cout</span>&lt;&lt;i;</div><div class="line">				vec[i] = vec[i] - <span class="number">1</span>; </div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"><span class="comment">//	fclose(stdin);</span></div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1023" target="_blank" rel="external">原题链接</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[1022. D进制的A+B]]></title>
      <url>http://yoursite.com/2016/09/07/1022-D%E8%BF%9B%E5%88%B6%E7%9A%84A-B/</url>
      <content type="html"><![CDATA[<p>原题：</p>
<p>输入两个非负10进制整数A和B(&lt;=230-1)，输出A+B的D (1 &lt; D &lt;= 10)进制数。</p>
<p><strong>输入格式：</strong></p>
<p>输入在一行中依次给出3个整数A、B和D。</p>
<p><strong>输出格式：</strong></p>
<p>输出A+B的D进制数。</p>
<p><strong>输入样例：</strong><br>123 456 8<br><strong>输出样例：</strong><br>1103</p>
<a id="more"></a>
<p>解答：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> num1,num2,num3;</div><div class="line">	<span class="keyword">int</span> a;</div><div class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;vec;</div><div class="line">	<span class="built_in">cin</span>&gt;&gt;num1&gt;&gt;num2&gt;&gt;a;</div><div class="line">	num3 = num1 + num2;</div><div class="line">	<span class="keyword">while</span>(num3 != <span class="number">0</span>)&#123;</div><div class="line">		vec.push_back(num3 % a);</div><div class="line">		num3 = num3 / a;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;::iterator iter = vec.end()<span class="number">-1</span>;</div><div class="line">	<span class="keyword">if</span>(vec.size() == <span class="number">0</span>)</div><div class="line">	 <span class="built_in">cout</span>&lt;&lt;<span class="number">0</span>;</div><div class="line">	<span class="keyword">else</span>&#123;</div><div class="line">		<span class="keyword">do</span>&#123;</div><div class="line">		<span class="built_in">cout</span>&lt;&lt;*iter;</div><div class="line">		iter--;</div><div class="line">	&#125;<span class="keyword">while</span>(iter != vec.begin() - <span class="number">1</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1022" target="_blank" rel="external">原题链接</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[1021. 个位数统计]]></title>
      <url>http://yoursite.com/2016/09/07/1021-%E4%B8%AA%E4%BD%8D%E6%95%B0%E7%BB%9F%E8%AE%A1/</url>
      <content type="html"><![CDATA[<p>原题：<br>给定一个k位整数N = dk-1<em>10k-1 + … + d1</em>101 + d0 (0&lt;=di&lt;=9, i=0,…,k-1, dk-1&gt;0)，请编写程序统计每种不同的个位数字出现的次数。例如：给定N = 100311，则有2个0，3个1，和1个3。</p>
<p><strong>输入格式：</strong></p>
<p>每个输入包含1个测试用例，即一个不超过1000位的正整数N。</p>
<p><strong>输出格式：</strong></p>
<p>对N中每一种不同的个位数字，以D:M的格式在一行中输出该位数字D及其在N中出现的次数M。要求按D的升序输出。</p>
<p><strong>输入样例：</strong><br>100311<br><strong>输出样例：</strong><br>0:2<br>1:3<br>3:1</p>
<a id="more"></a>
<p>解答：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">string</span> str;</div><div class="line">    <span class="keyword">int</span> flag0 = <span class="number">0</span>,flag1 = <span class="number">0</span>,flag2 = <span class="number">0</span>,flag3 = <span class="number">0</span>,flag4 = <span class="number">0</span>,flag5 = <span class="number">0</span>,flag6 = <span class="number">0</span>,flag7 = <span class="number">0</span>,flag8 = <span class="number">0</span>,flag9 = <span class="number">0</span>;</div><div class="line">    <span class="built_in">cin</span>&gt;&gt;str;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; str.size();i++)&#123;</div><div class="line">    	<span class="keyword">if</span>(str[i] == <span class="string">'0'</span>)</div><div class="line">    	 flag0++;</div><div class="line">    	 <span class="keyword">if</span>(str[i] == <span class="string">'1'</span>)</div><div class="line">    	 flag1++;</div><div class="line">    	 <span class="keyword">if</span>(str[i] == <span class="string">'2'</span>)</div><div class="line">    	 flag2++;</div><div class="line">    	 <span class="keyword">if</span>(str[i] == <span class="string">'3'</span>)</div><div class="line">    	 flag3++;</div><div class="line">    	 <span class="keyword">if</span>(str[i] == <span class="string">'4'</span>)</div><div class="line">    	 flag4++;</div><div class="line">    	 <span class="keyword">if</span>(str[i] == <span class="string">'5'</span>)</div><div class="line">    	 flag5++;</div><div class="line">    	 <span class="keyword">if</span>(str[i] == <span class="string">'6'</span>)</div><div class="line">    	 flag6++;</div><div class="line">    	 <span class="keyword">if</span>(str[i] == <span class="string">'7'</span>)</div><div class="line">    	 flag7++;</div><div class="line">    	 <span class="keyword">if</span>(str[i] == <span class="string">'8'</span>)</div><div class="line">    	 flag8++;</div><div class="line">    	 <span class="keyword">if</span>(str[i] == <span class="string">'9'</span>)</div><div class="line">    	 flag9++;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(flag0 != <span class="number">0</span>)</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"0:"</span>&lt;&lt;flag0&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">	<span class="keyword">if</span>(flag1 != <span class="number">0</span>)</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"1:"</span>&lt;&lt;flag1&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">	<span class="keyword">if</span>(flag2 != <span class="number">0</span>)</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"2:"</span>&lt;&lt;flag2&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">	<span class="keyword">if</span>(flag3 != <span class="number">0</span>)</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"3:"</span>&lt;&lt;flag3&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">	<span class="keyword">if</span>(flag4 != <span class="number">0</span>)</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"4:"</span>&lt;&lt;flag4&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">	<span class="keyword">if</span>(flag5 != <span class="number">0</span>)</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"5:"</span>&lt;&lt;flag5&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">	<span class="keyword">if</span>(flag6 != <span class="number">0</span>)</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"6:"</span>&lt;&lt;flag6&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">	<span class="keyword">if</span>(flag7 != <span class="number">0</span>)</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"7:"</span>&lt;&lt;flag7&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">	<span class="keyword">if</span>(flag8 != <span class="number">0</span>)</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"8:"</span>&lt;&lt;flag8&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    <span class="keyword">if</span>(flag9 != <span class="number">0</span>)</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"9:"</span>&lt;&lt;flag9&lt;&lt;<span class="built_in">endl</span>;	</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1021" target="_blank" rel="external">原题链接</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[1019. 数字黑洞]]></title>
      <url>http://yoursite.com/2016/09/07/1020-%E6%9C%88%E9%A5%BC/</url>
      <content type="html"><![CDATA[<p>原题：</p>
<p>给定任一个各位数字不完全相同的4位正整数，如果我们先把4个数字按非递增排序，再按非递减排序，然后用第1个数字减第2个数字，将得到一个新的数字。一直重复这样做，我们很快会停在有“数字黑洞”之称的6174，这个神奇的数字也叫Kaprekar常数。</p>
<p>例如，我们从6767开始，将得到</p>
<p>7766 - 6677 = 1089<br>9810 - 0189 = 9621<br>9621 - 1269 = 8352<br>8532 - 2358 = 6174<br>7641 - 1467 = 6174<br>… …</p>
<p>现给定任意4位正整数，请编写程序演示到达黑洞的过程。</p>
<p><strong>输入格式：</strong></p>
<p>输入给出一个(0, 10000)区间内的正整数N。</p>
<p><strong>输出格式：</strong></p>
<p>如果N的4位数字全相等，则在一行内输出“N - N = 0000”；否则将计算的每一步在一行内输出，直到6174作为差出现，输出格式见样例。注意每个数字按4位数格式输出。</p>
<p><strong>输入样例1：</strong><br>6767<br><strong>输出样例1：</strong><br>7766 - 6677 = 1089<br>9810 - 0189 = 9621<br>9621 - 1269 = 8352<br>8532 - 2358 = 6174<br><strong>输入样例2：</strong><br>2222<br><strong>输出样例2：</strong><br>2222 - 2222 = 0000</p>
<a id="more"></a>
<p>解答：</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">#<span class="keyword">include</span>&lt;iostream&gt;</div><div class="line">#<span class="keyword">include</span>&lt;cstdlib&gt;</div><div class="line">#<span class="keyword">include</span>&lt;cstdio&gt;</div><div class="line">#<span class="keyword">include</span>&lt;vector&gt;</div><div class="line">#<span class="keyword">include</span>&lt;algorithm&gt;</div><div class="line">#<span class="keyword">include</span>&lt;iomanip&gt;</div><div class="line">using namespace std;</div><div class="line">int main(void)</div><div class="line">&#123;</div><div class="line">	int nn,<span class="keyword">n</span>,a,b,c,<span class="keyword">d</span>,temp;</div><div class="line">	vector&lt;int&gt;<span class="keyword">vec</span>;</div><div class="line">	cin&gt;&gt;<span class="keyword">n</span>;</div><div class="line">	nn = <span class="keyword">n</span>;</div><div class="line">	<span class="keyword">do</span>&#123;</div><div class="line">		a= <span class="keyword">n</span> % 10;</div><div class="line">		<span class="keyword">n</span> /= 10;</div><div class="line">		b = <span class="keyword">n</span> % 10;</div><div class="line">		<span class="keyword">n</span> /= 10;</div><div class="line">		c = <span class="keyword">n</span> % 10;</div><div class="line">		<span class="keyword">n</span> /= 10;</div><div class="line">		<span class="keyword">d</span> = <span class="keyword">n</span> % 10;</div><div class="line">		<span class="keyword">if</span>(a == b &amp;&amp; b == c &amp;&amp; c == <span class="keyword">d</span> )&#123;</div><div class="line">			cout&lt;&lt;nn&lt;&lt;<span class="string">" - "</span>&lt;&lt;nn&lt;&lt;<span class="string">" = 0000"</span>;</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">vec</span>.push_back(a);</div><div class="line">		<span class="keyword">vec</span>.push_back(b);</div><div class="line">		<span class="keyword">vec</span>.push_back(c);</div><div class="line">		<span class="keyword">vec</span>.push_back(<span class="keyword">d</span>);</div><div class="line">		<span class="keyword">sort</span>(<span class="keyword">vec</span>.begin(),<span class="keyword">vec</span>.end(),greater&lt;int&gt;());<span class="comment">//7766</span></div><div class="line">		temp = <span class="keyword">vec</span>[3] + 10 * <span class="keyword">vec</span>[2] + 100 * <span class="keyword">vec</span>[1] + 1000 * <span class="keyword">vec</span>[0];<span class="comment">//temp = 7766</span></div><div class="line">		<span class="keyword">sort</span>(<span class="keyword">vec</span>.begin(),<span class="keyword">vec</span>.end());<span class="comment">//vec : 6677</span></div><div class="line">		<span class="keyword">n</span> = <span class="keyword">vec</span>[3] + 10 * <span class="keyword">vec</span>[2] + 100 * <span class="keyword">vec</span>[1] + 1000 * <span class="keyword">vec</span>[0]; <span class="comment">//n = 6677</span></div><div class="line">		cout&lt;&lt;temp&lt;&lt;<span class="string">" - "</span>&lt;&lt;setw(4)&lt;&lt;setfill('0')&lt;&lt;<span class="keyword">n</span>&lt;&lt;<span class="string">" = "</span>&lt;&lt;setw(4)&lt;&lt;setfill('0')&lt;&lt;temp-<span class="keyword">n</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">n</span> = temp - <span class="keyword">n</span>;</div><div class="line">		<span class="keyword">vec</span>.<span class="keyword">clear</span>();</div><div class="line">	&#125;<span class="keyword">while</span>(<span class="keyword">n</span> != 6174);	</div><div class="line">	<span class="keyword">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1019" target="_blank" rel="external">原题链接</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[1019. 数字黑洞]]></title>
      <url>http://yoursite.com/2016/09/07/1019-%E6%95%B0%E5%AD%97%E9%BB%91%E6%B4%9E/</url>
      <content type="html"><![CDATA[<p>原题：</p>
<p>给定任一个各位数字不完全相同的4位正整数，如果我们先把4个数字按非递增排序，再按非递减排序，然后用第1个数字减第2个数字，将得到一个新的数字。一直重复这样做，我们很快会停在有“数字黑洞”之称的6174，这个神奇的数字也叫Kaprekar常数。</p>
<p>例如，我们从6767开始，将得到</p>
<p>7766 - 6677 = 1089<br>9810 - 0189 = 9621<br>9621 - 1269 = 8352<br>8532 - 2358 = 6174<br>7641 - 1467 = 6174<br>… …</p>
<p>现给定任意4位正整数，请编写程序演示到达黑洞的过程。</p>
<p><strong>输入格式：</strong></p>
<p>输入给出一个(0, 10000)区间内的正整数N。</p>
<p><strong>输出格式：</strong></p>
<p>如果N的4位数字全相等，则在一行内输出“N - N = 0000”；否则将计算的每一步在一行内输出，直到6174作为差出现，输出格式见样例。注意每个数字按4位数格式输出。</p>
<p><strong>输入样例1：</strong><br>6767<br><strong>输出样例1：</strong><br>7766 - 6677 = 1089<br>9810 - 0189 = 9621<br>9621 - 1269 = 8352<br>8532 - 2358 = 6174<br><strong>输入样例2：</strong><br>2222<br><strong>输出样例2：</strong><br>2222 - 2222 = 0000</p>
<a id="more"></a>
<p>解答：</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">#<span class="keyword">include</span>&lt;iostream&gt;</div><div class="line">#<span class="keyword">include</span>&lt;cstdlib&gt;</div><div class="line">#<span class="keyword">include</span>&lt;cstdio&gt;</div><div class="line">#<span class="keyword">include</span>&lt;vector&gt;</div><div class="line">#<span class="keyword">include</span>&lt;algorithm&gt;</div><div class="line">#<span class="keyword">include</span>&lt;iomanip&gt;</div><div class="line">using namespace std;</div><div class="line">int main(void)</div><div class="line">&#123;</div><div class="line">	int nn,<span class="keyword">n</span>,a,b,c,<span class="keyword">d</span>,temp;</div><div class="line">	vector&lt;int&gt;<span class="keyword">vec</span>;</div><div class="line">	cin&gt;&gt;<span class="keyword">n</span>;</div><div class="line">	nn = <span class="keyword">n</span>;</div><div class="line">	<span class="keyword">do</span>&#123;</div><div class="line">		a= <span class="keyword">n</span> % 10;</div><div class="line">		<span class="keyword">n</span> /= 10;</div><div class="line">		b = <span class="keyword">n</span> % 10;</div><div class="line">		<span class="keyword">n</span> /= 10;</div><div class="line">		c = <span class="keyword">n</span> % 10;</div><div class="line">		<span class="keyword">n</span> /= 10;</div><div class="line">		<span class="keyword">d</span> = <span class="keyword">n</span> % 10;</div><div class="line">		<span class="keyword">if</span>(a == b &amp;&amp; b == c &amp;&amp; c == <span class="keyword">d</span> )&#123;</div><div class="line">			cout&lt;&lt;nn&lt;&lt;<span class="string">" - "</span>&lt;&lt;nn&lt;&lt;<span class="string">" = 0000"</span>;</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">vec</span>.push_back(a);</div><div class="line">		<span class="keyword">vec</span>.push_back(b);</div><div class="line">		<span class="keyword">vec</span>.push_back(c);</div><div class="line">		<span class="keyword">vec</span>.push_back(<span class="keyword">d</span>);</div><div class="line">		<span class="keyword">sort</span>(<span class="keyword">vec</span>.begin(),<span class="keyword">vec</span>.end(),greater&lt;int&gt;());<span class="comment">//7766</span></div><div class="line">		temp = <span class="keyword">vec</span>[3] + 10 * <span class="keyword">vec</span>[2] + 100 * <span class="keyword">vec</span>[1] + 1000 * <span class="keyword">vec</span>[0];<span class="comment">//temp = 7766</span></div><div class="line">		<span class="keyword">sort</span>(<span class="keyword">vec</span>.begin(),<span class="keyword">vec</span>.end());<span class="comment">//vec : 6677</span></div><div class="line">		<span class="keyword">n</span> = <span class="keyword">vec</span>[3] + 10 * <span class="keyword">vec</span>[2] + 100 * <span class="keyword">vec</span>[1] + 1000 * <span class="keyword">vec</span>[0]; <span class="comment">//n = 6677</span></div><div class="line">		cout&lt;&lt;temp&lt;&lt;<span class="string">" - "</span>&lt;&lt;setw(4)&lt;&lt;setfill('0')&lt;&lt;<span class="keyword">n</span>&lt;&lt;<span class="string">" = "</span>&lt;&lt;setw(4)&lt;&lt;setfill('0')&lt;&lt;temp-<span class="keyword">n</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">n</span> = temp - <span class="keyword">n</span>;</div><div class="line">		<span class="keyword">vec</span>.<span class="keyword">clear</span>();</div><div class="line">	&#125;<span class="keyword">while</span>(<span class="keyword">n</span> != 6174);	</div><div class="line">	<span class="keyword">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1019" target="_blank" rel="external">原题链接</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[1018. 锤子剪刀布]]></title>
      <url>http://yoursite.com/2016/09/07/1018-%E9%94%A4%E5%AD%90%E5%89%AA%E5%88%80%E5%B8%83/</url>
      <content type="html"><![CDATA[<p>原题：<br>现给出两人的交锋记录，请统计双方的胜、平、负次数，并且给出双方分别出什么手势的胜算最大。</p>
<p><strong>输入格式</strong>：</p>
<p>输入第1行给出正整数N（&lt;=105），即双方交锋的次数。随后N行，每行给出一次交锋的信息，即甲、乙双方同时给出的的手势。C代表“锤子”、J代表“剪刀”、B代表“布”，第1个字母代表甲方，第2个代表乙方，中间有1个空格。</p>
<p><strong>输出格式</strong>：</p>
<p>输出第1、2行分别给出甲、乙的胜、平、负次数，数字间以1个空格分隔。第3行给出两个字母，分别代表甲、乙获胜次数最多的手势，中间有1个空格。如果解不唯一，则输出按字母序最小的解。</p>
<p><strong>输入样例：</strong><br>10<br>C J<br>J B<br>C B<br>B B<br>B C<br>C C<br>C B<br>J B<br>B C<br>J J<br><strong>输出样例：</strong><br>5 3 2<br>2 3 5<br>B B</p>
<a id="more"></a>
<p>解答：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">compare</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(a &gt; b)</div><div class="line">	<span class="keyword">return</span> </div><div class="line">&#125;</div><div class="line"><span class="keyword">int</span> main(<span class="keyword">void</span>)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> num;</div><div class="line">	<span class="keyword">char</span> ch1,ch2;</div><div class="line">	<span class="keyword">int</span> win_jia = <span class="number">0</span>,win_yi = <span class="number">0</span>,pin = <span class="number">0</span>;</div><div class="line">	<span class="keyword">int</span> win_jia_c = <span class="number">0</span>,win_jia_j = <span class="number">0</span>,win_jia_b = <span class="number">0</span>,win_yi_c = <span class="number">0</span>,win_yi_j = <span class="number">0</span>,win_yi_b = <span class="number">0</span>;</div><div class="line">	<span class="built_in">cin</span>&gt;&gt;num;</div><div class="line">	<span class="keyword">while</span>(num--)&#123;</div><div class="line">		<span class="built_in">cin</span>&gt;&gt;ch1&gt;&gt;ch2;</div><div class="line">		<span class="keyword">if</span>(ch1 == <span class="string">'C'</span>)&#123;</div><div class="line">			<span class="keyword">if</span>(ch2 == <span class="string">'C'</span>)&#123;</div><div class="line">				pin++;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(ch2 == <span class="string">'J'</span>)&#123;</div><div class="line">				win_jia++;</div><div class="line">				win_jia_c++;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(ch2 == <span class="string">'B'</span>)&#123;</div><div class="line">				win_yi++;</div><div class="line">				win_yi_b++;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>( ch1 == <span class="string">'J'</span>)&#123;</div><div class="line">			<span class="keyword">if</span>(ch2 == <span class="string">'C'</span>)&#123;</div><div class="line">				win_yi++;</div><div class="line">				win_yi_c++;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(ch2 == <span class="string">'J'</span>)&#123;</div><div class="line">				pin++;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(ch2 == <span class="string">'B'</span>)&#123;</div><div class="line">				win_jia++;</div><div class="line">				win_jia_j++;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(ch1 == <span class="string">'B'</span>)&#123;</div><div class="line">			<span class="keyword">if</span>(ch2 == <span class="string">'C'</span>)&#123;</div><div class="line">				win_jia++;</div><div class="line">				win_jia_b++;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(ch2 == <span class="string">'J'</span>)&#123;</div><div class="line">				win_yi++;</div><div class="line">				win_yi_j++;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(ch2 == <span class="string">'B'</span>)&#123;</div><div class="line">				pin++;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;win_jia&lt;&lt;<span class="string">" "</span>&lt;&lt;pin&lt;&lt;<span class="string">" "</span>&lt;&lt;win_yi&lt;&lt;<span class="built_in">endl</span>&lt;&lt;win_yi&lt;&lt;<span class="string">" "</span>&lt;&lt;pin&lt;&lt;<span class="string">" "</span>&lt;&lt;win_jia&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;((win_jia_b &gt;= win_jia_c ? win_jia_b : win_jia_c) &gt;= win_jia_j ? (win_jia_b &gt;= win_jia_c ? <span class="string">'B'</span>:<span class="string">'C'</span>) : <span class="string">'J'</span>)&lt;&lt;<span class="string">" "</span>;</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;((win_yi_b &gt;= win_yi_c ? win_yi_b : win_yi_c) &gt;= win_yi_j ? (win_yi_b &gt;= win_yi_c ? <span class="string">'B'</span>:<span class="string">'C'</span>) : <span class="string">'J'</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1018" target="_blank" rel="external">原题链接</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[1017. A除以B]]></title>
      <url>http://yoursite.com/2016/09/07/1017-A%E9%99%A4%E4%BB%A5B/</url>
      <content type="html"><![CDATA[<p>原题：<br>本题要求计算A/B，其中A是不超过1000位的正整数，B是1位正整数。你需要输出商数Q和余数R，使得A = B * Q + R成立。</p>
<p><strong>输入格式：</strong></p>
<p>输入在1行中依次给出A和B，中间以1空格分隔。</p>
<p><strong>输出格式：</strong></p>
<p>在1行中依次输出Q和R，中间以1空格分隔。</p>
<p><strong>输入样例：</strong><br>123456789050987654321 7<br><strong>输出样例：</strong><br>17636684150141093474 3</p>
<a id="more"></a>
<p>解答：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="built_in">string</span> str,ans;</div><div class="line">	<span class="keyword">int</span> a,b = <span class="number">0</span>,temp;</div><div class="line">	<span class="keyword">bool</span> flag = <span class="literal">false</span>;</div><div class="line">	<span class="built_in">cin</span>&gt;&gt;str&gt;&gt;a;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; str.size();i++)&#123;</div><div class="line">		<span class="keyword">if</span>(str[i] -<span class="string">'0'</span> + b * <span class="number">10</span> &lt; a)&#123;</div><div class="line">			b = str[i] - <span class="string">'0'</span> + <span class="number">10</span> * b;</div><div class="line">			<span class="keyword">if</span>(flag == <span class="literal">true</span>)</div><div class="line">			<span class="built_in">cout</span>&lt;&lt;<span class="number">0</span>;</div><div class="line">			<span class="keyword">continue</span>;</div><div class="line">		&#125;</div><div class="line">			</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			b = str[i] -<span class="string">'0'</span> + b * <span class="number">10</span>;</div><div class="line">			temp = b / a;</div><div class="line">			<span class="built_in">cout</span>&lt;&lt;temp;</div><div class="line">			flag = <span class="literal">true</span>;</div><div class="line">			b = b % a;</div><div class="line">		&#125;</div><div class="line">			  </div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(flag == <span class="literal">false</span>)</div><div class="line">		<span class="built_in">cout</span>&lt;&lt;<span class="number">0</span>&lt;&lt;<span class="string">" "</span>&lt;&lt;b;</div><div class="line">	<span class="keyword">else</span> </div><div class="line">		<span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>&lt;&lt;b;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1017" target="_blank" rel="external">原题链接</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[1016. 部分A+B]]></title>
      <url>http://yoursite.com/2016/09/07/1015-%E5%BE%B7%E6%89%8D%E8%AE%BA/</url>
      <content type="html"><![CDATA[<p>原题：</p>
<p>正整数A的“DA（为1位整数）部分”定义为由A中所有DA组成的新整数PA。例如：给定A = 3862767，DA = 6，则A的“6部分”PA是66，因为A中有2个6。</p>
<p>现给定A、DA、B、DB，请编写程序计算PA + PB。</p>
<p><strong>输入格式</strong>：</p>
<p>输入在一行中依次给出A、DA、B、DB，中间以空格分隔，其中0 &lt; A, B &lt; 1010。</p>
<p><strong>输出格式</strong>：</p>
<p>在一行中输出PA + PB的值。</p>
<p><strong>输入样例1：</strong><br>3862767 6 13530293 3<br><strong>输出样例1：</strong><br>399<br><strong>输入样例2：</strong><br>3862767 1 13530293 8<br><strong>输出样例2：</strong><br>0</p>
<a id="more"></a>
<p>解答：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="built_in">string</span> str1,str2,str3,str4;</div><div class="line">	<span class="keyword">char</span> num1,num2;</div><div class="line">	</div><div class="line">	<span class="built_in">cin</span>&gt;&gt;str1&gt;&gt;num1&gt;&gt;str2&gt;&gt;num2;</div><div class="line">	<span class="built_in">string</span>::size_type p = str1.find_first_of(num1);</div><div class="line">	<span class="keyword">while</span>(p != <span class="built_in">string</span>::npos)&#123;</div><div class="line">		str3 = str3 + num1;</div><div class="line">		p = str1.find_first_of(num1,p+<span class="number">1</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">string</span>::size_type q = str2.find_first_of(num2);</div><div class="line">	<span class="keyword">while</span>(q != <span class="built_in">string</span>::npos)&#123;</div><div class="line">		str4 = str4 + num2;</div><div class="line">		q = str2.find_first_of(num2,q+<span class="number">1</span>); </div><div class="line">	&#125;</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;atoi(str3.c_str())+atoi(str4.c_str()); </div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1016" target="_blank" rel="external">原题链接</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[1016. 部分A+B]]></title>
      <url>http://yoursite.com/2016/09/07/1016-%E9%83%A8%E5%88%86A-B/</url>
      <content type="html"><![CDATA[<p>原题：</p>
<p>正整数A的“DA（为1位整数）部分”定义为由A中所有DA组成的新整数PA。例如：给定A = 3862767，DA = 6，则A的“6部分”PA是66，因为A中有2个6。</p>
<p>现给定A、DA、B、DB，请编写程序计算PA + PB。</p>
<p><strong>输入格式</strong>：</p>
<p>输入在一行中依次给出A、DA、B、DB，中间以空格分隔，其中0 &lt; A, B &lt; 1010。</p>
<p><strong>输出格式</strong>：</p>
<p>在一行中输出PA + PB的值。</p>
<p><strong>输入样例1：</strong><br>3862767 6 13530293 3<br><strong>输出样例1：</strong><br>399<br><strong>输入样例2：</strong><br>3862767 1 13530293 8<br><strong>输出样例2：</strong><br>0</p>
<a id="more"></a>
<p>解答：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="built_in">string</span> str1,str2,str3,str4;</div><div class="line">	<span class="keyword">char</span> num1,num2;</div><div class="line">	</div><div class="line">	<span class="built_in">cin</span>&gt;&gt;str1&gt;&gt;num1&gt;&gt;str2&gt;&gt;num2;</div><div class="line">	<span class="built_in">string</span>::size_type p = str1.find_first_of(num1);</div><div class="line">	<span class="keyword">while</span>(p != <span class="built_in">string</span>::npos)&#123;</div><div class="line">		str3 = str3 + num1;</div><div class="line">		p = str1.find_first_of(num1,p+<span class="number">1</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">string</span>::size_type q = str2.find_first_of(num2);</div><div class="line">	<span class="keyword">while</span>(q != <span class="built_in">string</span>::npos)&#123;</div><div class="line">		str4 = str4 + num2;</div><div class="line">		q = str2.find_first_of(num2,q+<span class="number">1</span>); </div><div class="line">	&#125;</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;atoi(str3.c_str())+atoi(str4.c_str()); </div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1016" target="_blank" rel="external">原题链接</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[1014. 福尔摩斯的约会]]></title>
      <url>http://yoursite.com/2016/09/07/1014-%E7%A6%8F%E5%B0%94%E6%91%A9%E6%96%AF%E7%9A%84%E7%BA%A6%E4%BC%9A/</url>
      <content type="html"><![CDATA[<p>原题：<br>大侦探福尔摩斯接到一张奇怪的字条：“我们约会吧！ 3485djDkxh4hhGE 2984akDfkkkkggEdsb s&amp;hgsfdk d&amp;Hyscvnm”。大侦探很快就明白了，字条上奇怪的乱码实际上就是约会的时间“星期四 14:04”，因为前面两字符串中第1对相同的大写英文字母（大小写有区分）是第4个字母’D’，代表星期四；第2对相同的字符是’E’，那是第5个英文字母，代表一天里的第14个钟头（于是一天的0点到23点由数字0到9、以及大写字母A到N表示）；后面两字符串第1对相同的英文字母’s’出现在第4个位置（从0开始计数）上，代表第4分钟。现给定两对字符串，请帮助福尔摩斯解码得到约会的时间。</p>
<p><strong>输入格式</strong>：</p>
<p>输入在4行中分别给出4个非空、不包含空格、且长度不超过60的字符串。</p>
<p><strong>输出格式</strong>：</p>
<p>在一行中输出约会的时间，格式为“DAY HH:MM”，其中“DAY”是某星期的3字符缩写，即MON表示星期一，TUE表示星期二，WED表示星期三，THU表示星期四，FRI表示星期五，SAT表示星期六，SUN表示星期日。题目输入保证每个测试存在唯一解。</p>
<p><strong>输入样例</strong>：<br>3485djDkxh4hhGE<br>2984akDfkkkkggEdsb<br>s&amp;hgsfdk<br>d&amp;Hyscvnm<br><strong>输出样例</strong>：<br>THU 14:04</p>
<a id="more"></a>
<p>解答：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iomanip&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="built_in">string</span> str1,str2,str3,str4;</div><div class="line">	<span class="keyword">int</span> flag1 = <span class="number">0</span>,flag2 = <span class="number">0</span>,flag3 = <span class="number">0</span>;</div><div class="line">	<span class="keyword">bool</span> turn1 = <span class="literal">true</span>;</div><div class="line">	<span class="built_in">cin</span>&gt;&gt;str1&gt;&gt;str2&gt;&gt;str3&gt;&gt;str4;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; str1.size() &amp;&amp; i &lt; str2.size();i++)&#123;</div><div class="line">		<span class="keyword">if</span>(str1[i] == str2[i] &amp;&amp; str1[i]  &gt;= <span class="string">'A'</span> &amp;&amp; str1[i] &lt;= <span class="string">'G'</span> &amp;&amp; turn1 == <span class="literal">true</span>)&#123;</div><div class="line">			flag1 = str1[i] - <span class="string">'A'</span> + <span class="number">1</span>;</div><div class="line">			turn1 = <span class="literal">false</span>;</div><div class="line">			<span class="keyword">continue</span>;</div><div class="line">		&#125;	</div><div class="line">		<span class="keyword">if</span>(str1[i] == str2[i] &amp;&amp; ((str1[i]  &gt;= <span class="string">'A'</span> &amp;&amp; str1[i]  &lt;= <span class="string">'N'</span> )||(str1[i]  &gt;= <span class="string">'0'</span> &amp;&amp; str1[i] &lt;= <span class="string">'9'</span> ))  &amp;&amp; turn1 == <span class="literal">false</span>)&#123;</div><div class="line">			<span class="keyword">if</span>(str1[i] &gt;= <span class="string">'A'</span> &amp;&amp; str1[i]  &lt;= <span class="string">'N'</span>)</div><div class="line">			flag2 = str1[i] - <span class="string">'A'</span> + <span class="number">10</span>;</div><div class="line">			<span class="keyword">else</span> </div><div class="line">			flag2 = str1[i] - <span class="string">'0'</span>;</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; str3.size() &amp;&amp; i &lt; str4.size();i++)&#123;</div><div class="line">		<span class="keyword">if</span>(str3[i] == str4[i] &amp;&amp; ((str3[i]  &gt;= <span class="string">'A'</span> &amp;&amp; str3[i]  &lt;= <span class="string">'Z'</span>)||(str3[i] &gt;= <span class="string">'a'</span> &amp;&amp; str3[i]  &lt;= <span class="string">'z'</span> )))&#123;</div><div class="line">			flag3 = i;</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">switch</span>(flag1)&#123;</div><div class="line">		<span class="keyword">case</span> <span class="number">1</span> : <span class="built_in">cout</span>&lt;&lt;<span class="string">"MON "</span>;<span class="keyword">break</span>;</div><div class="line">		<span class="keyword">case</span> <span class="number">2</span> : <span class="built_in">cout</span>&lt;&lt;<span class="string">"TUE "</span>;<span class="keyword">break</span>;</div><div class="line">		<span class="keyword">case</span> <span class="number">3</span> : <span class="built_in">cout</span>&lt;&lt;<span class="string">"WED "</span>;<span class="keyword">break</span>;</div><div class="line">		<span class="keyword">case</span> <span class="number">4</span> : <span class="built_in">cout</span>&lt;&lt;<span class="string">"THU "</span>;<span class="keyword">break</span>;</div><div class="line">		<span class="keyword">case</span> <span class="number">5</span> : <span class="built_in">cout</span>&lt;&lt;<span class="string">"FRI "</span>;<span class="keyword">break</span>;</div><div class="line">		<span class="keyword">case</span> <span class="number">6</span> : <span class="built_in">cout</span>&lt;&lt;<span class="string">"SAT "</span>;<span class="keyword">break</span>;</div><div class="line">		<span class="keyword">case</span> <span class="number">7</span> : <span class="built_in">cout</span>&lt;&lt;<span class="string">"SUN "</span>;<span class="keyword">break</span>;</div><div class="line">		<span class="keyword">default</span> : <span class="built_in">exit</span>(<span class="number">-1</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;setw(<span class="number">2</span>)&lt;&lt;setfill(<span class="string">'0'</span>)&lt;&lt;flag2&lt;&lt;<span class="string">":"</span>&lt;&lt;setw(<span class="number">2</span>)&lt;&lt;setfill(<span class="string">'0'</span>)&lt;&lt;flag3;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1014" target="_blank" rel="external">原题链接</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[1013. 数素数]]></title>
      <url>http://yoursite.com/2016/09/07/1013-%E6%95%B0%E7%B4%A0%E6%95%B0/</url>
      <content type="html"><![CDATA[<p>原题：<br>令Pi表示第i个素数。现任给两个正整数M &lt;= N &lt;= 104，请输出PM到PN的所有素数。</p>
<p><strong>输入格式</strong>：</p>
<p>输入在一行中给出M和N，其间以空格分隔。</p>
<p><strong>输出格式</strong>：</p>
<p>输出从PM到PN的所有素数，每10个数字占1行，其间以空格分隔，但行末不得有多余空格。</p>
<p><strong>输入样例</strong>：<br>5 27<br><strong>输出样例</strong>：<br>11 13 17 19 23 29 31 37 41 43<br>47 53 59 61 67 71 73 79 83 89<br>97 101 103</p>
<a id="more"></a>
<p>解答：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isPrime</span><span class="params">(<span class="keyword">int</span> num)</span></span>&#123;</div><div class="line">	<span class="keyword">bool</span> flag = <span class="literal">true</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt;= <span class="built_in">sqrt</span>(num);i++)</div><div class="line">	<span class="keyword">if</span>(num % i == <span class="number">0</span>)&#123;</div><div class="line">		flag = <span class="literal">false</span>;</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(flag) <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> M,N,count=<span class="number">0</span>,count1=<span class="number">0</span>;</div><div class="line">	<span class="built_in">cin</span>&gt;&gt;M&gt;&gt;N;</div><div class="line">	</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &gt; <span class="number">0</span>;i++)&#123;</div><div class="line">		<span class="keyword">if</span>(isPrime(i))&#123;</div><div class="line">		count++;</div><div class="line">		<span class="keyword">if</span>(count &gt;= M &amp;&amp; count &lt; N)&#123;</div><div class="line">			<span class="keyword">if</span>(count1 % <span class="number">10</span> == <span class="number">9</span>)</div><div class="line">			<span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			<span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="string">" "</span>;</div><div class="line">			count1++;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(count == N)&#123;</div><div class="line">			<span class="built_in">cout</span>&lt;&lt;i;</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1013" target="_blank" rel="external">原题链接</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[1012. 数字分类]]></title>
      <url>http://yoursite.com/2016/09/07/1012-%E6%95%B0%E5%AD%97%E5%88%86%E7%B1%BB/</url>
      <content type="html"><![CDATA[<p>原题：</p>
<p>给定一系列正整数，请按要求对数字进行分类，并输出以下5个数字：</p>
<p>A1 = 能被5整除的数字中所有偶数的和；<br>A2 = 将被5除后余1的数字按给出顺序进行交错求和，即计算n1-n2+n3-n4…；<br>A3 = 被5除后余2的数字的个数；<br>A4 = 被5除后余3的数字的平均数，精确到小数点后1位；<br>A5 = 被5除后余4的数字中最大数字。<br><strong>输入格式</strong>：</p>
<p>每个输入包含1个测试用例。每个测试用例先给出一个不超过1000的正整数N，随后给出N个不超过1000的待分类的正整数。数字间以空格分隔。</p>
<p><strong>输出格式</strong>：</p>
<p>对给定的N个正整数，按题目要求计算A1~A5并在一行中顺序输出。数字间以空格分隔，但行末不得有多余空格。</p>
<p>若其中某一类数字不存在，则在相应位置输出“N”。</p>
<p><strong>输入样例1</strong>：<br>13 1 2 3 4 5 6 7 8 9 10 20 16 18<br><strong>输出样例1</strong>：<br>30 11 2 9.7 9<br><strong>输入样例2</strong>：<br>8 1 2 4 5 6 7 9 16<br><strong>输出样例2</strong>：<br>N 11 2 N 9</p>
<a id="more"></a>
<p>解答：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iomanip&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> N,A1=<span class="number">0</span>,A2=<span class="number">0</span>,A3=<span class="number">0</span>,A4=<span class="number">0</span>,A5=<span class="number">0</span>,flag=<span class="number">1</span>,count=<span class="number">0</span>;</div><div class="line">	<span class="keyword">bool</span> flag2 = <span class="literal">false</span>,flag3 = <span class="literal">false</span>;</div><div class="line">	<span class="keyword">int</span> <span class="built_in">array</span>[<span class="number">1005</span>];</div><div class="line">	<span class="built_in">cin</span>&gt;&gt;N;	</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; N;i++)&#123;</div><div class="line">		<span class="built_in">cin</span>&gt;&gt;<span class="built_in">array</span>[i];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; N;i++)&#123;</div><div class="line">		<span class="keyword">if</span>(<span class="built_in">array</span>[i] % <span class="number">5</span> == <span class="number">0</span> &amp;&amp; <span class="built_in">array</span>[i] % <span class="number">2</span> == <span class="number">0</span>)&#123;</div><div class="line">			A1 += <span class="built_in">array</span>[i];</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(<span class="built_in">array</span>[i] % <span class="number">5</span> == <span class="number">1</span>)&#123;</div><div class="line">			<span class="keyword">if</span>(flag ==<span class="number">1</span>)&#123;</div><div class="line">				A2 += <span class="built_in">array</span>[i];</div><div class="line">				flag = <span class="number">0</span>;</div><div class="line">				flag3 = <span class="literal">true</span>;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span>&#123;</div><div class="line">				A2 -= <span class="built_in">array</span>[i];</div><div class="line">				flag = <span class="number">1</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(<span class="built_in">array</span>[i] % <span class="number">5</span> == <span class="number">2</span>)</div><div class="line">		A3++;</div><div class="line">		<span class="keyword">if</span>(<span class="built_in">array</span>[i] % <span class="number">5</span> == <span class="number">3</span>)</div><div class="line">		&#123;</div><div class="line">			A4 += <span class="built_in">array</span>[i];</div><div class="line">			count++;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(<span class="built_in">array</span>[i] % <span class="number">5</span> ==<span class="number">4</span>)&#123;</div><div class="line">			<span class="keyword">if</span>(<span class="built_in">array</span>[i] &gt; A5)</div><div class="line">			A5 = <span class="built_in">array</span>[i];</div><div class="line">			flag2 = <span class="literal">true</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(A1 != <span class="number">0</span>)</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;A1&lt;&lt;<span class="string">" "</span>;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"N "</span>;</div><div class="line">	<span class="keyword">if</span>(flag3 == <span class="literal">true</span>)</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;A2&lt;&lt;<span class="string">" "</span>;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"N "</span>;</div><div class="line">	<span class="keyword">if</span>(A3 != <span class="number">0</span>)</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;A3&lt;&lt;<span class="string">" "</span>;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"N "</span>;</div><div class="line">	<span class="keyword">if</span>(A4 != <span class="number">0</span>)</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;setiosflags(ios::fixed)&lt;&lt;setprecision(<span class="number">1</span>)&lt;&lt;(<span class="keyword">float</span>)A4/count&lt;&lt;<span class="string">" "</span>;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"N "</span>;</div><div class="line">	<span class="keyword">if</span>(flag2 == <span class="literal">true</span>)</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;A5;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"N"</span>;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1012" target="_blank" rel="external">原题链接</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[1011. A+B和C]]></title>
      <url>http://yoursite.com/2016/09/07/1011-A-B%E5%92%8CC/</url>
      <content type="html"><![CDATA[<p>原题：<br>给定区间[-231, 231]内的3个整数A、B和C，请判断A+B是否大于C。</p>
<p><strong>输入格式</strong>：</p>
<p>输入第1行给出正整数T(&lt;=10)，是测试用例的个数。随后给出T组测试用例，每组占一行，顺序给出A、B和C。整数间以空格分隔。</p>
<p><strong>输出格式</strong>：</p>
<p>对每组测试用例，在一行中输出“Case #X: true”如果A+B&gt;C，否则输出“Case #X: false”，其中X是测试用例的编号（从1开始）。</p>
<p><strong>输入样例</strong>：<br>4<br>1 2 3<br>2 3 4<br>2147483647 0 2147483646<br>0 -2147483648 -2147483647<br><strong>输出样例</strong>：<br>Case #1: false<br>Case #2: true<br>Case #3: true<br>Case #4: false</p>
<a id="more"></a>
<p>解答：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;	</div><div class="line">	<span class="keyword">long</span> num1,num2,num3,sum;</div><div class="line">	<span class="built_in">cin</span>&gt;&gt;sum;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;sum;i++)&#123;</div><div class="line">		<span class="built_in">cin</span>&gt;&gt;num1&gt;&gt;num2&gt;&gt;num3;</div><div class="line">		<span class="keyword">if</span>(num1 + num2 &gt; num3)</div><div class="line">			<span class="built_in">cout</span>&lt;&lt;<span class="string">"Case #"</span>&lt;&lt;i+<span class="number">1</span>&lt;&lt;<span class="string">": true"</span>;	</div><div class="line">		<span class="keyword">else</span></div><div class="line">			<span class="built_in">cout</span>&lt;&lt;<span class="string">"Case #"</span>&lt;&lt;i+<span class="number">1</span>&lt;&lt;<span class="string">": false"</span>;</div><div class="line">		<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1011" target="_blank" rel="external">原题链接</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[1010. 一元多项式求导]]></title>
      <url>http://yoursite.com/2016/09/07/1010-%E4%B8%80%E5%85%83%E5%A4%9A%E9%A1%B9%E5%BC%8F%E6%B1%82%E5%AF%BC/</url>
      <content type="html"><![CDATA[<p>原题：<br>设计函数求一元多项式的导数。（注：xn（n为整数）的一阶导数为n*xn-1。）</p>
<p><strong>输入格式</strong>：以指数递降方式输入多项式非零项系数和指数（绝对值均为不超过1000的整数）。数字间以空格分隔。</p>
<p><strong>输出格式</strong>：以与输入相同的格式输出导数多项式非零项的系数和指数。数字间以空格分隔，但结尾不能有多余空格。注意“零多项式”的指数和系数都是0，但是表示为“0 0”。</p>
<p><strong>输入样例</strong>：<br>3 4 -5 2 6 1 -2 0<br><strong>输出样例</strong>：<br>12 3 -10 1 6 0</p>
<a id="more"></a>
<p>解答：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;x_vec;</div><div class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;z_vec;</div><div class="line">	<span class="keyword">int</span> temp;</div><div class="line">	<span class="keyword">int</span> first = <span class="number">1</span>;</div><div class="line">	<span class="keyword">char</span> ch;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;temp)&#123;</div><div class="line">		x_vec.push_back(temp);</div><div class="line">		<span class="built_in">cin</span>&gt;&gt;temp;</div><div class="line">		z_vec.push_back(temp);</div><div class="line">		ch = getchar();</div><div class="line">		<span class="keyword">if</span>(ch == <span class="string">'\n'</span>)</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;::iterator x_iter = x_vec.begin();</div><div class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;::iterator z_iter = z_vec.begin();</div><div class="line">	<span class="keyword">while</span>(x_iter != x_vec.end())&#123;</div><div class="line">		<span class="keyword">if</span>(*x_iter * *z_iter != <span class="number">0</span>)&#123;</div><div class="line">			<span class="keyword">if</span>(first == <span class="number">1</span>)&#123;</div><div class="line">				<span class="built_in">cout</span>&lt;&lt;*x_iter * *z_iter&lt;&lt;<span class="string">" "</span>&lt;&lt;*z_iter<span class="number">-1</span>;</div><div class="line">				first--;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span></div><div class="line">				<span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>&lt;&lt;*x_iter * *z_iter&lt;&lt;<span class="string">" "</span>&lt;&lt;*z_iter<span class="number">-1</span>;</div><div class="line">		&#125;</div><div class="line">		x_iter++;</div><div class="line">		z_iter++;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(first)</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"0 0"</span>;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1010" target="_blank" rel="external">原题链接</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[1009. 说反话]]></title>
      <url>http://yoursite.com/2016/09/07/1009-%E8%AF%B4%E5%8F%8D%E8%AF%9D/</url>
      <content type="html"><![CDATA[<p>原题：<br>给定一句英语，要求你编写程序，将句中所有单词的顺序颠倒输出。</p>
<p><strong>输入格式</strong>：测试输入包含一个测试用例，在一行内给出总长度不超过80的字符串。字符串由若干单词和若干空格组成，其中单词是由英文字母（大小写有区分）组成的字符串，单词之间用1个空格分开，输入保证句子末尾没有多余的空格。</p>
<p><strong>输出格式</strong>：每个测试用例的输出占一行，输出倒序后的句子。</p>
<p><strong>输入样例</strong>：<br>Hello World Here I Come<br><strong>输出样例</strong>：<br>Come I Here World Hello</p>
<a id="more"></a>
<p>解答：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="built_in">string</span> str;</div><div class="line">	<span class="built_in">string</span> str2;</div><div class="line">	getline(<span class="built_in">cin</span>,str);</div><div class="line">	<span class="built_in">string</span>::size_type p = str.find_last_of(<span class="string">' '</span>);</div><div class="line">	<span class="built_in">string</span>::size_type q = str.size();</div><div class="line">	<span class="keyword">while</span>(p != <span class="number">-1</span>)&#123;</div><div class="line">		str2.assign(str,p+<span class="number">1</span>,q-p<span class="number">-1</span>);</div><div class="line">		<span class="built_in">cout</span>&lt;&lt;str2&lt;&lt;<span class="string">" "</span>;</div><div class="line">		q = p;</div><div class="line">		p = str.find_last_of(<span class="string">' '</span>,p<span class="number">-1</span>);</div><div class="line">	&#125;</div><div class="line">	str2.assign(str,p+<span class="number">1</span>,q-p<span class="number">-1</span>);</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;str2;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1009" target="_blank" rel="external">原题链接</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[1008. 数组元素循环右移问题]]></title>
      <url>http://yoursite.com/2016/09/07/1008-%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E5%BE%AA%E7%8E%AF%E5%8F%B3%E7%A7%BB%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<p>原题：</p>
<blockquote>
<p>一个数组A中存有N（N&gt;0）个整数，在不允许使用另外数组的前提下，将每个整数循环向右移M（M&gt;=0）个位置，即将A中的数据由（A0<br>A1……AN-1）变换为（AN-M …… AN-1 A0<br>A1……AN-M-1）（最后M个数循环移至最前面的M个位置）。如果需要考虑程序移动数据的次数尽量少，要如何设计移动的方法？</p>
<p><strong>输入格式</strong>：每个输入包含一个测试用例，第1行输入N ( 1&lt;=N&lt;=100)、M（M&gt;=0）；第2行输入N个整数，之间用空格分隔。</p>
<p><strong>输出格式</strong>：在一行中输出循环右移M位以后的整数序列，之间用空格分隔，序列结尾不能有多余空格。</p>
<p><strong>输入样例</strong>：<br> 6 2<br> 1 2 3 4 5 6<br><strong>输出样例</strong>：<br> 5 6 1 2 3 4</p>
</blockquote>
<a id="more"></a>
<p>解答:</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> N,M;</div><div class="line">	<span class="built_in">cin</span>&gt;&gt;N&gt;&gt;M;</div><div class="line">	<span class="keyword">int</span> *p = <span class="keyword">new</span> <span class="keyword">int</span>[N];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; N;i++)</div><div class="line">	<span class="built_in">cin</span>&gt;&gt;p[i];</div><div class="line">	M = <span class="built_in">fmod</span>(M,N);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = N-M;i &lt; N;i++)</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;p[i]&lt;&lt;<span class="string">" "</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; N-M;i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(i &lt; N-M<span class="number">-1</span>)</div><div class="line">		<span class="built_in">cout</span>&lt;&lt;p[i]&lt;&lt;<span class="string">" "</span>;</div><div class="line">		<span class="keyword">else</span></div><div class="line">		<span class="built_in">cout</span>&lt;&lt;p[i];</div><div class="line">	&#125;	</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1008" target="_blank" rel="external">原题链接</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[1007. 素数对猜想]]></title>
      <url>http://yoursite.com/2016/09/07/1007-%E7%B4%A0%E6%95%B0%E5%AF%B9%E7%8C%9C%E6%83%B3/</url>
      <content type="html"><![CDATA[<p>原题：</p>
<blockquote>
<p>让我们定义 dn 为：dn = pn+1 - pn，其中 pi 是第i个素数。显然有 d1=1 且对于n&gt;1有 dn<br>是偶数。“素数对猜想”认为“存在无穷多对相邻且差为2的素数”。</p>
<p>现给定任意正整数N (&lt; 105)，请计算不超过N的满足猜想的素数对的个数。</p>
<p><strong>输入格式</strong>：每个测试输入包含1个测试用例，给出正整数N。</p>
<p><strong>输出格式</strong>：每个测试用例的输出占一行，不超过N的满足猜想的素数对的个数。</p>
<p><strong>输入样例</strong>： 20<br><strong>输出样例</strong>： 4</p>
</blockquote>
<a id="more"></a>
<p>解答：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span> </span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isPrime</span><span class="params">(<span class="keyword">int</span> num)</span></span></div><div class="line">&#123;	</div><div class="line">	<span class="keyword">int</span> flag = <span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt;= <span class="built_in">sqrt</span>(num);i++)</div><div class="line">		<span class="keyword">if</span>(num % i == <span class="number">0</span>)&#123;</div><div class="line">		flag = <span class="number">1</span>;</div><div class="line">		<span class="keyword">break</span>;	</div><div class="line">		&#125;</div><div class="line">	<span class="keyword">if</span>(flag == <span class="number">0</span>)</div><div class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> num;</div><div class="line">	<span class="keyword">int</span> count = <span class="number">0</span>;</div><div class="line">	<span class="built_in">cin</span>&gt;&gt;num;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt;= num;i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(isPrime(i) == <span class="literal">true</span> &amp;&amp; i+<span class="number">2</span> &lt;= num &amp;&amp; isPrime(i+<span class="number">1</span>) == <span class="literal">false</span> &amp;&amp; isPrime(i+<span class="number">2</span>) == <span class="literal">true</span>)</div><div class="line">			count++;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;count;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line"> &#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1007" target="_blank" rel="external">原题链接</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[1006. 换个格式输出整数]]></title>
      <url>http://yoursite.com/2016/09/07/1006-%E6%8D%A2%E4%B8%AA%E6%A0%BC%E5%BC%8F%E8%BE%93%E5%87%BA%E6%95%B4%E6%95%B0/</url>
      <content type="html"><![CDATA[<p>原题:</p>
<blockquote>
<p>让我们用字母B来表示“百”、字母S表示“十”，用“12…n”来表示个位数字n（&lt;10），换个格式来输出任一个不超过3位的正整数。例如234应该被输出为BBSSS1234，因为它有2个“百”、3个“十”、以及个位的4。</p>
<p><strong>输入格式</strong>：每个测试输入包含1个测试用例，给出正整数n（&lt;1000）。</p>
<p><strong>输出格式</strong>：每个测试用例的输出占一行，用规定的格式输出n。</p>
<p><strong>输入样例1</strong>：<br>234<br><strong>输出样例1</strong>：<br>BBSSS1234<br><strong>输入样例2</strong>：<br>23<br><strong>输出样例2</strong>：<br>SS123</p>
</blockquote>
<a id="more"></a>
<p>解答：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span> </span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> num,a,b,c;</div><div class="line">	<span class="built_in">cin</span>&gt;&gt;num;</div><div class="line">	a = num % <span class="number">10</span>;</div><div class="line">	num /= <span class="number">10</span>;</div><div class="line">	b = num % <span class="number">10</span>;</div><div class="line">	num /= <span class="number">10</span>;</div><div class="line">	c = num % <span class="number">10</span>;</div><div class="line">	<span class="keyword">while</span>(c--)&#123;</div><div class="line">		<span class="built_in">cout</span>&lt;&lt;<span class="string">"B"</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">while</span>(b--)&#123;</div><div class="line">		<span class="built_in">cout</span>&lt;&lt;<span class="string">"S"</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= a;i++)&#123;</div><div class="line">		<span class="built_in">cout</span>&lt;&lt;i;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1006" target="_blank" rel="external">原题链接</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[1005. 继续(3n+1)猜想]]></title>
      <url>http://yoursite.com/2016/09/07/1005-%E7%BB%A7%E7%BB%AD-3n-1-%E7%8C%9C%E6%83%B3/</url>
      <content type="html"><![CDATA[<p>原题：</p>
<blockquote>
<p>卡拉兹(Callatz)猜想已经在1001中给出了描述。在这个题目里，情况稍微有些复杂。</p>
<p>当我们验证卡拉兹猜想的时候，为了避免重复计算，可以记录下递推过程中遇到的每一个数。例如对n=3进行验证的时候，我们需要计算3、5、8、4、2、1，则当我们对n=5、8、4、2进行验证的时候，就可以直接判定卡拉兹猜想的真伪，而不需要重复计算，因为这4个数已经在验证3的时候遇到过了，我们称5、8、4、2是被3“覆盖”的数。我们称一个数列中的某个数n为“关键数”，如果n不能被数列中的其他数字所覆盖。</p>
<p>现在给定一系列待验证的数字，我们只需要验证其中的几个关键数，就可以不必再重复验证余下的数字。你的任务就是找出这些关键数字，并按从大到小的顺序输出它们。</p>
<p><strong>输入格式</strong>：每个测试输入包含1个测试用例，第1行给出一个正整数K(&lt;100)，第2行给出K个互不相同的待验证的正整数n(1&lt;n&lt;=100)的值，数字间用空格隔开。</p>
<p><strong>输出格式</strong>：每个测试用例的输出占一行，按从大到小的顺序输出关键数字。数字间用1个空格隔开，但一行中最后一个数字后没有空格。</p>
<p><strong>输入样例</strong>：<br>6<br>3 5 6 7 8 11<br><strong>输出样例</strong>：<br>7 6</p>
</blockquote>
<a id="more"></a>
<p>解答:</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> <span class="built_in">array</span>[<span class="number">101</span>][<span class="number">2000</span>], num, temp;</div><div class="line">	<span class="built_in">memset</span>(<span class="built_in">array</span>, <span class="number">0</span>, <span class="keyword">sizeof</span>(<span class="built_in">array</span>));</div><div class="line">	<span class="built_in">cin</span> &gt;&gt; num;</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; i++)&#123;</div><div class="line">		<span class="built_in">cin</span> &gt;&gt; temp;</div><div class="line">		<span class="built_in">array</span>[temp][<span class="number">0</span>] = temp;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">101</span>; i++)&#123;</div><div class="line">		<span class="keyword">if</span> (<span class="built_in">array</span>[i][<span class="number">0</span>] == <span class="number">0</span>)</div><div class="line">			<span class="keyword">continue</span>;</div><div class="line">		<span class="keyword">else</span></div><div class="line">		&#123;</div><div class="line">			temp = <span class="built_in">array</span>[i][<span class="number">0</span>];</div><div class="line">			<span class="keyword">while</span> (temp &gt; <span class="number">1</span>)&#123;</div><div class="line">				<span class="keyword">if</span> (temp % <span class="number">2</span> == <span class="number">0</span>)&#123;</div><div class="line">					<span class="built_in">array</span>[i][temp] = temp;</div><div class="line">					temp /= <span class="number">2</span>;</div><div class="line"></div><div class="line">				&#125;</div><div class="line">				<span class="keyword">else</span> &#123;</div><div class="line">					<span class="built_in">array</span>[i][temp] = temp;</div><div class="line">					temp = (temp * <span class="number">3</span> + <span class="number">1</span>) / <span class="number">2</span>;</div><div class="line">				&#125;</div><div class="line">				<span class="built_in">array</span>[i][temp] = temp;</div><div class="line">			&#125;</div><div class="line"></div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line"></div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">101</span>; i++)</div><div class="line">		<span class="keyword">if</span> (<span class="built_in">array</span>[i][<span class="number">0</span>] != <span class="number">0</span>)&#123;</div><div class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> a = <span class="number">0</span>; a &lt; <span class="number">101</span>; a++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span> (a == i)</div><div class="line">					<span class="keyword">continue</span>;</div><div class="line">				<span class="keyword">else</span>&#123;</div><div class="line">					<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; <span class="number">2000</span>; j++)</div><div class="line">					&#123;</div><div class="line">						<span class="keyword">if</span> (<span class="built_in">array</span>[i][<span class="number">0</span>] == <span class="built_in">array</span>[a][j])</div><div class="line">							<span class="built_in">array</span>[i][<span class="number">0</span>] = <span class="number">0</span>;</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line"></div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;vec;</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">101</span>; i++)&#123;</div><div class="line">		<span class="keyword">if</span> (<span class="built_in">array</span>[i][<span class="number">0</span>] != <span class="number">0</span>)</div><div class="line">			vec.push_back(i);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = vec.size() - <span class="number">1</span>; i &gt; <span class="number">0</span>; i--)</div><div class="line">		<span class="built_in">cout</span> &lt;&lt; vec[i] &lt;&lt; <span class="string">" "</span>;</div><div class="line">	<span class="built_in">cout</span> &lt;&lt; vec[<span class="number">0</span>];</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1005" target="_blank" rel="external">原题链接</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[1004. 成绩排名]]></title>
      <url>http://yoursite.com/2016/09/07/1004-%E6%88%90%E7%BB%A9%E6%8E%92%E5%90%8D/</url>
      <content type="html"><![CDATA[<p>原题：</p>
<blockquote>
<p>读入n名学生的姓名、学号、成绩，分别输出成绩最高和成绩最低学生的姓名和学号。<br><strong>输入格式</strong>：每个测试输入包含1个测试用例，格式为<br>第1行：正整数n<br> 第3行：第2个学生的姓名 学号 成绩<br> … … …<br>第n+1行：第n个学生的姓名 学号 成绩<br>其中姓名和学号均为不超过10个字符的字符串，成绩为0到100之间的一个整数，这里保证在一组测试用例中没有两个学生的成绩是相同的。<br><strong>输出格式</strong>：对每个测试用例输出2行，第1行是成绩最高学生的姓名和学号，第2行是成绩最低学生的姓名和学号，字符串间有1空格。<br><strong>输入样例</strong>：<br>3<br>Joe Math990112 89<br>Mike CS991301 100<br>Mary EE990830 95<br> <strong>输出样例</strong>：<br>Mike CS991301 Joe Math990112</p>
</blockquote>
<a id="more"></a>
<p>解答：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> num;</div><div class="line">	<span class="built_in">string</span> str;</div><div class="line">	<span class="keyword">int</span> gra;</div><div class="line">	<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;name;</div><div class="line">	<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;number;</div><div class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;grade;</div><div class="line">	<span class="built_in">cin</span>&gt;&gt;num;</div><div class="line">	<span class="keyword">while</span>(num--)&#123;</div><div class="line">		<span class="built_in">cin</span>&gt;&gt;str;</div><div class="line">		name.push_back(str);</div><div class="line">		<span class="built_in">cin</span>&gt;&gt;str;</div><div class="line">		number.push_back(str);</div><div class="line">		<span class="built_in">cin</span>&gt;&gt;gra;</div><div class="line">		grade.push_back(gra);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> Max=grade[<span class="number">0</span>],Min=grade[<span class="number">0</span>];</div><div class="line">	<span class="keyword">int</span> a=<span class="number">0</span>,b=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; name.size();i++)&#123;</div><div class="line">		<span class="keyword">if</span>(grade[i] &gt; Max)&#123;</div><div class="line">			Max = grade[i];</div><div class="line">			a = i;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(grade[i] &lt; Min)&#123;</div><div class="line">			Min = grade[i];</div><div class="line">			b = i;</div><div class="line">		&#125;</div><div class="line">	&#125; </div><div class="line">	<span class="built_in">cout</span>&lt;&lt;name[a]&lt;&lt;<span class="string">" "</span>&lt;&lt;number[a]&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;name[b]&lt;&lt;<span class="string">" "</span>&lt;&lt;number[b];</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>; </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1004" target="_blank" rel="external">原题链接</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Seek and Destroy]]></title>
      <url>http://yoursite.com/2016/09/07/Seek-and-Destroy/</url>
      <content type="html"><![CDATA[<p>原题：</p>
<blockquote>
<p>金克斯的迫击炮！</p>
<p>实现一个摧毁(destroyer)函数，第一个参数是待摧毁的数组，其余的参数是待摧毁的值。<br>例如传入参数<code>[1, 2, 3, 1, 2, 3], 2, 3</code> 应该返回<code>[1,1]</code></p>
</blockquote>
<a id="more"></a>
<p>这道题不难，重在对Arguments object的掌握</p>
<p>解答：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">destroyer</span>(<span class="params">arr</span>) </span>&#123;</div><div class="line">  <span class="comment">// Remove all the values</span></div><div class="line">  <span class="keyword">var</span> args = <span class="built_in">Array</span>.prototype.slice.call(<span class="built_in">arguments</span>,<span class="number">1</span>);</div><div class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; args.length; i++)&#123;</div><div class="line">    arr = arr.filter(<span class="function"><span class="keyword">function</span>(<span class="params">val</span>)</span>&#123;</div><div class="line">      <span class="keyword">return</span> val != args[i];</div><div class="line">    &#125;);</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> arr;</div><div class="line">&#125;</div><div class="line">destroyer([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], <span class="number">2</span>, <span class="number">3</span>);</div></pre></td></tr></table></figure></p>
<p><a href="https://www.freecodecamp.cn/challenges/seek-and-destroy#?solution=function%20destroyer%28arr%29%20%7B%0A%20%20//%20Remove%20all%20the%20values%0A%20%20var%20args%20=%20Array.prototype.slice.call%28arguments,1%29;%0A%20%20for%28var%20i%20=%200;%20i%20%3C%20args.length;%20i%2b%2b%29%7B%0A%20%20%20%20arr%20=%20arr.filter%28function%28val%29%7B%0A%20%20%20%20%20%20return%20val%20!=%20args%5Bi%5D;%0A%20%20%20%20%7D%29;%0A%20%20%7D%0A%20%20return%20arr;%0A%7D%0A%0Adestroyer%28%5B1,%202,%203,%201,%202,%203%5D,%202,%203%29;%0A" target="_blank" rel="external">原题链接</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[解决Powershell无法进入名字中带空格的路径]]></title>
      <url>http://yoursite.com/2016/09/07/%E8%A7%A3%E5%86%B3Powershell%E6%97%A0%E6%B3%95%E8%BF%9B%E5%85%A5%E5%90%8D%E5%AD%97%E4%B8%AD%E5%B8%A6%E7%A9%BA%E6%A0%BC%E7%9A%84%E8%B7%AF%E5%BE%84/</url>
      <content type="html"><![CDATA[<p><img src="http://octtw77pk.bkt.clouddn.com/%E6%88%AA%E5%9B%BE05.png" alt="图片"><br>解决：使用命令<code>Push-Location -Path &quot;Sublime Text 3&quot;</code><img src="http://octtw77pk.bkt.clouddn.com/%E6%88%AA%E5%9B%BE03.png" alt="图片"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[1003. 我要通过！]]></title>
      <url>http://yoursite.com/2016/09/06/1003-%E6%88%91%E8%A6%81%E9%80%9A%E8%BF%87%EF%BC%81/</url>
      <content type="html"><![CDATA[<p>原题：</p>
<blockquote>
<p>“答案正确”是自动判题系统给出的最令人欢喜的回复。本题属于PAT的“答案正确”大派送 ——<br>只要读入的字符串满足下列条件，系统就输出“答案正确”，否则输出“答案错误”。</p>
<p>得到“答案正确”的条件是：</p>
<ol>
<li>字符串中必须仅有P, A, T这三种字符，不可以包含其它字符；</li>
<li>任意形如 xPATx 的字符串都可以获得“答案正确”，其中 x 或者是空字符串，或者是仅由字母 A 组成的字符串；</li>
<li>如果 aPbTc 是正确的，那么 aPbATca 也是正确的，其中 a, b, c 均或者是空字符串，或者是仅由字母 A 组成的字符串。</li>
</ol>
<p>现在就请你为PAT写一个自动裁判程序，判定哪些字符串是可以获得“答案正确”的。<br><strong>输入格式</strong>：每个测试输入包含1个测试用例。第1行给出一个自然数n(&lt;10)，是需要检测的字符串个数。接下来每个字符串占一行，字符串长度不超过100，且不包含空格。<br><strong>输出格式</strong>：每个字符串的检测结果占一行，如果该字符串可以获得“答案正确”，则输出YES，否则输出NO。<br><strong>输入样例</strong>：<br>8<br>PAT<br>PAAT<br>AAPATAA<br>AAPAATAAAA<br>xPATx<br>PT<br>Whatever<br>APAAATAA<br><strong>输出样例</strong>：<br>YES<br>YES<br>YES<br>YES<br>NO<br>NO<br>NO<br>NO</p>
</blockquote>
<a id="more"></a>
<p>解答：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">	<span class="built_in">string</span> str;</div><div class="line">	<span class="keyword">int</span> n;</div><div class="line">	<span class="built_in">cin</span>&gt;&gt;n;</div><div class="line">	<span class="keyword">while</span>(n--)&#123;</div><div class="line">		<span class="built_in">cin</span>&gt;&gt;str;</div><div class="line">		<span class="built_in">string</span>::size_type p=str.find_first_not_of(<span class="string">'A'</span>);</div><div class="line">		<span class="keyword">if</span>(p==<span class="built_in">string</span>::npos||str[p]!=<span class="string">'P'</span>)</div><div class="line">		   &#123;</div><div class="line">		   <span class="built_in">cout</span>&lt;&lt;<span class="string">"NO"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">		   <span class="keyword">continue</span>;</div><div class="line">		   &#125;</div><div class="line">		<span class="built_in">string</span>::size_type q=str.find_first_not_of(<span class="string">'A'</span>,p+<span class="number">1</span>);</div><div class="line">		<span class="keyword">if</span>(q==p+<span class="number">1</span>||str[q]!=<span class="string">'T'</span>||q==<span class="built_in">string</span>::npos)</div><div class="line">		&#123;</div><div class="line">			<span class="built_in">cout</span>&lt;&lt;<span class="string">"NO"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">		   	<span class="keyword">continue</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">string</span>::size_type s=str.find_first_not_of(<span class="string">'A'</span>,q+<span class="number">1</span>);</div><div class="line">		<span class="keyword">if</span>(s!=<span class="built_in">string</span>::npos)</div><div class="line">		&#123;</div><div class="line">			<span class="built_in">cout</span>&lt;&lt;<span class="string">"NO"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">		   	<span class="keyword">continue</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(p*(q-p<span class="number">-1</span>)==(str.size()-q<span class="number">-1</span>))</div><div class="line">		  &#123;</div><div class="line">		  	<span class="built_in">cout</span>&lt;&lt;<span class="string">"YES"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">		   	<span class="keyword">continue</span>;</div><div class="line">		  &#125;<span class="keyword">else</span> &#123;</div><div class="line">		  	<span class="built_in">cout</span>&lt;&lt;<span class="string">"NO"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">		   	<span class="keyword">continue</span>;</div><div class="line">		  &#125;</div><div class="line">	&#125; </div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line"> &#125;</div></pre></td></tr></table></figure></p>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1003" target="_blank" rel="external">原题链接</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[1002. 写出这个数]]></title>
      <url>http://yoursite.com/2016/09/06/1002-%E5%86%99%E5%87%BA%E8%BF%99%E4%B8%AA%E6%95%B0/</url>
      <content type="html"><![CDATA[<p>原题：</p>
<blockquote>
<p>读入一个自然数n，计算其各位数字之和，用汉语拼音写出和的每一位数字。<br><strong>输入格式</strong>：每个测试输入包含1个测试用例，即给出自然数n的值。这里保证n小于10100。<br><strong>输出格式</strong>：在一行内输出n的各位数字之和的每一位，拼音数字间有1 空格，但一行中最后一个拼音数字后没有空格。<br><strong>输入样例</strong>： 1234567890987654321123456789<br><strong>输出样例</strong>： yi san wu</p>
</blockquote>
<a id="more"></a>
<p>解答：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">char</span> num[<span class="number">101</span>];</div><div class="line">	<span class="keyword">char</span> dig[<span class="number">4</span>];</div><div class="line">	<span class="keyword">char</span> *p=num;</div><div class="line">	<span class="keyword">int</span> sum=<span class="number">0</span>;</div><div class="line">	<span class="built_in">cin</span>&gt;&gt;num;</div><div class="line">	<span class="keyword">while</span>(*p!=<span class="string">'\0'</span>)</div><div class="line">	&#123;</div><div class="line">		sum+=(*p-<span class="string">'0'</span>);</div><div class="line">		p++;</div><div class="line">	&#125; </div><div class="line">	<span class="built_in">sprintf</span>(dig,<span class="string">"%d"</span>,sum);</div><div class="line">	<span class="comment">//itoa(sum,dig,10);</span></div><div class="line">    p=dig;</div><div class="line">    <span class="keyword">while</span>(*p!=<span class="string">'\0'</span>)</div><div class="line">    &#123;</div><div class="line">    	<span class="keyword">switch</span>(*p)&#123;</div><div class="line">		<span class="keyword">case</span> <span class="string">'0'</span>:</div><div class="line">		    <span class="built_in">printf</span>(<span class="string">"ling"</span>);</div><div class="line">		    <span class="keyword">break</span>;</div><div class="line">		<span class="keyword">case</span> <span class="string">'1'</span>:</div><div class="line">		    <span class="built_in">printf</span>(<span class="string">"yi"</span>);</div><div class="line">		    <span class="keyword">break</span>;</div><div class="line">		<span class="keyword">case</span> <span class="string">'2'</span>:</div><div class="line">		    <span class="built_in">printf</span>(<span class="string">"er"</span>);</div><div class="line">		    <span class="keyword">break</span>;</div><div class="line">		<span class="keyword">case</span> <span class="string">'3'</span>:</div><div class="line">		    <span class="built_in">printf</span>(<span class="string">"san"</span>);</div><div class="line">		    <span class="keyword">break</span>;</div><div class="line">		<span class="keyword">case</span> <span class="string">'4'</span>:</div><div class="line">		    <span class="built_in">printf</span>(<span class="string">"si"</span>);</div><div class="line">		    <span class="keyword">break</span>;</div><div class="line">		<span class="keyword">case</span> <span class="string">'5'</span>:</div><div class="line">		    <span class="built_in">printf</span>(<span class="string">"wu"</span>);</div><div class="line">		    <span class="keyword">break</span>;</div><div class="line">		<span class="keyword">case</span> <span class="string">'6'</span>:</div><div class="line">		    <span class="built_in">printf</span>(<span class="string">"liu"</span>);</div><div class="line">		    <span class="keyword">break</span>;</div><div class="line">		<span class="keyword">case</span> <span class="string">'7'</span>:</div><div class="line">		    <span class="built_in">printf</span>(<span class="string">"qi"</span>);</div><div class="line">		    <span class="keyword">break</span>;</div><div class="line">		<span class="keyword">case</span> <span class="string">'8'</span>:</div><div class="line">		    <span class="built_in">printf</span>(<span class="string">"ba"</span>);</div><div class="line">		    <span class="keyword">break</span>;</div><div class="line">		<span class="keyword">case</span> <span class="string">'9'</span>:</div><div class="line">		    <span class="built_in">printf</span>(<span class="string">"jiu"</span>);</div><div class="line">		    <span class="keyword">break</span>;</div><div class="line">		<span class="keyword">default</span>:</div><div class="line">		    <span class="keyword">break</span>;</div><div class="line">		&#125;</div><div class="line">		p++;</div><div class="line">		<span class="keyword">if</span>(*p!=<span class="string">'\0'</span>)</div><div class="line">		  <span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1002" target="_blank" rel="external">原题链接</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[1001. 害死人不偿命的(3n+1)猜想]]></title>
      <url>http://yoursite.com/2016/09/06/1001-%E5%AE%B3%E6%AD%BB%E4%BA%BA%E4%B8%8D%E5%81%BF%E5%91%BD%E7%9A%84-3n-1-%E7%8C%9C%E6%83%B3/</url>
      <content type="html"><![CDATA[<p>原题：</p>
<blockquote>
<p>卡拉兹(Callatz)猜想：<br>对任何一个自然数n，如果它是偶数，那么把它砍掉一半；如果它是奇数，那么把(3n+1)砍掉一半。这样一直反复砍下去，最后一定在某一步得到n=1。卡拉兹在1950年的世界数学家大会上公布了这个猜想，传说当时耶鲁大学师生齐动员，拼命想证明这个貌似很傻很天真的命题，结果闹得学生们无心学业，一心只证(3n+1)，以至于有人说这是一个阴谋，卡拉兹是在蓄意延缓美国数学界教学与科研的进展……<br>我们今天的题目不是证明卡拉兹猜想，而是对给定的任一不超过1000的正整数n，简单地数一下，需要多少步（砍几下）才能得到n=1？<br><strong>输入格式</strong>：每个测试输入包含1个测试用例，即给出自然数n的值。<br><strong>输出格式</strong>：输出从n计算到1需要的步数。<br><strong>输入样例</strong>：<br>3<br><strong>输出样例</strong>：<br>5</p>
</blockquote>
<a id="more"></a>
<p>解答：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> num;</div><div class="line">	<span class="keyword">int</span> count=<span class="number">0</span>;</div><div class="line">	<span class="built_in">cin</span>&gt;&gt;num;</div><div class="line">	<span class="keyword">while</span>(num!=<span class="number">1</span>)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(num%<span class="number">2</span>==<span class="number">0</span>)&#123;     </div><div class="line">			num=num/<span class="number">2</span>;</div><div class="line">			count++;</div><div class="line">		&#125;<span class="keyword">else</span>&#123;</div><div class="line">			num=(<span class="number">3</span>*num+<span class="number">1</span>)/<span class="number">2</span>;</div><div class="line">			count++;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;count;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line"> &#125;</div></pre></td></tr></table></figure></p>
<p><a href="https://www.patest.cn/contests/pat-b-practise/1001" target="_blank" rel="external">原题链接</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[1002. A+B for Polynomials]]></title>
      <url>http://yoursite.com/2016/09/06/1002-A-B-for-Polynomials/</url>
      <content type="html"><![CDATA[<p>原题：</p>
<blockquote>
<p>This time, you are supposed to find A+B where A and B are two polynomials.<br><strong>Input</strong><br>Each input file contains one test case. Each case occupies 2 lines, and each line contains the information of a polynomial: K N1 aN1 N2 aN2 … NK aNK, where K is the number of nonzero terms in the polynomial, Ni and aNi (i=1, 2, …, K) are the exponents and coefficients, respectively. It is given that 1 &lt;= K &lt;= 10，0 &lt;= NK &lt; … &lt; N2 &lt; N1 &lt;=1000.<br><strong>Output</strong><br>For each test case you should output the sum of A and B in one line, with the same format as the input. Notice that there must be NO extra space at the end of each line. Please be accurate to 1 decimal place.<br><strong>Sample Input</strong><br>2 1 2.4 0 3.2<br>2 2 1.5 1 0.5<br><strong>Sample Output</strong><br>3 2 1.5 1 2.9 0 3.2</p>
</blockquote>
<a id="more"></a>
<p>解答：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iomanip&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">double</span> array_1[<span class="number">30</span>];</div><div class="line">	<span class="keyword">double</span> array_2[<span class="number">30</span>];</div><div class="line">	<span class="keyword">double</span> array_3[<span class="number">60</span>];</div><div class="line">	<span class="comment">//freopen("input.txt","r",stdin);</span></div><div class="line">	<span class="comment">//freopen("output.txt","w",stdout);</span></div><div class="line">	<span class="built_in">memset</span>(array_1,<span class="number">0</span>,<span class="keyword">sizeof</span>(array_1));</div><div class="line">	<span class="built_in">memset</span>(array_2,<span class="number">0</span>,<span class="keyword">sizeof</span>(array_2));</div><div class="line">	<span class="keyword">int</span> num1=<span class="number">0</span>;<span class="comment">//记录数组1中的元素个数</span></div><div class="line">	<span class="keyword">int</span> num2=<span class="number">0</span>;<span class="comment">//记录数组2中的元素个数</span></div><div class="line">	<span class="built_in">cin</span>&gt;&gt;num1;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">2</span>*num1;i++)</div><div class="line">	 <span class="built_in">cin</span>&gt;&gt;array_1[i];</div><div class="line">    <span class="built_in">cin</span>&gt;&gt;num2;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">2</span>*num2;i++)</div><div class="line">	 <span class="built_in">cin</span>&gt;&gt;array_2[i];</div><div class="line">	<span class="comment">//数组赋值完成</span></div><div class="line">	 <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>,k=<span class="number">0</span>;</div><div class="line">	<span class="keyword">double</span> *p=array_1;</div><div class="line">	 <span class="keyword">double</span> *q=array_2;</div><div class="line">	<span class="keyword">while</span>(i&lt;=(num1<span class="number">-1</span>) &amp;&amp; j&lt;=(num2<span class="number">-1</span>))</div><div class="line">	 &#123;</div><div class="line">	 	<span class="keyword">if</span>(*p&gt;*q)&#123;</div><div class="line">	 		<span class="keyword">if</span>(array_1[<span class="number">2</span>*i+<span class="number">1</span>]!=<span class="number">0</span>)</div><div class="line">	 		&#123;array_3[k]=array_1[<span class="number">2</span>*i];</div><div class="line">	 		k++;</div><div class="line">	 		array_3[k]=array_1[<span class="number">2</span>*i+<span class="number">1</span>];</div><div class="line">	 		k++;</div><div class="line">	 		p=p+<span class="number">2</span>;</div><div class="line">	 		i++;</div><div class="line">			 &#125;</div><div class="line">			<span class="keyword">else</span> i++;</div><div class="line">	 	 &#125;</div><div class="line">		 <span class="keyword">else</span> <span class="keyword">if</span>(*p==*q)&#123;</div><div class="line">		 	<span class="keyword">if</span>(array_1[<span class="number">2</span>*i+<span class="number">1</span>]+array_2[<span class="number">2</span>*j+<span class="number">1</span>]!=<span class="number">0</span>)</div><div class="line">		 	&#123;array_3[k]=array_1[<span class="number">2</span>*i];</div><div class="line">	 		k++;</div><div class="line">	 		array_3[k]=array_1[<span class="number">2</span>*i+<span class="number">1</span>]+array_2[<span class="number">2</span>*j+<span class="number">1</span>];</div><div class="line">	 		k++;</div><div class="line">	 		p=p+<span class="number">2</span>;		 </div><div class="line">		    q=q+<span class="number">2</span>;</div><div class="line">		    i++;</div><div class="line">		    j++;</div><div class="line">			 &#125;</div><div class="line">			 <span class="keyword">else</span> &#123;</div><div class="line">			 	i++;</div><div class="line">			 	j++;</div><div class="line">			 &#125;</div><div class="line">		 &#125;</div><div class="line">		    <span class="keyword">else</span> &#123;</div><div class="line">		    	 <span class="keyword">if</span>(array_2[<span class="number">2</span>*j+<span class="number">1</span>]!=<span class="number">0</span>)</div><div class="line">		    		 &#123;</div><div class="line">						array_3[k]=array_2[<span class="number">2</span>*j];</div><div class="line">				 		k++;</div><div class="line">				 		array_3[k]=array_2[<span class="number">2</span>*j+<span class="number">1</span>];</div><div class="line">						k++; </div><div class="line">					    q=q+<span class="number">2</span>;</div><div class="line">					    j++;</div><div class="line">					&#125;</div><div class="line">					<span class="keyword">else</span> j++;</div><div class="line">		 		&#125;	</div><div class="line">	 &#125;</div><div class="line">	 <span class="keyword">if</span>(i&lt;=num1<span class="number">-1</span>)</div><div class="line">	 &#123;</div><div class="line">	 	<span class="keyword">for</span>(<span class="keyword">int</span> ii=<span class="number">0</span>;ii&lt;num1-i;ii++)</div><div class="line">	 	 &#123;</div><div class="line">	 	 	<span class="keyword">if</span>(array_1[<span class="number">2</span>*i+<span class="number">1</span>]!=<span class="number">0</span>)&#123;</div><div class="line">			array_3[k]=array_1[<span class="number">2</span>*i];</div><div class="line">	 		k++;</div><div class="line">	 		array_3[k]=array_1[<span class="number">2</span>*i+<span class="number">1</span>];</div><div class="line">	 		k++;</div><div class="line">	 		i++;</div><div class="line">	 		&#125;  </div><div class="line">	 		<span class="keyword">else</span> i++;</div><div class="line">		  &#125;</div><div class="line">	  &#125; </div><div class="line">	<span class="keyword">else</span> </div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> ii=<span class="number">0</span>;ii&lt;num2-j;ii++)</div><div class="line">	 	 &#123;</div><div class="line">		    <span class="keyword">if</span>(array_2[<span class="number">2</span>*j+<span class="number">1</span>]!=<span class="number">0</span>)</div><div class="line">		 &#123;</div><div class="line">			array_3[k]=array_2[<span class="number">2</span>*j];</div><div class="line">	 		k++;</div><div class="line">	 		array_3[k]=array_2[<span class="number">2</span>*j+<span class="number">1</span>];</div><div class="line">			k++; </div><div class="line">		    j++;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> j++;</div><div class="line">		  &#125;</div><div class="line">	&#125;</div><div class="line">	 <span class="keyword">if</span>(k==<span class="number">0</span>)</div><div class="line">	   <span class="built_in">cout</span>&lt;&lt;<span class="number">0</span>;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;<span class="built_in">cout</span>&lt;&lt;k/<span class="number">2</span>;</div><div class="line">	  <span class="keyword">int</span> i=<span class="number">0</span>;</div><div class="line">	 <span class="keyword">for</span>(<span class="keyword">int</span> ii=<span class="number">0</span>;ii&lt;k/<span class="number">2</span>;ii++)</div><div class="line">	   &#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>&lt;&lt;setprecision(<span class="number">0</span>)&lt;&lt;array_3[i];</div><div class="line">	    <span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>&lt;&lt;setiosflags(ios::fixed)&lt;&lt;setprecision(<span class="number">1</span>)&lt;&lt;array_3[i+<span class="number">1</span>];</div><div class="line">	    i+=<span class="number">2</span>;</div><div class="line">	    &#125;</div><div class="line">	&#125;</div><div class="line">	<span class="comment">//fclose(stdin);</span></div><div class="line">	<span class="comment">//fclose(stdout);</span></div><div class="line">	 <span class="keyword">return</span> <span class="number">0</span>;  </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><a href="https://www.patest.cn/contests/pat-a-practise/1002" target="_blank" rel="external">原题链接</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[1001. A+B Format]]></title>
      <url>http://yoursite.com/2016/09/06/1001-A-B-Format/</url>
      <content type="html"><![CDATA[<p>原题：</p>
<blockquote>
<p>Calculate a + b and output the sum in standard format – that is, the digits must be separated into groups of three by commas (unless there are less than four digits).<br><strong>Input</strong><br>Each input file contains one test case. Each case contains a pair of integers a and b where -1000000 &lt;= a, b &lt;= 1000000. The numbers are separated by a space.<br><strong>Output</strong><br>For each test case, you should output the sum of a and b in one line. The sum must be written in the standard format.<br><strong>Sample Input</strong><br>-1000000 9<br><strong>Sample Output</strong><br>-999,991</p>
</blockquote>
<a id="more"></a>
<p>解答：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">long</span> num1,num2;</div><div class="line">	<span class="keyword">long</span> <span class="built_in">array</span>[<span class="number">8</span>];</div><div class="line">	<span class="built_in">cin</span>&gt;&gt;num1;</div><div class="line">	<span class="built_in">cin</span>&gt;&gt;num2;</div><div class="line">	<span class="keyword">long</span> num3=num1+num2;</div><div class="line">	<span class="keyword">int</span> i=<span class="number">0</span>;</div><div class="line">	<span class="keyword">if</span>(num3&lt;<span class="number">0</span>)</div><div class="line">	&#123;</div><div class="line">		<span class="built_in">cout</span>&lt;&lt;<span class="string">"-"</span>;</div><div class="line">		num3=-num3;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(num3 == <span class="number">0</span>)</div><div class="line">	  <span class="built_in">cout</span>&lt;&lt;<span class="number">0</span>;</div><div class="line">	<span class="keyword">while</span>(num3 &gt; <span class="number">0</span>)</div><div class="line">	&#123;   </div><div class="line">		<span class="built_in">array</span>[i]=num3%<span class="number">10</span>;</div><div class="line">		num3=num3/<span class="number">10</span>;</div><div class="line">		i++;  </div><div class="line">	&#125;                  <span class="comment">//i的值即为位数                                         </span></div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> j=i<span class="number">-1</span>;j&gt;=<span class="number">0</span>;j--)</div><div class="line">	&#123;</div><div class="line">		<span class="built_in">cout</span>&lt;&lt;<span class="built_in">array</span>[j];</div><div class="line">		<span class="keyword">if</span>(j&gt;<span class="number">0</span>&amp;&amp;j%<span class="number">3</span>==<span class="number">0</span>) </div><div class="line">		  <span class="built_in">cout</span>&lt;&lt;<span class="string">","</span>;</div><div class="line">	 &#125; </div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><a href="https://www.patest.cn/contests/pat-a-practise/1001" target="_blank" rel="external">原题链接</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Title Case a Sentence]]></title>
      <url>http://yoursite.com/2016/09/05/Title-Case-a-Sentence/</url>
      <content type="html"><![CDATA[<h4 id="标题：Title-Case-a-Sentence"><a href="#标题：Title-Case-a-Sentence" class="headerlink" title="标题：Title Case a Sentence"></a>标题：Title Case a Sentence</h4><p>正文：</p>
<blockquote>
<p>确保字符串的每个单词首字母都大写，其余部分小写。<br>像’the’和’of’这样的连接符同理。</p>
</blockquote>
<a id="more"></a>
<p>感觉这题有很多解法，按照思路来吧，慢慢修改</p>
<p><strong>answerV1.0</strong><br>思路：</p>
<ol>
<li>先用split()方法将一段话拆成单个单词。</li>
<li>用一个for循环，将每个单词进行处理：先用toLowerCase()方法将单词变为全小写，然后用replace()方法将单词的第一个字母变为大写(用到正则表达式，<del>做这题时正则表达式还是没去学，也是现查现用的2333</del>)<br>3.用join()方法组合成新的字符串。</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">titleCase</span>(<span class="params">str</span>) </span>&#123;</div><div class="line">   <span class="keyword">var</span> array = str.split(<span class="string">" "</span>);</div><div class="line">   <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; array.length; i++)&#123;</div><div class="line">     array[i] = array[i].toLowerCase().replace(<span class="regexp">/^\S/</span>,<span class="function"><span class="keyword">function</span>(<span class="params">s</span>)</span>&#123;<span class="keyword">return</span> s.toUpperCase();&#125;);</div><div class="line">   &#125;</div><div class="line">   <span class="keyword">return</span> array.join(<span class="string">" "</span>);</div><div class="line">&#125;</div><div class="line">titleCase(<span class="string">"I'm a little tea pot"</span>);</div></pre></td></tr></table></figure>
<p><strong>answerV1.1</strong><br>发现toLowerCase()可以再for循环前使用，减少了时间复杂度，<code>var array = str.toLowerCase().split(&quot; &quot;)</code></p>
<p><strong>answerV2.0</strong><br>对数组的遍历可以使用map()方法，将正则表达式取第一个字母的方法改为charAt()方法取。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">titleCase</span>(<span class="params">str</span>) </span>&#123;</div><div class="line">   <span class="keyword">var</span> array = str.toLowerCase().split(<span class="string">" "</span>);</div><div class="line">   <span class="keyword">var</span> answer = array.map(<span class="function"><span class="keyword">function</span>(<span class="params">val</span>)</span>&#123;</div><div class="line">    <span class="keyword">return</span> val.replace(val.charAt(<span class="number">0</span>),val.charAt(<span class="number">0</span>).toUpperCase());</div><div class="line">  &#125;);</div><div class="line">   <span class="keyword">return</span> answer.join(<span class="string">" "</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line">titleCase(<span class="string">"I'm a little tea pot"</span>);</div></pre></td></tr></table></figure></p>
<p><strong>answerV4.0</strong><br>看了网上大牛的解答，可谓终极版,贴代码<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">titleCase</span>(<span class="params">str</span>) </span>&#123;</div><div class="line">   <span class="keyword">return</span> str.toLowerCase().replace(<span class="regexp">/( |^)[a-z]/g</span>, (L) =&gt; L.toUpperCase());&#125;</div><div class="line">titleCase(<span class="string">"I'm a little tea pot"</span>);</div></pre></td></tr></table></figure></p>
<hr>
<p><a href="https://www.freecodecamp.cn/challenges/title-case-a-sentence" target="_blank" rel="external">原题链接</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Check for Palindromes]]></title>
      <url>http://yoursite.com/2016/09/05/Check-for-Palindromes/</url>
      <content type="html"><![CDATA[<h4 id="题目：Check-for-Palindromes"><a href="#题目：Check-for-Palindromes" class="headerlink" title="题目：Check for Palindromes"></a>题目：Check for Palindromes</h4><p>正文：</p>
<blockquote>
<p>如果给定的字符串是回文，返回true，反之，返回false。<br>如果一个字符串忽略标点符号、大小写和空格，正着读和反着读一模一样，那么这个字符串就是palindrome(回文)。<br>注意你需要去掉字符串多余的标点符号和空格，然后把字符串转化成小写来验证此字符串是否为回文。</p>
</blockquote>
<a id="more"></a>
<p>解答：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">palindrome</span>(<span class="params">str</span>) </span>&#123;</div><div class="line">  <span class="comment">// Good luck!</span></div><div class="line">  <span class="keyword">var</span> newStr1 = str.replace(<span class="regexp">/\W/g</span>,<span class="string">""</span>).replace(<span class="regexp">/\_/</span>,<span class="string">""</span>).toLowerCase();</div><div class="line">  <span class="keyword">var</span> newStr2 = newStr1.split(<span class="string">""</span>).reverse().join(<span class="string">""</span>);</div><div class="line">  <span class="keyword">if</span>(newStr1 == newStr2)</div><div class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">  <span class="keyword">else</span></div><div class="line">    <span class="keyword">return</span> <span class="literal">false</span>; </div><div class="line">&#125;</div><div class="line"></div><div class="line">palindrome(<span class="string">"never odd or even"</span>);</div></pre></td></tr></table></figure></p>
<p><em>虽然是AC了，但是感觉写的太渣了，性能太差。<br>正则表达式也是现学现用的，不正规范<br>打算这几天先系统性学习下正则表达式，然后再来优化下这题</em></p>
<hr>
<p><a href="https://www.freecodecamp.cn/challenges/check-for-palindromes" target="_blank" rel="external">原题链接</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[解决JNI相关问题(3)]]></title>
      <url>http://yoursite.com/2016/09/04/%E8%A7%A3%E5%86%B3JNI%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98(3)/</url>
      <content type="html"><![CDATA[<h3 id="解决问题：Can’t-find-dependent-libraries报错"><a href="#解决问题：Can’t-find-dependent-libraries报错" class="headerlink" title="解决问题：Can’t find dependent libraries报错"></a>解决问题：Can’t find dependent libraries报错</h3><a id="more"></a>
<p>今天将项目移植到另外一台电脑上，结果JNI又出错了，<del>真是一个柔弱的女子啊</del></p>
<p>解决思路：无法找到依赖的库,应该是.dll出的问题</p>
<p>解决方案：将编译方案由Debug改为Release，解决！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[解决JNI相关问题(2)]]></title>
      <url>http://yoursite.com/2016/09/04/%E8%A7%A3%E5%86%B3JNI%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98(2)/</url>
      <content type="html"><![CDATA[<h3 id="本篇主要讲述JNI中GetStringUTFChars-方法的用法。"><a href="#本篇主要讲述JNI中GetStringUTFChars-方法的用法。" class="headerlink" title="本篇主要讲述JNI中GetStringUTFChars()方法的用法。"></a>本篇主要讲述JNI中GetStringUTFChars()方法的用法。</h3><a id="more"></a>
<p>Java中有String类型，对应JNI中的JString，而C语言中没有这种类型，GetStringUTFChars()这个方法就是用来将JString转换成C语言中的char *类型的。</p>
<p>该函数有两种形式：</p>
<ol>
<li><strong>C中的形式</strong><br>C代码：<code>const char *str = (*env)-&gt;GetStringUTFChars(env,string,0)</code></li>
<li><strong>C++中的形式</strong><br>C++代码:<code>const char *str = env-&gt;GetStringUTFChars(string,0)</code></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[解决JNI相关问题(1)]]></title>
      <url>http://yoursite.com/2016/09/04/%E8%A7%A3%E5%86%B3JNI%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98(1)/</url>
      <content type="html"><![CDATA[<h2 id="本篇主要讲述："><a href="#本篇主要讲述：" class="headerlink" title="本篇主要讲述："></a>本篇主要讲述：</h2><ul>
<li>生成.h文件的正确姿势</li>
<li>生成和使用.dll文件的正确姿势</li>
</ul>
<a id="more"></a>
<blockquote>
<p>最近着手的项目用到了JNI，照着文档边学边做，遇到了很多坑，我打算一一写出来，来帮助也遇到JNI相关问题的童鞋。<br><del>国内资料实在是太渣了，让我绕了好多弯路</del></p>
</blockquote>
<h3 id="如何生成-h文件"><a href="#如何生成-h文件" class="headerlink" title="如何生成.h文件"></a>如何生成.h文件</h3><p>首先编写好Java程序(有关JNI的Java程序写法不详述了)<img src="http://octtw77pk.bkt.clouddn.com/9/4JNI.png" alt="图片">在该文件所在的目录下按<code>shift+右键</code>,打开命令行，输入<code>javac your_file_name.java</code>编译成.class文件。</p>
<hr>
<p>上面都是小儿科，关键来了，退出到<strong>该Java文件的包的同一级</strong>，为什么意思呢，拿我这个Java文件来说，它有包名<code>com.jg.model.Image</code>所以应该退出到<img src="http://octtw77pk.bkt.clouddn.com/%E6%88%AA%E5%9B%BE06.png" alt="图片">这一级，能看到com包，打开命令行输入<code>javah your_file_name</code>来生成.h文件，格式为： javah 包名.文件名，这里有两点要提：1.包名一定要写全 2.文件名后没有后缀!参考我这个写法：<img src="http://octtw77pk.bkt.clouddn.com/%E6%88%AA%E5%9B%BE07.png" alt="图片">前面都操作正确，就能见到这个.h文件了<img src="http://octtw77pk.bkt.clouddn.com/%E6%88%AA%E5%9B%BE08.png" alt="图片"></p>
<hr>
<h3 id="如何生成和使用-dll文件"><a href="#如何生成和使用-dll文件" class="headerlink" title="如何生成和使用.dll文件"></a>如何生成和使用.dll文件</h3><p>之后就是打开C/C++的IDE来编写C/C++程序，这里我使用的是VS2013。<br>这里我也遇到了好多问题，我来写一下我的解决方案吧。<br>打开VS2013，文件–&gt;新建–&gt;项目–&gt;Win32控制台应用程序（<strong>项目名字要注意，是你在Java程序里写的要加载的库名,即System.loadLibrary(“”)里写的库名</strong>）–&gt;确定–&gt;下一步–&gt;<strong>应用程序类型</strong>选择DLL，点上空项目–&gt;完成–&gt;源程序里创建一个cpp开始编写，之后我不着重讲怎么写C程序)(因为很简单)，而是来讲下你们可能会出现的一些问题：</p>
<ul>
<li><strong>头文件引入问题</strong><br>如果头文件引入不当，会出现五花八门的错误，我来讲下我的做法：将上面编译出的.h文件放到和源程序（上一步创建用来编写程序的那个cpp）一起，之后还有两个.h文件，分别是jni.h，位于<code>%HOME%\Java\jdk1.8.0_71\include</code>, jni-md.h，位于<code>%HOME%\Java\jdk1.8.0_71\include\win32</code>，把这两也放到和源程序一起，<img src="http://octtw77pk.bkt.clouddn.com/%E6%88%AA%E5%9B%BE09.png" alt="图片">然后在VS里点头文件-&gt;添加现有项，将那三个头文件加进去，这时你会发现你自个儿的那个头文件报错了，没事，将<code>#include &lt;jni.h&gt;</code> 改成 <code>#include &quot;jni.h&quot;</code>，现在去看看，应该没有报错了~~</li>
<li><strong>dll应该放哪儿？</strong><br>好不容易生成了.dll，应该放哪儿了呢？它应该被放在两个地方，一个是项目的根目录，一个是eclipse的根目录(我用的是eclipse，intelliJ不清楚)。<del>可能需要把eclipse重启下</del></li>
<li><strong>用win32编译问题</strong><br>你以为这问题结束了？并没有！由于我们大多使用的是64位的jdk，而VS默认使用的win32的解决方案，所以我们好不容易生成的.dll是不起作用的，不过别怕，只要稍作修改就就能解决~~<br>打开VS的配置管理器，修改成如下图所示:<img src="http://octtw77pk.bkt.clouddn.com/%E6%88%AA%E5%9B%BE11.png" alt="图片"><img src="http://octtw77pk.bkt.clouddn.com/%E6%88%AA%E5%9B%BE12.png" alt="图片">重新生成一下解决方案，用新生成的dll替换之前的那两个dll（新生成的dll在<code>/项目根目录/x64/debug</code>中）<br>如果出现<code>error LNK1561: 必须定义入口点</code>,那么这样来：右键项目–&gt;属性–&gt;常规–&gt;配置类型–&gt;动态库(.dll) </li>
</ul>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>到这里你应该看到你的JNI跑起来了，尽情去玩耍她吧！！<br><img src="http://octtw77pk.bkt.clouddn.com/%E6%88%AA%E5%9B%BE10.png" alt="图片"></p>
<hr>
<p>最后附上我此前没讲的C++程序的写法<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"com_jg_model_Image_TestJNI.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function">JNIEXPORT <span class="keyword">void</span> JNICALL <span class="title">Java_com_jg_model_Image_TestJNI_sayHello</span></span></div><div class="line"><span class="params">(JNIEnv *, jclass)</span></div><div class="line">&#123;</div><div class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">"Hello World!"</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Git学习笔记]]></title>
      <url>http://yoursite.com/2016/08/30/Git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<h1 id="创建版本库"><a href="#创建版本库" class="headerlink" title="创建版本库"></a>创建版本库</h1><p>1.初始化Git仓库，使用<code>git init</code>命令　　<br>2.添加文件到Git仓库，分两步：<br>　　第一步,使用命令<code>git add &lt;file&gt;</code>，注意，可反复多次使用，添加多个文件<br>　　第二步,使用命令<code>git commit</code>,完成<br>　　//两步合一步，<code>git commit -am &quot;&quot;</code>….. 仅适用于修改文件，如果有新文件添加，还是需要两步<br>3.要随时掌握工作区的状态，使用 <code>git status</code>命令<br><a id="more"></a></p>
<h1 id="本地仓库管理"><a href="#本地仓库管理" class="headerlink" title="本地仓库管理"></a>本地仓库管理</h1><p>1.如果 <code>git status</code>告诉你有文件被修改过，用<code>git diff</code>可以查看修改内容<br>2.HEAD指向的版本就是当前的版本，因此，Git允许我们在版本的历史之间穿梭，使用命令 <code>git reset --hard commit_id</code><br>        　　git reset –hard HEAD^<br>    　　git reset –hard HEAD^^…<br>    　　git reset –hard HEAD~100<br>3.穿梭前，使用 <code>git log</code>    (git log –pretty=oneline –abbrev-commmit)<br>4.要重返未来，用 <code>git reflog</code>查看命令历史，以便确定要回到未来的哪个版本<br>5.工作区(Working Directory)就是在电脑里能看到的目录<br>　　版本库(Repository) 工作区有一个隐藏目录 .git，这就是Git的版本库<br>　　版本库里存了很多东西，其中最重要的就是stage的暂存区，还有Git为我们自动创建的第一个分支master，以及指向master的一个指针HEAD<br>6.Git跟踪并管理的是修改，而非文件，每次修改，如果不add到暂存区，那就不会加入到commit中<br>7.撤销修改<br>   　　场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令<code>git checkout -- fileName</code><br>   　　场景2：当你不仅改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃，分两步<br>　　　　第一步，用命令<code>git reset HEAD fileName</code>，就回到了场景1<br>　　　　第二步，按场景1操作<br>　　场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退<br>8.对应的，删除文件<br>    　　场景1,仅删除了工作区里的文件,rm fileName,那么用命令 <code>git checkout -- fileName</code>来恢复 (实际就是stage  –&gt; Wording Directory)<br>    　　场景2，删除了文件又提交到了stage, <code>git rm fileName</code>, 那么也是分两步        　　<br>　　　　　第一步，用命令<code>git reset HEAD fileName</code>，回到场景1         　　<br>　　　　　第二步，按场景1操作<br>    　　场景3：已经提交了删除操作到版本库，想要撤销本次删除，参考版本回退</p>
<h1 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h1><p>1.github相关,git如何将github作为远程仓库呢<br>　　(1) of course,注册一个Github账号<br>　　(2) 创建SSH Key   中文测试<br>　　<code>ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</code><br>　　地址：用户主目录, .ssh目录， id_rsa是私钥，id_rsa.pub是公钥<br>　　(3)登录Github，打开 “Account settings”,”SSH Keys”页面，点“Add SSH Key“，<br>　　填上title，在key文本中粘贴id_rssa.pub文件的内容<br>2.要克隆一个仓库，首先必须知道仓库的地址，然后使用 git clone命令克隆<br>　　Git支持多种协议，包括https，但是ssh支持的原生git协议速度最快<br>　　<code>git clone https://github.com/SiriusHsh/gitskills.git</code><br>　　<code>git clone git@github:SiriusHsh/gitskills.git</code></p>
<h1 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h1><p>1.分支操作：<br>　　查看分支：<code>git branch</code><br>　　创建分支：<code>git branch branchName</code><br>　　切换分支：<code>git checkout branchName</code>　<br>　　创建+切换分支: <code>git checkout -b branchName</code><br>　　合并某分支到当前分支：<code>git merge branchName</code><br>　　删除分支：<code>git branch -d branchName</code><br>2.当Git无法自动合并分支时，就必须首先解决冲突。解决冲突后，在提交，合并完后才能使用 <code>git log --graph --pretty=oneline --abbrev-commit</code>命令可以看到分支合并图<br>3.合并分支时，加上 –no-ff 参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并<br>而fast forward合并就看不出曾经做过合并.<br>      <code>git merge --no-ff -m &quot;XXX&quot;</code><br>4.BUG分支与保存现场<br>　　修复bug时，我们会通过创建新的bug分支进行修复，然后合并，最后删除<br>　　当手头工作没有完成时，先把工作现场 <code>git stash</code>一下，然后去修复bug，修复后，再<code>git stash pop</code>,回到现场<br><code>git stash list</code>，可以查看有哪些工作现场<br>　　修复现场有两种方法<br>　　　　一是用<code>git stash apply</code>修复，但是恢复后，stash内容并不删除，需用<code>git stash drop</code>来删除<br>　　　　二是用<code>git stash pop</code>，恢复的同时把stash的内容也删除了。<br>5.feature分支<br>　　开发一个新feature，最好新建一个分支<br>　　如果要丢弃一个没有被合并过的分支，可以通过<code>git checkout -D branchName</code><br>6.查看远程库信息,使用<code>git remote -v</code><br>7.多人协作的工作模式<br>　　(1)首先，可以试图用<code>git push origin branchName</code>推送自己的修改<br>　　(2)如果推送失败，则因为远程分支比你的本地更新，需要先用<code>git pull</code>试图合并<br>　　(3)如果合并有冲突，则解决冲突，并在本地提交<br>　　(4)没有冲突或者解决掉冲突后，再用 <code>git push origin branchName</code> 推送就能成功！<br>　　如果 <code>git pull</code> 提示“no tracking information“，则说明本地分支和远程分支的链接关系没有创建，<br>　　用命令 <code>git branch --set-upstream branchName origin/branchName</code></p>
<h1 id="标签管理"><a href="#标签管理" class="headerlink" title="标签管理"></a>标签管理</h1><p>1.创建标签<br>　　命令<code>git tag tagName</code>用于新建一个标签，默认为HEAD，也可以指定一个commit id<br>　　git tag -a tagName -m “XXXXX”  可以指定标签信息，-a 指定标签签名，-m指定说明文字<br>　　git tag -s tagName -m “XXXXX”  可以用PGP签名标签<br>　　命令git tag可以查看所有标签<br>2.操作标签<br>　　命令<code>git push origin tagName</code> 可以推送一个本地标签<br>　　命令<code>git push origin --tags</code>可以推送全部未推送过的本地标签<br>　　命令<code>git tag -d tagName</code> 可以删除一个本地标签　　<br>　　命令<code>git push origin :refs/tags/tagName</code> 可以删除一个远程标签</p>
<h1 id="自定义Git"><a href="#自定义Git" class="headerlink" title="自定义Git"></a>自定义Git</h1><p>1.忽略特殊文件<br>　　忽略某些文件时，需要编写.gitignore<br>　　.gitignore文件本身要放到版本库里，并且可以对.gitignore做版本管理<br>2.配置别名<br><code>git config --global alias.co checkout</code><br><code>git config --global alias.ci commit</code><br><code>git config --global alias.br branch</code></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://yoursite.com/2016/08/29/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><a id="more"></a>
<h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
  
  
</search>
